{"version":3,"sources":["pages/customer-group/index.js","common/components/Buttons/PrimaryButton.js","common/components/Buttons/DangerButton.js","common/components/Buttons/DefaultButton.js","common/components/Buttons/ButtonCancel.js","common/components/Buttons/ButtonDelete.js","common/components/Buttons/ButtonEdit.js","utils/format.js","components/Grid/controllers/reducer.js","components/Grid/controllers/constants.js","../node_modules/invariant/browser.js","common/components/Buttons/ButtonToolTip.js","utils/utils.js","components/Layout/PageWrapper.js","components/Grid/controllers/selectors.js","pages/home/header-page/index.js","components/Grid/controllers/actions.js","hooks/useTable.js","components/Grid/Grid.js","utils/common/checkStore.js","utils/common/reducerInjectors.js","utils/common/injectedReducers.js","services/customer-group/index.js"],"names":["CustomerGroup","useState","isLoading","setIsLoading","title","setTitle","dispatch","useDispatch","isOpen","setIsopen","useForm","form","readGrid","refresh","actions","columns","dataIndex","width","render","_","values","disabled","isAccessed","PER","NHOM_KHACH_HANG_SUA","onClick","onClickOpenModal","handleCancel","resetFields","finishAction","handleCreateCustomerGroup","createCustomerGroup","result","isSuccess","success","SAVE_SUCCESS","error","message","handleUpdateCustomerGroup","updateCustomerGroup","res","record","setFieldsValue","NHOM_KHACH_HANG_XEM","onCreate","handleDelete","confirm","icon","content","okText","cancelText","onOk","deleteCustomerGroups","then","DELETE_SUCCESS","DELETE_ERROR","catch","finally","handleDeleteCustomerGroup","confirmLoading","isShowActionAdd","NHOM_KHACH_HANG_THEM","isShowActionDelete","NHOM_KHACH_HANG_XOA","className","urlEndpoint","urlEndpointTableCustomerGroup","open","onCancel","footer","key","type","htmlType","loading","id","layout","onFinish","updateValue","code","trim","name","sequence","Item","hidden","label","rules","required","style","PrimaryButton","props","size","DangerButton","danger","DefaultButton","ButtonCancel","ButtonDelete","rest","DeleteOutlined","ButtonEdit","EditOutlined","formatCurrency","number","Number","isNaN","Intl","NumberFormat","currency","format","replaceAll","formatCurrencyInput","numberString","formatDateYMD","date","myDate","moment","isMoment","initialState","idSelections","detailSelections","gridViewReducer","state","action","produce","draft","types","payload","SET_ITEM_ID_SELECTIONS","SET_ITEM_DETAIL_SELECTIONS","module","exports","condition","a","b","c","d","e","f","undefined","Error","args","argIndex","replace","framesToPop","ButtonTooltip","wrap","tip","color","children","mapToSelectOption","data","map","x","value","permissionsAction","permissionsList","JSON","parse","localStorage","getItem","permissions","length","includes","PageWrapper","classnames","selectGridView","tableView","Search","HeaderPage","labelPrimaryBtn","onPressPrimaryBtn","isFilter","onFilter","isHideAction","itemSelections","useSelector","createSelector","globalState","justify","align","Title","level","flex","textAlign","display","flexWrap","gap","justifyContent","placeholder","onSearch","text","updateSearch","enterButton","FilterOutlined","PlusCircleOutlined","BarsOutlined","setItemIdSelections","items","setItemDetailSelections","ActionKind","currentPage","totalPage","totalElement","pageSize","searchText","sort","field","order","store","React","createContext","setState","setPage","setTotalPage","setData","setTotalElement","setLoading","setPageSize","Provider","TableProvider","initState","useReducer","useCallback","page","total","val","setSearchText","setSort","withTable","WrappedComponent","ComponentWithTableProvider","expandedRowRender","handleGetDetailSelections","handleGetSelections","hasRowSelected","isHidePagination","rowKey","shouldSaveToStore","shouldShowTotal","useInjectReducer","reducer","global","refreshGrid","filters","idsSelection","setIdsSelection","useContext","totalAmount","setTotalAmount","getSortItem","sorted","item","push","fieldName","isAscending","fetchData","params","pageIndex","fieldId","fields","filter","api","results","records","err","console","log","useEffect","gridViewActions","isArray","stringify","rowSelection","selectedRowKeys","onChange","selectedRows","clsx","dataSource","pagination","sorter","current","bordered","defaultPageSize","showSizeChanger","pageSizeOptions","showTotal","expandable","scroll","summary","summaryNumberCol","Summary","Row","index","Cell","checkStore","shape","isFunction","subscribe","getState","replaceReducer","runSaga","injectedReducers","isObject","injectedSagas","invariant","conformsTo","injectReducerFactory","isValid","isString","isEmpty","Reflect","has","createReducer","getInjectors","injectReducer","context","ReactReduxContext","input","ids","getCustomerGroupDropDowns","urlEndpointCustomerGroup"],"mappings":";koNAqMeA,UApLO,WACpB,MAAkCC,oBAAS,GAA3C,mBAAOC,EAAP,KAAkBC,EAAlB,KACA,EAA0BF,mBAAS,IAAnC,mBAAOG,EAAP,KAAcC,EAAd,KACMC,EAAWC,cACjB,EAA4BN,oBAAS,GAArC,mBAAOO,EAAP,KAAeC,EAAf,KACA,EAAe,IAAKC,UAAbC,EAAP,oBAEMC,EAAW,SAACC,GAChBP,EAASQ,IAAoBD,KAGzBE,EAAU,CACd,CACEX,MAAO,iCACPY,UAAW,OACXC,MAAO,SAET,CACEb,MAAO,kCACPY,UAAW,QAEb,CACEZ,MAAO,2CACPY,UAAW,mBACXC,MAAO,SAET,CACEb,MAAO,GACPY,UAAW,SACXC,MAAO,OACPC,OAAQ,SAACC,EAAGC,GAAJ,OAAe,kBAAC,IAAD,CAAYC,UAAWC,YAAWC,IAAIC,qBAAsBC,QAAS,kBAAMC,EAAiBN,EAAQ,sDAIzHO,EAAe,WACnBhB,EAAKiB,cACLnB,GAAU,IAGNoB,EAAe,WACnBF,IACAf,GAAS,IAiBLkB,EAAyB,uCAAG,WAAOV,GAAP,8EAChCjB,GAAa,GADmB,SAEX4B,YAAoBX,GAFT,QAE1BY,EAF0B,SAGlBA,EAAOC,WACnBJ,IACA,IAAQK,QAAQC,MAEhB,IAAQC,MAAMJ,EAAOK,SAEvBlC,GAAa,GATmB,2CAAH,sDAWzBmC,EAAyB,uCAAG,WAAOlB,GAAP,8EAChCjB,GAAa,GADmB,SAEhBoC,YAAoBnB,GAFJ,QAE5BoB,EAF4B,QAGxBP,WACNJ,IACA,IAAQK,QAAQC,MAEhB,IAAQC,MAAMI,EAAIH,SAEpBlC,GAAa,GATmB,2CAAH,sDA8BzBuB,EAAmB,WAAyB,IAAxBe,EAAuB,uDAAd,GAAIrC,EAAU,uCAC/CO,EAAK+B,eAAeD,GACpBpC,EAASD,GACTK,GAAU,IAaZ,OACE,oCACGa,YAAWC,IAAIoB,sBACd,6BACE,kBAAC,IAAD,CACEvC,MAAM,2BACNU,QAAQ,UACR8B,SAAU,kBAAMlB,EAAiB,GAAI,8CACrCmB,aAnBY,SAACzB,GACrB,IAAM0B,QAAQ,CACZ1C,MAAO,mBACP2C,KAAM,kBAAC,IAAD,MACNC,QAAS,sGACTC,OAAQ,mBACRC,WAAY,WACZC,KAAM,kBA/BwB,SAAC/B,GACjCjB,GAAa,GAEbiD,YAAqBhC,GAClBiC,MAAK,SAACb,GACDA,EAAIP,WACN,IAAQC,QAAQoB,KAChB1C,GAAS,IAET,IAAQwB,MAAMmB,QAGjBC,OAAM,WACL,IAAQpB,MAAMmB,QAEfE,SAAQ,WACPtD,GAAa,MAeHuD,CAA0BtC,IACtCuC,eAAgBzD,KAYV0D,gBAAiBtC,YAAWC,IAAIsC,sBAChCC,mBAAoBxC,YAAWC,IAAIwC,uBAErC,yBAAKC,UAAU,qBACb,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAMC,YAAaC,IAA+BnD,QAASA,MAG/D,uBACEX,MAAOA,EACP+D,KAAM3D,EACNG,KAAMA,EACNyD,SAAUzC,EACV0C,OAAQ,CACN,uBAAQ1D,KAAK,SAAS2D,IAAI,OAAO7C,QAASE,GAA1C,YAGA,uBAAQhB,KAAK,SAAS2D,IAAI,SAASC,KAAK,UAAUC,SAAS,SAASC,QAASvE,GAA7E,cAKF,uBAAMwE,GAAG,SAASC,OAAO,WAAWhE,KAAMA,EAAMiE,SAtGzC,SAACxD,GAAY,IAAD,MAEvByD,EAAc,CAChBC,KAAI,OAAE1D,QAAF,IAAEA,GAAF,UAAEA,EAAQ0D,YAAV,aAAE,EAAcC,OACpBC,KAAI,OAAE5D,QAAF,IAAEA,GAAF,UAAEA,EAAQ4D,YAAV,aAAE,EAAcD,OACpBE,SAAQ,OAAE7D,QAAF,IAAEA,GAAF,UAAEA,EAAQ6D,gBAAV,aAAE,EAAkBF,QAE1B3D,EAAOsD,IACTG,EAAW,2BAAQA,GAAR,IAAqBH,GAAE,OAAEtD,QAAF,IAAEA,OAAF,EAAEA,EAAQsD,KAC5CpC,EAA0BuC,IAE1B/C,EAA0B+C,KA4FlB,sBAAMK,KAAN,CAAWC,QAAQ,EAAMC,MAAM,KAAKJ,KAAK,MACvC,6BAGF,sBAAME,KAAN,CACEE,MAAM,iCACNJ,KAAK,OACLK,MAAO,CAAC,CAAEC,UAAU,EAAMjD,QAAS,qFAEnC,6BAEF,sBAAM6C,KAAN,CACEE,MAAM,kCACNJ,KAAK,OACLK,MAAO,CAAC,CAAEC,UAAU,EAAMjD,QAAS,sFAEnC,6BAEF,sBAAM6C,KAAN,CACEE,MAAM,MACNJ,KAAK,WACLK,MAAO,CAAC,CAAEC,UAAU,EAAMjD,QAAS,+EAEnC,uBAAOkD,MAAO,CAAEtE,MAAO,kB,qECnLxBuE,IANf,SAAuBC,GACrB,OAAO,qCAAQlB,KAAK,UAAUmB,KAAK,SAAYD,M,4PCKlCE,MANf,SAAsBF,GACpB,OAAO,qCAAQG,QAAM,EAACF,KAAK,SAAYD,KCK1BI,MANf,SAAuBJ,GACrB,OAAO,qCAAQlB,KAAK,UAAUmB,KAAK,SAAYD,K,sBCWlCK,I,qBCAAC,MAVf,YAAgD,IAAD,IAAvB3F,aAAuB,MAAf,GAAe,EAAR4F,EAAQ,iBAC7C,OACE,kBAAC,EAAD,eAAcjD,KAAM,kBAACkD,EAAA,EAAD,OAAwBD,GACzC5F,I,qBCOQ8F,MAVf,YAA8C,IAAD,IAAvB9F,aAAuB,MAAf,GAAe,EAAR4F,EAAQ,iBAC3C,OACE,kBAAC,EAAD,eAAejD,KAAM,kBAACoD,EAAA,EAAD,OAAsBH,GACxC5F,I,8DCPP,4HAEagG,EAAiB,SAACC,GAQ7B,OAPIC,OAAOC,MAAMF,IAAYA,GAAqB,OAAXA,IACrCA,EAAS,GAED,IAAIG,KAAKC,aAAa,QAAS,CACvClB,MAAO,WACPmB,SAAU,QAEDC,OAAON,GAAQO,WAAW,SAAK,KAG/BC,EAAsB,SAACC,GAClC,IAAIT,EAASS,EAAaF,WAAW,IAAK,IAC1C,OAAON,OAAOD,IAGHU,EAAgB,SAACC,GAC5B,IAAIC,EAASC,IAAOF,GACpB,OAAOE,IAAOC,SAASF,GAAhB,OAA0BA,QAA1B,IAA0BA,OAA1B,EAA0BA,EAAQN,OAAO,cAAgBM,I,iCCpBlE,uDAIaG,EAAe,CAC1BC,aAAc,GACdC,iBAAkB,IAeLC,IAZS,eAACC,EAAD,uDAASJ,EAAcK,EAAvB,8CACtBC,YAAQF,GAAO,SAACG,GACd,OAAQF,EAAOlD,MACb,KAAKqD,IACHD,EAAMN,aAAeI,EAAOI,QAC5B,MACF,KAAKD,IACHD,EAAML,iBAAmBG,EAAOI,c,iCChBxC,oEAAO,IAAMC,EAAyB,yBACzBC,EAA6B,8B,iCC+C1CC,EAAOC,QA5BS,SAASC,EAAWvB,EAAQwB,EAAGC,EAAGC,EAAGC,EAAGC,EAAGC,GAOzD,IAAKN,EAAW,CACd,IAAI9F,EACJ,QAAeqG,IAAX9B,EACFvE,EAAQ,IAAIsG,MACV,qIAGG,CACL,IAAIC,EAAO,CAACR,EAAGC,EAAGC,EAAGC,EAAGC,EAAGC,GACvBI,EAAW,GACfxG,EAAQ,IAAIsG,MACV/B,EAAOkC,QAAQ,OAAO,WAAa,OAAOF,EAAKC,UAE3C5D,KAAO,sBAIf,MADA5C,EAAM0G,YAAc,EACd1G,K,uFCjCK2G,IATO,SAACtD,GAAD,OACpB,oCACE,uBAAOuD,MAAI,GACT,uBAAS5I,MAAK,OAAEqF,QAAF,IAAEA,OAAF,EAAEA,EAAOwD,IAAKC,MAAM,OAAO5E,IAAI,QAC1CmB,EAAM0D,c,iCCNf,oEAAO,IAAMC,EAAoB,SAACC,GAOhC,OANgBA,EAAKC,KAAI,SAACC,GACxB,MAAO,CACLC,MAAOD,EAAE7E,GACTU,MAAOmE,EAAEvE,UAMF1D,EAAa,SAACmI,GACzB,GAAKA,EAAL,CAEA,IACMC,EADWC,KAAKC,MAAMC,aAAaC,QAAQ,aAChBC,YACjC,SAAIL,GAAmBA,EAAgBM,OAAS,IACvCN,EAAgBO,SAASR,M,kHCDrBS,IAVf,YAAwD,IAAjClG,EAAgC,EAAhCA,UAAWmF,EAAqB,EAArBA,SAAanD,EAAQ,iBACrD,OACE,uCAAKhC,UAAWmG,IAAW,kBAAmBnG,IAAgBgC,GAC3DmD,K,0MCLDiB,EAAiB,SAAC5C,GAAD,OAAYA,GAASA,EAAM6C,WAAcjD,K,SCQxDkD,G,OAAR,IAAQA,QAoFOC,IAlFI,SAAC,GAYb,IAAD,IAXJnK,aAWI,MAXI,GAWJ,MAVJU,eAUI,MAVM,UAUN,EATJ8B,EASI,EATJA,SACAC,EAQI,EARJA,aAQI,IAPJ2H,uBAOI,MAPc,GAOd,MANJC,yBAMI,MANgB,aAMhB,MALJC,gBAKI,SAJJC,EAII,EAJJA,SAII,IAHJC,oBAGI,aAFJ9G,0BAEI,aADJF,uBACI,SACEtD,EAAWC,cACXsK,EAAiBC,YDtBYC,YAAeX,GAAgB,SAACY,GAAD,OAAiBA,EAAY3D,iBC6B/F,OACE,yBAAKrD,UAAU,eACb,uBAAKA,UAAU,UAAUiH,QAAQ,eAAeC,MAAM,UACpD,uBAAKlH,UAAU,sBACb,sBAAYmH,MAAZ,CAAkBC,MAAO,GAAIhL,IAE/B,uBAAKiL,KAAM,EAAG9F,MAAO,CAAE+F,UAAW,UACnB,YAAZxK,EACC,uBACEyE,MAAO,CACLgG,QAAS,OACTC,SAAU,SACVC,IAAK,OACLC,eAAgB,QAGlB,kBAACpB,EAAD,CAAQtG,UAAU,sBAAsB2H,YAAY,sBAAcC,SArB7D,SAACC,GAChBvL,EAASwL,YAAaD,KAoB0EE,aAAW,IAChGrB,GACE,uBAAQnG,KAAK,UAAU9C,QAAS,kBAAMkJ,KAAY5H,KAAM,kBAACiJ,EAAA,EAAD,SAGzC,IAAjBpB,GACC,oCACGhH,GACC,uBAAQW,KAAK,UAAU9C,QAAS,kBAAMmB,KAAYG,KAAM,kBAACkJ,EAAA,EAAD,OAAxD,sBAICzB,GAAmB,kBAAC,IAAD,CAAe9E,KAAK,SAAS3C,KAAM,kBAACmJ,EAAA,EAAD,MAAkBzK,QAASgJ,GACjFD,GAEF1G,GACC,kBAAC,IAAD,CACE4B,KAAK,SACLjE,QAAS,kBAAMoB,GAAgBA,EAAagI,IAC5CxJ,UAAWwJ,EAAeb,QAH5B,YAWa,oBAAZlJ,EACTA,IACE,U,uOC7EP,SAASqL,EAAoBC,GAClC,MAAO,CACL7H,KAAMqD,IACNC,QAASuE,GAGN,SAASC,EAAwBD,GACtC,MAAO,CACL7H,KAAMqD,IACNC,QAASuE,G,qBCTPE,EACO,YADPA,EAEM,WAFNA,EAGM,WAHNA,EAIY,iBAJZA,EAKe,oBALfA,EAMS,cANTA,EAOU,eAPVA,EAQM,WARNA,EASa,kBAGNlF,EAAe,CAC1BiC,KAAM,GACNkD,YAAa,EACbC,UAAW,EACXC,aAAc,EACdC,SAAU,GACVjI,SAAS,EACTkI,WAAY,GACZC,KAAM,CACJ,CACEC,MAAO,GACPC,MAAO,MAKPC,EAAQC,IAAMC,cAAc,CAChCzF,MAAOJ,EACP8F,SAAU,kBAAM,MAChBC,QAAS,kBAAM,MACfC,aAAc,kBAAM,MACpBC,QAAS,kBAAM,MACfC,gBAAiB,kBAAM,MACvBC,WAAY,kBAAM,MAClBC,YAAa,kBAAM,QAGbC,EAAaV,EAAbU,SAEFC,EAAgB,SAAC,GAA6B,IAA3BvE,EAA0B,EAA1BA,SAAUwE,EAAgB,EAAhBA,UACjC,EAA0BC,sBACxB,SAACpG,EAAOC,GACN,OAAQA,EAAOlD,MACb,KAAK+H,EACH,OAAO,2BACF9E,GACAC,EAAOI,SAEd,KAAKyE,EACH,OAAO,2BACF9E,GADL,IAEE6B,KAAM5B,EAAOI,QAAQwB,OAEzB,KAAKiD,EACH,OAAO,2BACF9E,GADL,IAEE+E,YAAa9E,EAAOI,QAAQ0E,cAEhC,KAAKD,EACH,OAAO,2BACF9E,GADL,IAEEgF,UAAW/E,EAAOI,QAAQ2E,YAE9B,KAAKF,EACH,OAAO,2BACF9E,GADL,IAEEiF,aAAchF,EAAOI,QAAQ4E,eAEjC,KAAKH,EACH,OAAO,2BACF9E,GADL,IAEE/C,QAASgD,EAAOI,QAAQpD,UAE5B,KAAK6H,EACH,OAAO,2BACF9E,GADL,IAEEkF,SAAUjF,EAAOI,QAAQ6E,WAE7B,KAAKJ,EACH,OAAO,2BACF9E,GADL,IAEEmF,WAAYlF,EAAOI,QAAQ8E,aAE/B,KAAKL,EACH,OAAO,2BACF9E,GADL,IAEEoF,KAAMnF,EAAOI,QAAQ+E,OAEzB,QACE,OAAO,eAAKpF,MAjDgB,YAAC,eAoD9BJ,GAAiBuG,IApDxB,mBAAOnG,EAAP,KAAclH,EAAd,KAuDM4M,EAAWW,uBAAY,SAACrG,GAC5BlH,EAAS,CACPiE,KAAM+H,EACNzE,QAASL,MAEV,IAEG2F,EAAUU,uBAAY,SAACC,GAC3BxN,EAAS,CACPiE,KAAM+H,EACNzE,QAAS,CACP0E,YAAauB,OAGhB,IAEGT,EAAUQ,uBAAY,SAACxE,GAC3B/I,EAAS,CACPiE,KAAM+H,EACNzE,QAAS,CACPwB,KAAMA,OAGT,IAEG+D,EAAeS,uBAAY,SAACE,GAChCzN,EAAS,CACPiE,KAAM+H,EACNzE,QAAS,CACP2E,UAAWuB,OAGd,IAEGR,EAAaM,uBAAY,SAACG,GAC9B1N,EAAS,CACPiE,KAAM+H,EACNzE,QAAS,CACPpD,QAASuJ,OAGZ,IAEGV,EAAkBO,uBAAY,SAACE,GACnCzN,EAAS,CACPiE,KAAM+H,EACNzE,QAAS,CACP4E,aAAcsB,OAGjB,IAEGP,EAAcK,uBAAY,SAACnI,GAC/BpF,EAAS,CACPiE,KAAM+H,EACNzE,QAAS,CACP6E,SAAUhH,OAGb,IACGuI,EAAgBJ,uBAAY,SAAClB,GACjCrM,EAAS,CACPiE,KAAM+H,EACNzE,QAAS,CACP8E,WAAYA,OAGf,IACGuB,EAAUL,uBAAY,SAACjB,GAC3BtM,EAAS,CACPiE,KAAM+H,EACNzE,QAAS,CACP+E,KAAMA,OAGT,IAEH,OACE,kBAACa,EAAD,CACEjE,MAAO,CACLhC,QACA0F,WACAC,UACAC,eACAC,UACAE,aACAD,kBACAE,cACAS,gBACAC,YAGD/E,I,OAiBA,I,4NCqBQgF,ED9BR,SAAmBC,GAA6C,IAA3BT,EAA0B,uDAAdvG,EAChDiH,EAA6B,SAAC5I,GAAD,OACjC,kBAAC,EAAD,CAAekI,UAAWA,GACxB,kBAACS,EAAqB3I,KAG1B,OAAO4I,ECwBMF,EAhNF,SAAC,GAeP,IAAD,IAdJnK,iBAcI,MAdQ,GAcR,EAbJjD,EAaI,EAbJA,QACAsI,EAYI,EAZJA,KACAiF,EAWI,EAXJA,kBACAC,EAUI,EAVJA,0BACAC,EASI,EATJA,oBASI,IARJC,sBAQI,SAPJC,EAOI,EAPJA,iBAOI,IANJC,cAMI,MANK,KAML,MALJC,yBAKI,aAJJC,uBAII,SAHJ5K,EAGI,EAHJA,YACAyI,EAEI,EAFJA,SACG1G,EACC,iBACJ8I,YAAiB,CAAExK,IAlBT,YAkBcyK,cAGxB,IAAMzO,EAAWC,cACXoM,EAAa7B,aAAY,SAACtD,GAAD,OAAWA,EAAMwH,OAAOrC,cACjD/L,EAAWkK,aAAY,SAACtD,GAAD,OAAWA,EAAMwH,OAAOC,eAC/CC,EAAUpE,aAAY,SAACtD,GAAD,OAAWA,EAAMwH,OAAOE,WAEpD,EAAwCjP,mBAAS,IAAjD,mBAAOkP,EAAP,KAAqBC,EAArB,KACA,EDkK4BC,qBAAWtC,GClK/BvF,EAAR,EAAQA,MAAO0F,EAAf,EAAeA,SAAUK,EAAzB,EAAyBA,WAAYF,EAArC,EAAqCA,QACrC,EAAsCpN,mBAAS,IAA/C,mBAAOqP,EAAP,KAAoBC,EAApB,KAMMC,GAAc,SAAC5C,GACnB,IAAI6C,EAAS,GAUb,OATA7C,EAAKtD,KAAI,SAACoG,IACR,OAAIA,QAAJ,IAAIA,OAAJ,EAAIA,EAAM7C,QACR4C,EAAOE,KAAK,CACVC,UAAWF,EAAK7C,MAChBgD,YAA4B,WAAfH,EAAK5C,WAKjB2C,GAGHK,GAAYjC,uBAAY,WAC5B,GAAK5J,EAAL,CACAsJ,GAAW,GAEX,IAAMwC,EAAS,CACbrD,SAAUlF,EAAMkF,SAChBsD,UAAWxI,EAAM+E,YAAc,EAC/BI,WAAYnF,EAAMmF,WAClBC,KAAM4C,GAAYhI,EAAMoF,MACxBqD,QAAO,OAAEf,QAAF,IAAEA,OAAF,EAAEA,EAASgB,OAClBC,OAAQ,IAGVC,IACWnM,EAAa8L,GACrB1M,MAAK,SAACgN,GACL,GAAIA,IAAO,OAAIA,QAAJ,IAAIA,OAAJ,EAAIA,EAASpO,WAAW,CAAC,IAAD,EAC3BoH,GAAc,OAAPgH,QAAO,IAAPA,OAAA,EAAAA,EAAShH,OAAQ,GAC9B6D,EAAS,CACP7D,KAAI,OAAEA,QAAF,IAAEA,OAAF,EAAEA,EAAMiH,QACZ/D,aAAmB,OAANwD,QAAM,IAANA,OAAA,EAAAA,EAAQC,YAAa,EAClCvD,cAAkB,OAAJpD,QAAI,IAAJA,OAAA,EAAAA,EAAM0E,QAAS,EAC7BtJ,SAAS,IAEX8K,EAAc,OAACc,QAAD,IAACA,GAAD,UAACA,EAAShH,YAAV,aAAC,EAAeiG,kBAE9BpC,EAAS,CACP7D,KAAM,GACNoD,aAAc,OAInBjJ,OAAM,SAAC+M,GAENC,QAAQC,IAAI,QAASF,MAEtB9M,SAAQ,WACP8J,GAAW,SAGd,CAAC/F,EAAMkF,SAAUlF,EAAMoF,KAAMpF,EAAMmF,WAAY1I,EAA/C,OAA4DiL,QAA5D,IAA4DA,OAA5D,EAA4DA,EAASgB,SAExEQ,qBAAU,WACRZ,OACC,CAACxP,EAAUwP,KAEdY,qBAAU,WACRF,QAAQC,IAAI,iBAAkBvB,KAC7B,CAACA,IAEJwB,qBAAU,WACJzM,GACFiJ,EAAS,CACPP,WAAYA,EACZJ,YAAa,MAGhB,CAACI,EAAYO,EAAUjJ,IAE1ByM,qBAAU,WAMR,OALI9P,IACFkP,KA9EFxP,EAASQ,KAAoB,KAkFtB,WACLsO,EAAgB,IAChB9O,EAASqQ,EAAoC,KAC7CrQ,EAASqQ,EAAwC,QAGlD,CAAC/P,IAEJ8P,qBAAU,WACJrH,GAAQuH,kBAAQvH,IAClBgE,EAAQhE,KAGT,CAACM,KAAKkH,UAAUxH,KAEnB,IAQMyH,GAAe,CACnBC,gBAAiB5B,EACjB6B,SAAU,SAACD,EAAiBE,GAC1B7B,EAAgB2B,GAEhBvC,GAAuBA,EAAoBuC,GAC3CxC,GAA6BA,EAA0B0C,GAGnDrC,IACFtO,EAASqQ,EAAoCI,IAC7CzQ,EAASqQ,EAAwCM,OAgBvD,OACE,yBAAKjN,UAAWkN,IAAK,OAAQlN,GAAaA,IACxC,qCACEjD,QAASA,EACToQ,WAAY3J,EAAM6B,KAClB2H,SAxCW,SAACI,EAAYlC,EAASmC,GACrCnE,EAAS,CACPX,YAAa6E,EAAWE,QACxB5E,SAAU0E,EAAW1E,SACrBE,KAAMyE,EAAS,CAACA,GAAU,MAqCxBE,UAAQ,EACRH,YACE1C,GAEI,CACA8C,gBAAiB9E,GAAsBlF,EAAMkF,SAC7C+E,iBAAiB,EACjBC,gBAAiB,CAAC,IAAK,KAAM,KAAM,MACnC3D,MAAOvG,EAAMiF,aACbkF,UAAW9C,EAAkB,iCAAYrH,EAAMiF,aAAlB,uBAA2C,MAG9EhI,QAAS+C,EAAM/C,QACfmN,WAAY,CACVtD,qBAEFK,OAAQA,EACRmC,aAAcrC,EAAiBqC,GAAe,KAC9Ce,OAAQ,CAAEtI,EAAG,SACTvD,EAvBN,CAwBE8L,QAAUtK,EAAM6B,KAAKW,OAAS,GAAOhE,EAAK+L,iBArChC,kBACd,sBAAOC,QAAQC,IAAf,KACGlR,EAAQuI,KAAI,SAACC,EAAG2I,GAAJ,OACX,oCACE,sBAAOF,QAAQG,KAAf,KAAqBD,KAAK,OAAKlM,QAAL,IAAKA,OAAL,EAAKA,EAAM+L,kBAAmB3L,YAAekJ,GAAe,QAG1F,sBAAO0C,QAAQG,KAAf,QA8B0E,qB,iCChNhF,gEAMe,SAASC,EAAWrF,GACjC,IAAMsF,EAAQ,CACZ/R,SAAUgS,aACVC,UAAWD,aACXE,SAAUF,aACVG,eAAgBH,aAChBI,QAASJ,aACTK,iBAAkBC,WAClBC,cAAeD,YAEjBE,IAAUC,qBAAWhG,EAAOsF,GAAQ,4D,0KCV/B,SAASW,EAAqBjG,EAAOkG,GAC1C,OAAO,SAAuB3O,EAAKyK,GAC5BkE,GAASb,YAAWrF,GAEzB+F,IACEI,mBAAS5O,KAAS6O,kBAAQ7O,IAAQgO,qBAAWvD,GAC7C,6EAIEqE,QAAQC,IAAItG,EAAM4F,iBAAkBrO,IAAQyI,EAAM4F,iBAAiBrO,KAASyK,IAEhFhC,EAAM4F,iBAAiBrO,GAAOyK,EAC9BhC,EAAM0F,eAAea,YAAcvG,EAAM4F,qBAI9B,SAASY,EAAaxG,GAGnC,OAFAqF,YAAWrF,GAEJ,CACLyG,cAAeR,EAAqBjG,GAAO,ICdhC,IAuBT+B,EAAmB,SAAC,GAAsB,IAApBxK,EAAmB,EAAnBA,IAAKyK,EAAc,EAAdA,QACzB0E,EAAUzG,IAAMqC,WAAWqE,KACjC1G,IAAM0D,WAAU,WACd6C,EAAaE,EAAQ1G,OAAOyG,cAAclP,EAAKyK,KAC9C,CAAC0E,EAAQ1G,MAAOzI,EAAKyK,M,uDCxC1B,sLAKa7K,EAAgC,uBAMhCnC,EAAsB,SAAC8F,GAAD,OACjCuI,IARsC,wBAQC,CACrC1L,GAAImD,EAAQnD,GACZiP,MAAO9L,KAGEtF,EAAsB,SAACsF,GAAD,OACjCuI,IAdsC,wBAcC,CACrC1L,GAAImD,EAAQnD,GACZiP,MAAO9L,KAGEzE,EAAuB,SAACyE,GAAD,OAClCuI,IApBsC,wBAoBG,CACvC/G,KAAM,CAAEuK,IAAK/L,MAGJgM,EAA4B,kBAAMzD,IAAY0D,gCAAuC","file":"static/js/29.56baa003.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport { Button, Modal, Form, Input, message } from 'antd';\r\nimport { ExclamationCircleOutlined } from '@ant-design/icons';\r\nimport { useDispatch } from 'react-redux';\r\n\r\nimport { ButtonEdit } from 'common/components/Buttons';\r\nimport Grid from 'components/Grid';\r\nimport HeaderPage from 'pages/home/header-page';\r\nimport PageWrapper from 'components/Layout/PageWrapper';\r\n\r\nimport { DELETE_ERROR, DELETE_SUCCESS, SAVE_SUCCESS } from 'utils/common/messageContants';\r\nimport { urlEndpointTableCustomerGroup } from 'services/customer-group/';\r\nimport { updateCustomerGroup, createCustomerGroup, deleteCustomerGroups } from 'services/customer-group/';\r\nimport * as actions from 'redux/global/actions';\r\nimport { isAccessed } from 'utils/utils';\r\nimport { PER } from 'common/enum';\r\n\r\nconst CustomerGroup = () => {\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [title, setTitle] = useState('');\r\n  const dispatch = useDispatch();\r\n  const [isOpen, setIsopen] = useState(false);\r\n  const [form] = Form.useForm();\r\n\r\n  const readGrid = (refresh) => {\r\n    dispatch(actions.refreshGrid(refresh));\r\n  };\r\n\r\n  const columns = [\r\n    {\r\n      title: 'Mã nhóm khách hàng',\r\n      dataIndex: 'code',\r\n      width: '200px',\r\n    },\r\n    {\r\n      title: 'Tên nhóm khách hàng',\r\n      dataIndex: 'name',\r\n    },\r\n    {\r\n      title: 'Số lượng khách hàng',\r\n      dataIndex: 'numberOfCustomer',\r\n      width: '200px',\r\n    },\r\n    {\r\n      title: '',\r\n      dataIndex: 'action',\r\n      width: '30px',\r\n      render: (_, values) => <ButtonEdit disabled={!isAccessed(PER.NHOM_KHACH_HANG_SUA)} onClick={() => onClickOpenModal(values, 'Chỉnh sửa nhóm khách hàng')} />,\r\n    },\r\n  ];\r\n\r\n  const handleCancel = () => {\r\n    form.resetFields();\r\n    setIsopen(false);\r\n  };\r\n\r\n  const finishAction = () => {\r\n    handleCancel();\r\n    readGrid(true);\r\n  };\r\n\r\n  const onFinish = (values) => {\r\n    // Remove spaces on first or last string\r\n    let updateValue = {\r\n      code: values?.code?.trim(),\r\n      name: values?.name?.trim(),\r\n      sequence: values?.sequence?.trim(),\r\n    };\r\n    if (values.id) {\r\n      updateValue = { ...updateValue, id: values?.id };\r\n      handleUpdateCustomerGroup(updateValue);\r\n    } else {\r\n      handleCreateCustomerGroup(updateValue);\r\n    }\r\n  };\r\n  const handleCreateCustomerGroup = async (values) => {\r\n    setIsLoading(true);\r\n    const result = await createCustomerGroup(values);\r\n    if (result && result.isSuccess) {\r\n      finishAction();\r\n      message.success(SAVE_SUCCESS);\r\n    } else {\r\n      message.error(result.message);\r\n    }\r\n    setIsLoading(false);\r\n  };\r\n  const handleUpdateCustomerGroup = async (values) => {\r\n    setIsLoading(true);\r\n    let res = await updateCustomerGroup(values);\r\n    if (res.isSuccess) {\r\n      finishAction();\r\n      message.success(SAVE_SUCCESS);\r\n    } else {\r\n      message.error(res.message);\r\n    }\r\n    setIsLoading(false);\r\n  };\r\n  const handleDeleteCustomerGroup = (values) => {\r\n    setIsLoading(true);\r\n\r\n    deleteCustomerGroups(values)\r\n      .then((res) => {\r\n        if (res.isSuccess) {\r\n          message.success(DELETE_SUCCESS);\r\n          readGrid(true);\r\n        } else {\r\n          message.error(DELETE_ERROR);\r\n        }\r\n      })\r\n      .catch(() => {\r\n        message.error(DELETE_ERROR);\r\n      })\r\n      .finally(() => {\r\n        setIsLoading(true);\r\n      });\r\n  };\r\n  const onClickOpenModal = (record = {}, title) => {\r\n    form.setFieldsValue(record);\r\n    setTitle(title);\r\n    setIsopen(true);\r\n  };\r\n  const onClickDelete = (values) => {\r\n    Modal.confirm({\r\n      title: 'Xác Nhận',\r\n      icon: <ExclamationCircleOutlined />,\r\n      content: 'Bạn có chắc chắn muốn xóa dòng dữ liệu đã chọn?',\r\n      okText: 'Xác Nhận',\r\n      cancelText: 'Hủy',\r\n      onOk: () => handleDeleteCustomerGroup(values),\r\n      confirmLoading: isLoading,\r\n    });\r\n  };\r\n  return (\r\n    <>\r\n      {isAccessed(PER.NHOM_KHACH_HANG_XEM) && (\r\n        <div>\r\n          <HeaderPage\r\n            title=\"NHÓM KHÁCH HÀNG\"\r\n            actions=\"default\"\r\n            onCreate={() => onClickOpenModal({}, 'Thêm mới nhóm khách hàng')}\r\n            handleDelete={onClickDelete}\r\n            isShowActionAdd={isAccessed(PER.NHOM_KHACH_HANG_THEM)}\r\n            isShowActionDelete={isAccessed(PER.NHOM_KHACH_HANG_XOA)}\r\n          />\r\n          <div className=\"main__application\">\r\n            <PageWrapper>\r\n              <Grid urlEndpoint={urlEndpointTableCustomerGroup} columns={columns} />\r\n            </PageWrapper>\r\n          </div>\r\n          <Modal\r\n            title={title}\r\n            open={isOpen}\r\n            form={form}\r\n            onCancel={handleCancel}\r\n            footer={[\r\n              <Button form=\"myForm\" key=\"back\" onClick={handleCancel}>\r\n                Hủy\r\n              </Button>,\r\n              <Button form=\"myForm\" key=\"submit\" type=\"primary\" htmlType=\"submit\" loading={isLoading}>\r\n                Lưu\r\n              </Button>,\r\n            ]}\r\n          >\r\n            <Form id=\"myForm\" layout=\"vertical\" form={form} onFinish={onFinish}>\r\n              <Form.Item hidden={true} label=\"id\" name=\"id\">\r\n                <Input />\r\n              </Form.Item>\r\n\r\n              <Form.Item\r\n                label=\"Mã nhóm khách hàng\"\r\n                name=\"code\"\r\n                rules={[{ required: true, message: 'Mã nhóm khách hàng không được bỏ trống!' }]}\r\n              >\r\n                <Input />\r\n              </Form.Item>\r\n              <Form.Item\r\n                label=\"Tên nhóm khách hàng\"\r\n                name=\"name\"\r\n                rules={[{ required: true, message: 'Tên nhóm khách hàng không được bỏ trống!' }]}\r\n              >\r\n                <Input />\r\n              </Form.Item>\r\n              <Form.Item\r\n                label=\"STT\"\r\n                name=\"sequence\"\r\n                rules={[{ required: true, message: 'Số thứ tự không được bỏ trống!' }]}\r\n              >\r\n                <Input style={{ width: '100px' }} />\r\n              </Form.Item>\r\n            </Form>\r\n          </Modal>\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default CustomerGroup;\r\n","import React from 'react';\r\nimport { Button } from 'antd';\r\nfunction PrimaryButton(props) {\r\n  return <Button type=\"primary\" size=\"small\" {...props} />;\r\n}\r\n\r\nPrimaryButton.propTypes = {};\r\n\r\nexport default PrimaryButton;\r\n","import React from 'react';\r\nimport { Button } from 'antd';\r\nfunction DangerButton(props) {\r\n  return <Button danger size=\"small\" {...props} />;\r\n}\r\n\r\nDangerButton.propTypes = {};\r\n\r\nexport default DangerButton;\r\n","import React from 'react';\r\nimport { Button } from 'antd';\r\nfunction DefaultButton(props) {\r\n  return <Button type=\"default\" size=\"small\" {...props} />;\r\n}\r\n\r\nDefaultButton.propTypes = {};\r\n\r\nexport default DefaultButton;\r\n","import React from 'react';\r\nimport DefaultButton from './PrimaryButton';\r\nimport { StopOutlined } from '@ant-design/icons';\r\n\r\nfunction ButtonCancel({ title = 'Thêm mới', ...rest }) {\r\n  return (\r\n    <DefaultButton icon={<StopOutlined />} {...rest}>\r\n      {title}\r\n    </DefaultButton>\r\n  );\r\n}\r\n\r\nButtonCancel.propTypes = {};\r\n\r\nexport default ButtonCancel;\r\n","import React from 'react';\r\nimport DangerButton from './DangerButton';\r\nimport { DeleteOutlined } from '@ant-design/icons';\r\n\r\nfunction ButtonDelete({ title = '', ...rest }) {\r\n  return (\r\n    <DangerButton icon={<DeleteOutlined />} {...rest}>\r\n      {title}\r\n    </DangerButton>\r\n  );\r\n}\r\n\r\nButtonDelete.propTypes = {};\r\n\r\nexport default ButtonDelete;\r\n","import React from 'react';\r\nimport { EditOutlined } from '@ant-design/icons';\r\nimport DefaultButton from './DefaultButton';\r\n\r\nfunction ButtonEdit({ title = '', ...rest }) {\r\n  return (\r\n    <DefaultButton icon={<EditOutlined />} {...rest}>\r\n      {title}\r\n    </DefaultButton>\r\n  );\r\n}\r\n\r\nButtonEdit.propTypes = {};\r\n\r\nexport default ButtonEdit;\r\n","import moment from \"moment\";\r\n\r\nexport const formatCurrency = (number) => {\r\n  if (Number.isNaN(number) || !number || number === null) {\r\n    number = 0;\r\n  }\r\n  let vnd = new Intl.NumberFormat('vi-VN', {\r\n    style: 'currency',\r\n    currency: 'VND',\r\n  });\r\n  return vnd.format(number).replaceAll('₫', '');\r\n};\r\n\r\nexport const formatCurrencyInput = (numberString) => {\r\n  let number = numberString.replaceAll('.', '');\r\n  return Number(number);\r\n};\r\n\r\nexport const formatDateYMD = (date) => {\r\n  let myDate = moment(date);\r\n  return moment.isMoment(myDate) ? myDate?.format('YYYY-MM-DD') : myDate\r\n}\r\n","import produce from 'immer';\r\nimport * as types from './constants';\r\n\r\n// initial state\r\nexport const initialState = {\r\n  idSelections: [],\r\n  detailSelections: [],\r\n};\r\n\r\nconst gridViewReducer = (state = initialState, action) =>\r\n  produce(state, (draft) => {\r\n    switch (action.type) {\r\n      case types.SET_ITEM_ID_SELECTIONS:\r\n        draft.idSelections = action.payload;\r\n        break;\r\n      case types.SET_ITEM_DETAIL_SELECTIONS:\r\n        draft.detailSelections = action.payload;\r\n        break;\r\n    }\r\n  });\r\n\r\nexport default gridViewReducer;\r\n","export const SET_ITEM_ID_SELECTIONS = 'SET_ITEM_ID_SELECTIONS';\r\nexport const SET_ITEM_DETAIL_SELECTIONS = 'SET_ITEM_DETAIL_SELECTIONS';\r\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\n/**\n * Use invariant() to assert state which your program assumes to be true.\n *\n * Provide sprintf-style format (only %s is supported) and arguments\n * to provide information about what broke and what you were\n * expecting.\n *\n * The invariant message will be stripped in production, but the invariant\n * will remain to ensure logic does not differ in production.\n */\n\nvar invariant = function(condition, format, a, b, c, d, e, f) {\n  if (process.env.NODE_ENV !== 'production') {\n    if (format === undefined) {\n      throw new Error('invariant requires an error message argument');\n    }\n  }\n\n  if (!condition) {\n    var error;\n    if (format === undefined) {\n      error = new Error(\n        'Minified exception occurred; use the non-minified dev environment ' +\n        'for the full error message and additional helpful warnings.'\n      );\n    } else {\n      var args = [a, b, c, d, e, f];\n      var argIndex = 0;\n      error = new Error(\n        format.replace(/%s/g, function() { return args[argIndex++]; })\n      );\n      error.name = 'Invariant Violation';\n    }\n\n    error.framesToPop = 1; // we don't care about invariant's own frame\n    throw error;\n  }\n};\n\nmodule.exports = invariant;\n","import { Button, Divider, Space, Tooltip } from 'antd';\r\nimport React from 'react';\r\nconst ButtonTooltip = (props) => (\r\n  <>\r\n    <Space wrap>\r\n      <Tooltip title={props?.tip} color=\"blue\" key=\"blue\">\r\n        {props.children}\r\n      </Tooltip>\r\n    </Space>\r\n  </>\r\n);\r\nexport default ButtonTooltip;\r\n\r\n\r\n\r\n\r\n// import React from 'react';\r\n// import { Button } from 'antd';\r\n\r\n// function ButtonToolTip(props) {\r\n//   return <Button type=\"primary\" size=\"small\" {...props} />;\r\n// }\r\n\r\n// ButtonToolTip.propTypes = {};\r\n\r\n// export default ButtonToolTip;\r\n","export const mapToSelectOption = (data) => {\r\n  const options = data.map((x) => {\r\n    return {\r\n      value: x.id,\r\n      label: x.name,\r\n    };\r\n  });\r\n  return options\r\n};\r\n\r\nexport const isAccessed = (permissionsAction) => {\r\n  if (!permissionsAction) return\r\n\r\n  const userInfo = JSON.parse(localStorage.getItem('userInfo'))\r\n  const permissionsList = userInfo.permissions\r\n  if (permissionsList && permissionsList.length > 0) {\r\n    return permissionsList.includes(permissionsAction)\r\n  }\r\n\r\n  return false\r\n}\r\n","import React from 'react';\r\nimport classnames from 'classnames';\r\n\r\nimport './PageWrapper.less';\r\n\r\nfunction PageWrapper({ className, children, ...rest }) {\r\n  return (\r\n    <div className={classnames('section-wrapper', className)} {...rest}>\r\n      {children}\r\n    </div>\r\n  );\r\n}\r\n\r\nPageWrapper.propTypes = {};\r\n\r\nexport default PageWrapper;\r\n","import { createSelector } from 'reselect';\r\nimport { initialState } from './reducer';\r\n\r\nconst selectGridView = (state) => (state && state.tableView) || initialState;\r\n\r\nconst selectGridIdSelections = () => createSelector(selectGridView, (globalState) => globalState.idSelections);\r\n\r\nconst selectGridDetailSelections = () => createSelector(selectGridView, (globalState) => globalState.detailSelections);\r\n\r\nexport { selectGridView, selectGridIdSelections, selectGridDetailSelections };\r\n","import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Row, Col, Input, Button, Typography } from 'antd';\r\nimport { PlusCircleOutlined, BarsOutlined, FilterOutlined } from '@ant-design/icons';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { ButtonDelete, PrimaryButton } from 'common/components/Buttons';\r\n\r\nimport * as gridViewSelectors from 'components/Grid/controllers/selectors';\r\nimport { updateSearch } from 'redux/global/actions';\r\nimport './header.less';\r\n\r\nconst { Search } = Input;\r\n\r\nconst HeaderPage = ({\r\n  title = '',\r\n  actions = 'default',\r\n  onCreate,\r\n  handleDelete,\r\n  labelPrimaryBtn = \"\",\r\n  onPressPrimaryBtn = () => { },\r\n  isFilter = false,\r\n  onFilter,\r\n  isHideAction = false,\r\n  isShowActionDelete = true,\r\n  isShowActionAdd = true,\r\n}) => {\r\n  const dispatch = useDispatch();\r\n  const itemSelections = useSelector(gridViewSelectors.selectGridIdSelections());\r\n\r\n  const onSearch = (text) => {\r\n    dispatch(updateSearch(text));\r\n  };\r\n\r\n\r\n  return (\r\n    <div className=\"header-page\">\r\n      <Row className=\"wrapper\" justify=\"space-around\" align=\"center\">\r\n        <Col className=\"header-page__title\">\r\n          <Typography.Title level={3}>{title}</Typography.Title>\r\n        </Col>\r\n        <Col flex={1} style={{ textAlign: 'right' }}>\r\n          {actions === 'default' ? (\r\n            <Row\r\n              style={{\r\n                display: 'flex',\r\n                flexWrap: 'nowrap',\r\n                gap: '16px',\r\n                justifyContent: 'end',\r\n              }}\r\n            >\r\n              <Search className=\"header-page__search\" placeholder=\"Tìm kiếm...\" onSearch={onSearch} enterButton />\r\n              {isFilter &&\r\n                (<Button type=\"primary\" onClick={() => onFilter()} icon={<FilterOutlined />}>\r\n                </Button>)\r\n              }\r\n              {isHideAction === false && (\r\n                <>\r\n                  {isShowActionAdd && (\r\n                    <Button type=\"primary\" onClick={() => onCreate()} icon={<PlusCircleOutlined />}>\r\n                      Thêm mới\r\n                    </Button>\r\n                  )}\r\n                  {!!labelPrimaryBtn && <PrimaryButton size=\"medium\" icon={<BarsOutlined />} onClick={onPressPrimaryBtn}>\r\n                    {labelPrimaryBtn}\r\n                  </PrimaryButton>}\r\n                  {isShowActionDelete && (\r\n                    <ButtonDelete\r\n                      size=\"medium\"\r\n                      onClick={() => handleDelete && handleDelete(itemSelections)}\r\n                      disabled={!itemSelections.length}\r\n                    >\r\n                      Xóa\r\n                    </ButtonDelete>\r\n                  )}\r\n                </>\r\n              )}\r\n            </Row>\r\n          ) : typeof actions === 'function' ? (\r\n            actions()\r\n          ) : null}\r\n        </Col>\r\n      </Row>\r\n    </div>\r\n  );\r\n};\r\n\r\nHeaderPage.propTypes = {\r\n  title: PropTypes.string,\r\n  actions: PropTypes.oneOfType([PropTypes.string, PropTypes.func, PropTypes.bool]),\r\n  onCreate: PropTypes.func,\r\n  handleDelete: PropTypes.func,\r\n  labelPrimaryBtn: PropTypes.string,\r\n  onPressPrimaryBtn: PropTypes.func,\r\n};\r\n\r\nexport default HeaderPage;\r\n","import * as types from './constants';\r\n\r\nexport function setItemIdSelections(items) {\r\n  return {\r\n    type: types.SET_ITEM_ID_SELECTIONS,\r\n    payload: items,\r\n  };\r\n}\r\nexport function setItemDetailSelections(items) {\r\n  return {\r\n    type: types.SET_ITEM_DETAIL_SELECTIONS,\r\n    payload: items,\r\n  };\r\n}\r\n","import React, { useContext, useReducer, useCallback } from 'react';\r\n\r\nconst ActionKind = {\r\n  SET_STATE: 'SET_STATE',\r\n  SET_DATA: 'SET_DATA',\r\n  SET_PAGE: 'SET_PAGE',\r\n  SET_TOTAL_PAGE: 'SET_TOTAL_PAGE',\r\n  SET_TOTAL_ELEMENT: 'SET_TOTAL_ELEMENT',\r\n  SET_LOADING: 'SET_LOADING',\r\n  SET_PAGESIZE: 'SET_PAGESIZE',\r\n  SET_SORT: 'SET_SORT',\r\n  SET_SEARCH_TEXT: 'SET_SEARCH_TEXT',\r\n};\r\n\r\nexport const initialState = {\r\n  data: [],\r\n  currentPage: 1,\r\n  totalPage: 1,\r\n  totalElement: 0,\r\n  pageSize: 10,\r\n  loading: false,\r\n  searchText: '',\r\n  sort: [\r\n    {\r\n      field: '',\r\n      order: '',\r\n    },\r\n  ],\r\n};\r\n\r\nconst store = React.createContext({\r\n  state: initialState,\r\n  setState: () => null,\r\n  setPage: () => null,\r\n  setTotalPage: () => null,\r\n  setData: () => null,\r\n  setTotalElement: () => null,\r\n  setLoading: () => null,\r\n  setPageSize: () => null,\r\n});\r\n\r\nconst { Provider } = store;\r\n\r\nconst TableProvider = ({ children, initState }) => {\r\n  const [state, dispatch] = useReducer(\r\n    (state, action) => {\r\n      switch (action.type) {\r\n        case ActionKind.SET_STATE:\r\n          return {\r\n            ...state,\r\n            ...action.payload,\r\n          };\r\n        case ActionKind.SET_DATA:\r\n          return {\r\n            ...state,\r\n            data: action.payload.data,\r\n          };\r\n        case ActionKind.SET_PAGE:\r\n          return {\r\n            ...state,\r\n            currentPage: action.payload.currentPage,\r\n          };\r\n        case ActionKind.SET_TOTAL_PAGE:\r\n          return {\r\n            ...state,\r\n            totalPage: action.payload.totalPage,\r\n          };\r\n        case ActionKind.SET_TOTAL_ELEMENT:\r\n          return {\r\n            ...state,\r\n            totalElement: action.payload.totalElement,\r\n          };\r\n        case ActionKind.SET_LOADING:\r\n          return {\r\n            ...state,\r\n            loading: action.payload.loading,\r\n          };\r\n        case ActionKind.SET_PAGESIZE:\r\n          return {\r\n            ...state,\r\n            pageSize: action.payload.pageSize,\r\n          };\r\n        case ActionKind.SET_SEARCH_TEXT:\r\n          return {\r\n            ...state,\r\n            searchText: action.payload.searchText,\r\n          };\r\n        case ActionKind.SET_SORT:\r\n          return {\r\n            ...state,\r\n            sort: action.payload.sort,\r\n          };\r\n        default:\r\n          return { ...state };\r\n      }\r\n    },\r\n    { ...initialState, ...initState },\r\n  );\r\n\r\n  const setState = useCallback((state) => {\r\n    dispatch({\r\n      type: ActionKind.SET_STATE,\r\n      payload: state,\r\n    });\r\n  }, []);\r\n\r\n  const setPage = useCallback((page) => {\r\n    dispatch({\r\n      type: ActionKind.SET_PAGE,\r\n      payload: {\r\n        currentPage: page,\r\n      },\r\n    });\r\n  }, []);\r\n\r\n  const setData = useCallback((data) => {\r\n    dispatch({\r\n      type: ActionKind.SET_DATA,\r\n      payload: {\r\n        data: data,\r\n      },\r\n    });\r\n  }, []);\r\n\r\n  const setTotalPage = useCallback((total) => {\r\n    dispatch({\r\n      type: ActionKind.SET_TOTAL_PAGE,\r\n      payload: {\r\n        totalPage: total,\r\n      },\r\n    });\r\n  }, []);\r\n\r\n  const setLoading = useCallback((val) => {\r\n    dispatch({\r\n      type: ActionKind.SET_LOADING,\r\n      payload: {\r\n        loading: val,\r\n      },\r\n    });\r\n  }, []);\r\n\r\n  const setTotalElement = useCallback((total) => {\r\n    dispatch({\r\n      type: ActionKind.SET_TOTAL_ELEMENT,\r\n      payload: {\r\n        totalElement: total,\r\n      },\r\n    });\r\n  }, []);\r\n\r\n  const setPageSize = useCallback((size) => {\r\n    dispatch({\r\n      type: ActionKind.SET_PAGESIZE,\r\n      payload: {\r\n        pageSize: size,\r\n      },\r\n    });\r\n  }, []);\r\n  const setSearchText = useCallback((searchText) => {\r\n    dispatch({\r\n      type: ActionKind.SET_SEARCH_TEXT,\r\n      payload: {\r\n        searchText: searchText,\r\n      },\r\n    });\r\n  }, []);\r\n  const setSort = useCallback((sort) => {\r\n    dispatch({\r\n      type: ActionKind.SET_SORT,\r\n      payload: {\r\n        sort: sort,\r\n      },\r\n    });\r\n  }, []);\r\n\r\n  return (\r\n    <Provider\r\n      value={{\r\n        state,\r\n        setState,\r\n        setPage,\r\n        setTotalPage,\r\n        setData,\r\n        setLoading,\r\n        setTotalElement,\r\n        setPageSize,\r\n        setSearchText,\r\n        setSort,\r\n      }}\r\n    >\r\n      {children}\r\n    </Provider>\r\n  );\r\n};\r\n\r\nexport default TableProvider;\r\n\r\n// HOC to wrap component with TableProvider\r\nexport function withTable(WrappedComponent, initState = initialState) {\r\n  const ComponentWithTableProvider = (props) => (\r\n    <TableProvider initState={initState}>\r\n      <WrappedComponent {...props} />\r\n    </TableProvider>\r\n  );\r\n  return ComponentWithTableProvider;\r\n}\r\n\r\nexport const useTable = () => useContext(store);\r\n","import React, { useEffect, useCallback, useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Table } from 'antd';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport clsx from 'classnames';\r\nimport { isArray } from 'lodash';\r\n\r\nimport * as api from 'config/axios';\r\nimport * as actions from 'redux/global/actions';\r\nimport reducer from './controllers/reducer';\r\n// import saga from './controllers/saga';\r\nimport * as gridViewActions from './controllers/actions';\r\nimport { useInjectReducer } from 'utils/common/injectedReducers';\r\n// import { useInjectSaga } from 'utils/common/injectSaga';\r\nimport { useTable, withTable } from 'hooks/useTable';\r\n\r\nimport './Grid.less';\r\nimport { formatCurrency } from 'utils/format';\r\n\r\nconst key = 'tableView';\r\n\r\nconst Grid = ({\r\n  className = '',\r\n  columns,\r\n  data,\r\n  expandedRowRender,\r\n  handleGetDetailSelections,\r\n  handleGetSelections,\r\n  hasRowSelected = true,\r\n  isHidePagination,\r\n  rowKey = 'id',\r\n  shouldSaveToStore = true,\r\n  shouldShowTotal = true,\r\n  urlEndpoint,\r\n  pageSize,\r\n  ...rest\r\n}) => {\r\n  useInjectReducer({ key, reducer });\r\n  // useInjectSaga({ key, saga });\r\n\r\n  const dispatch = useDispatch();\r\n  const searchText = useSelector((state) => state.global.searchText);\r\n  const readGrid = useSelector((state) => state.global.refreshGrid);\r\n  const filters = useSelector((state) => state.global.filters);\r\n\r\n  const [idsSelection, setIdsSelection] = useState([]);\r\n  const { state, setState, setLoading, setData } = useTable();\r\n  const [totalAmount, setTotalAmount] = useState('');\r\n\r\n  const resetState = () => {\r\n    dispatch(actions.refreshGrid(false));\r\n  };\r\n\r\n  const getSortItem = (sort) => {\r\n    let sorted = [];\r\n    sort.map((item) => {\r\n      if (item?.field) {\r\n        sorted.push({\r\n          fieldName: item.field,\r\n          isAscending: item.order === 'ascend',\r\n        });\r\n      }\r\n    });\r\n\r\n    return sorted;\r\n  };\r\n\r\n  const fetchData = useCallback(() => {\r\n    if (!urlEndpoint) return;\r\n    setLoading(true);\r\n\r\n    const params = {\r\n      pageSize: state.pageSize,\r\n      pageIndex: state.currentPage - 1,\r\n      searchText: state.searchText,\r\n      sort: getSortItem(state.sort),\r\n      fieldId: filters?.fields,\r\n      filter: [],\r\n    };\r\n\r\n    api\r\n      .sendGet(urlEndpoint, params)\r\n      .then((results) => {\r\n        if (results && results?.isSuccess) {\r\n          const data = results?.data || {};\r\n          setState({\r\n            data: data?.records,\r\n            currentPage: params?.pageIndex || 1,\r\n            totalElement: data?.total || 0,\r\n            loading: false,\r\n          });\r\n          setTotalAmount(results?.data?.totalAmount);\r\n        } else {\r\n          setState({\r\n            data: [],\r\n            totalElement: 0,\r\n          });\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        // eslint-disable-next-line no-console\r\n        console.log('err: ', err);\r\n      })\r\n      .finally(() => {\r\n        setLoading(false);\r\n      });\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [state.pageSize, state.sort, state.searchText, urlEndpoint, filters?.fields]);\r\n\r\n  useEffect(() => {\r\n    fetchData();\r\n  }, [dispatch, fetchData]);\r\n\r\n  useEffect(() => {\r\n    console.log('filtersfilters', filters);\r\n  }, [filters]);\r\n\r\n  useEffect(() => {\r\n    if (urlEndpoint) {\r\n      setState({\r\n        searchText: searchText,\r\n        currentPage: 1,\r\n      });\r\n    }\r\n  }, [searchText, setState, urlEndpoint]);\r\n\r\n  useEffect(() => {\r\n    if (readGrid) {\r\n      fetchData();\r\n      resetState();\r\n    }\r\n\r\n    return () => {\r\n      setIdsSelection([]);\r\n      dispatch(gridViewActions.setItemIdSelections([]));\r\n      dispatch(gridViewActions.setItemDetailSelections([]));\r\n    };\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [readGrid]);\r\n\r\n  useEffect(() => {\r\n    if (data && isArray(data)) {\r\n      setData(data);\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [JSON.stringify(data)]);\r\n\r\n  const onChange = (pagination, filters, sorter) => {\r\n    setState({\r\n      currentPage: pagination.current,\r\n      pageSize: pagination.pageSize,\r\n      sort: sorter ? [sorter] : [],\r\n    });\r\n  };\r\n\r\n  const rowSelection = {\r\n    selectedRowKeys: idsSelection,\r\n    onChange: (selectedRowKeys, selectedRows) => {\r\n      setIdsSelection(selectedRowKeys);\r\n      // handleCallback\r\n      handleGetSelections && handleGetSelections(selectedRowKeys);\r\n      handleGetDetailSelections && handleGetDetailSelections(selectedRows);\r\n\r\n      // save to redux gridView\r\n      if (shouldSaveToStore) {\r\n        dispatch(gridViewActions.setItemIdSelections(selectedRowKeys));\r\n        dispatch(gridViewActions.setItemDetailSelections(selectedRows));\r\n      }\r\n    },\r\n  };\r\n\r\n  const summary = () => (\r\n    <Table.Summary.Row>\r\n      {columns.map((x, index) => (\r\n        <>\r\n          <Table.Summary.Cell>{index === rest?.summaryNumberCol ? formatCurrency(totalAmount) : ''}</Table.Summary.Cell>\r\n        </>\r\n      ))}\r\n      <Table.Summary.Cell></Table.Summary.Cell>\r\n    </Table.Summary.Row>\r\n  );\r\n\r\n  return (\r\n    <div className={clsx('grid', className && className)}>\r\n      <Table\r\n        columns={columns}\r\n        dataSource={state.data}\r\n        onChange={onChange}\r\n        bordered\r\n        pagination={\r\n          isHidePagination\r\n            ? false\r\n            : {\r\n              defaultPageSize: pageSize ? pageSize : state.pageSize,\r\n              showSizeChanger: true,\r\n              pageSizeOptions: ['5', '10', '20', '50'],\r\n              total: state.totalElement,\r\n              showTotal: shouldShowTotal ? () => `Có ${state.totalElement} dữ liệu` : null,\r\n            }\r\n        }\r\n        loading={state.loading}\r\n        expandable={{\r\n          expandedRowRender,\r\n        }}\r\n        rowKey={rowKey}\r\n        rowSelection={hasRowSelected ? rowSelection : null}\r\n        scroll={{ x: '100%' }}\r\n        {...rest}\r\n        summary={(state.data.length > 0 && !!rest.summaryNumberCol) ? summary : () => { }}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nGrid.propTypes = {\r\n  className: PropTypes.string,\r\n  columns: PropTypes.array,\r\n  data: PropTypes.array,\r\n  expandedRowRender: PropTypes.any,\r\n  handleGetDetailSelections: PropTypes.func,\r\n  handleGetSelections: PropTypes.func,\r\n  hasRowSelected: PropTypes.bool,\r\n  isHidePagination: PropTypes.bool,\r\n  rowKey: PropTypes.string,\r\n  shouldSaveToStore: PropTypes.bool,\r\n  shouldShowTotal: PropTypes.bool,\r\n  urlEndpoint: PropTypes.oneOfType([PropTypes.string]),\r\n};\r\n\r\nexport default withTable(Grid);\r\n","import { conformsTo, isFunction, isObject } from 'lodash';\r\nimport invariant from 'invariant';\r\n\r\n/**\r\n * Validate the shape of redux store\r\n */\r\nexport default function checkStore(store) {\r\n  const shape = {\r\n    dispatch: isFunction,\r\n    subscribe: isFunction,\r\n    getState: isFunction,\r\n    replaceReducer: isFunction,\r\n    runSaga: isFunction,\r\n    injectedReducers: isObject,\r\n    injectedSagas: isObject,\r\n  };\r\n  invariant(conformsTo(store, shape), '(app/utils...) injectors: Expected a valid redux store');\r\n}\r\n","import invariant from 'invariant';\r\nimport { isEmpty, isFunction, isString } from 'lodash';\r\n\r\nimport checkStore from './checkStore';\r\nimport createReducer from '../../reducers';\r\n\r\nexport function injectReducerFactory(store, isValid) {\r\n  return function injectReducer(key, reducer) {\r\n    if (!isValid) checkStore(store);\r\n\r\n    invariant(\r\n      isString(key) && !isEmpty(key) && isFunction(reducer),\r\n      '(app/utils...) injectReducer: Expected `reducer` to be a reducer function',\r\n    );\r\n\r\n    // Check `store.injectedReducers[key] === reducer` for hot reloading when a key is the same but a reducer is different\r\n    if (Reflect.has(store.injectedReducers, key) && store.injectedReducers[key] === reducer) return;\r\n\r\n    store.injectedReducers[key] = reducer; // eslint-disable-line no-param-reassign\r\n    store.replaceReducer(createReducer(store.injectedReducers));\r\n  };\r\n}\r\n\r\nexport default function getInjectors(store) {\r\n  checkStore(store);\r\n\r\n  return {\r\n    injectReducer: injectReducerFactory(store, true),\r\n  };\r\n}\r\n","import React from 'react';\r\nimport hoistNonReactStatics from 'hoist-non-react-statics';\r\nimport { ReactReduxContext } from 'react-redux';\r\n\r\nimport getInjectors from './reducerInjectors';\r\n\r\n/**\r\n * Dynamically injects a reducer\r\n *\r\n * @param {string} key A key of the reducer\r\n * @param {function} reducer A reducer that will be injected\r\n *\r\n */\r\nexport default ({ key, reducer }) =>\r\n  (WrappedComponent) => {\r\n    class ReducerInjector extends React.Component {\r\n      static WrappedComponent = WrappedComponent;\r\n\r\n      static contextType = ReactReduxContext;\r\n\r\n      static displayName = `withReducer(${WrappedComponent.displayName || WrappedComponent.name || 'Component'})`;\r\n\r\n      constructor(props, context) {\r\n        super(props, context);\r\n\r\n        getInjectors(context.store).injectReducer(key, reducer);\r\n      }\r\n\r\n      render() {\r\n        return <WrappedComponent {...this.props} />;\r\n      }\r\n    }\r\n\r\n    return hoistNonReactStatics(ReducerInjector, WrappedComponent);\r\n  };\r\n\r\nconst useInjectReducer = ({ key, reducer }) => {\r\n  const context = React.useContext(ReactReduxContext);\r\n  React.useEffect(() => {\r\n    getInjectors(context.store).injectReducer(key, reducer);\r\n  }, [context.store, key, reducer]);\r\n};\r\n\r\nexport { useInjectReducer };\r\n","/** @format */\r\n\r\nimport * as api from '../../config/axios';\r\n\r\nexport const urlEndpointCustomerGroup = '/api/customer-groups/';\r\nexport const urlEndpointTableCustomerGroup = '/api/customer-groups';\r\n\r\nexport const getCustomerGroupById = (id) => api.sendGet(urlEndpointCustomerGroup + id);\r\n\r\nexport const getCustomerGroups = (data) => api.sendGet(urlEndpointCustomerGroup, data);\r\n\r\nexport const createCustomerGroup = (payload) =>\r\n  api.sendPost(urlEndpointCustomerGroup, {\r\n    id: payload.id,\r\n    input: payload,\r\n  });\r\n\r\nexport const updateCustomerGroup = (payload) =>\r\n  api.sendPost(urlEndpointCustomerGroup, {\r\n    id: payload.id,\r\n    input: payload,\r\n  });\r\n\r\nexport const deleteCustomerGroups = (payload) =>\r\n  api.sendDelete(urlEndpointCustomerGroup, {\r\n    data: { ids: payload },\r\n  });\r\n\r\nexport const getCustomerGroupDropDowns = () => api.sendGet(urlEndpointCustomerGroup + 'dropdown', '');\r\n"],"sourceRoot":""}