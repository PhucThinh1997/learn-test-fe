{"version":3,"sources":["pages/department/CreateAndUpdate.js","pages/department/index.js","common/components/Buttons/PrimaryButton.js","common/components/Buttons/DangerButton.js","common/components/Buttons/DefaultButton.js","common/components/Buttons/ButtonCancel.js","common/components/Buttons/ButtonDelete.js","common/components/Buttons/ButtonEdit.js","utils/format.js","components/Grid/controllers/reducer.js","components/Grid/controllers/constants.js","../node_modules/invariant/browser.js","common/components/Buttons/ButtonToolTip.js","utils/utils.js","components/Layout/PageWrapper.js","components/Grid/controllers/selectors.js","pages/home/header-page/index.js","components/Grid/controllers/actions.js","hooks/useTable.js","components/Grid/Grid.js","utils/common/checkStore.js","utils/common/reducerInjectors.js","utils/common/injectedReducers.js","services/department/index.js"],"names":["CreateAndUpdate","props","isOpen","ID","onClose","title","form","reload","setCode","dropdownDepartment","useState","setIsLoading","handleCancel","resetFields","handleCreateDepartment","values","createDepartment","result","isSuccess","message","success","SAVE_SUCCESS","error","handleUpdateDepartment","updateDepartment","open","className","onCancel","footer","key","onClick","type","htmlType","id","layout","onFinish","updateValues","code","trim","name","mandates","location","sequence","parentId","getFieldValue","input","Item","hidden","label","rules","required","Department","dispatch","useDispatch","setIsopen","setDropDownDepartment","useForm","columns","dataIndex","minWidth","width","render","_","disabled","isAccessed","PER","KHOA_PHONG_BAN_SUA","onClickUpdate","useEffect","getDepartments","dropdownDepartments","response","data","readGrid","refresh","actions","record","setFieldsValue","KHOA_PHONG_BAN_XEM","onCreate","handleDelete","length","confirm","icon","ExclamationCircleOutlined","content","okText","cancelText","onOk","deleteDepartments","then","res","DELETE_SUCCESS","DELETE_ERROR","catch","isShowActionAdd","KHOA_PHONG_BAN_THEM","isShowActionDelete","KHOA_PHONG_BAN_XOA","PageWrapper","Grid","urlEndpoint","urlEndpointTableDepartment","setMaPhongBan","PrimaryButton","size","DangerButton","danger","DefaultButton","ButtonCancel","ButtonDelete","rest","DeleteOutlined","ButtonEdit","EditOutlined","formatCurrency","number","Number","isNaN","Intl","NumberFormat","style","currency","format","replaceAll","formatCurrencyInput","numberString","formatDateYMD","date","myDate","moment","isMoment","initialState","idSelections","detailSelections","gridViewReducer","state","action","produce","draft","types","payload","SET_ITEM_ID_SELECTIONS","SET_ITEM_DETAIL_SELECTIONS","module","exports","condition","a","b","c","d","e","f","undefined","Error","args","argIndex","replace","framesToPop","ButtonTooltip","wrap","tip","color","children","mapToSelectOption","map","x","value","permissionsAction","permissionsList","JSON","parse","localStorage","getItem","permissions","includes","classnames","selectGridView","tableView","Search","HeaderPage","labelPrimaryBtn","onPressPrimaryBtn","isFilter","onFilter","isHideAction","itemSelections","useSelector","createSelector","globalState","justify","align","Title","level","flex","textAlign","display","flexWrap","gap","justifyContent","placeholder","onSearch","text","updateSearch","enterButton","FilterOutlined","PlusCircleOutlined","BarsOutlined","setItemIdSelections","items","setItemDetailSelections","ActionKind","currentPage","totalPage","totalElement","pageSize","loading","searchText","sort","field","order","store","React","createContext","setState","setPage","setTotalPage","setData","setTotalElement","setLoading","setPageSize","Provider","TableProvider","initState","useReducer","useCallback","page","total","val","setSearchText","setSort","withTable","WrappedComponent","ComponentWithTableProvider","expandedRowRender","handleGetDetailSelections","handleGetSelections","hasRowSelected","isHidePagination","rowKey","shouldSaveToStore","shouldShowTotal","useInjectReducer","reducer","global","refreshGrid","filters","idsSelection","setIdsSelection","useContext","totalAmount","setTotalAmount","getSortItem","sorted","item","push","fieldName","isAscending","fetchData","params","pageIndex","fieldId","fields","filter","api","results","records","err","console","log","finally","gridViewActions","isArray","stringify","rowSelection","selectedRowKeys","onChange","selectedRows","clsx","dataSource","pagination","sorter","current","bordered","defaultPageSize","showSizeChanger","pageSizeOptions","showTotal","expandable","scroll","summary","summaryNumberCol","Summary","Row","index","Cell","checkStore","shape","isFunction","subscribe","getState","replaceReducer","runSaga","injectedReducers","isObject","injectedSagas","invariant","conformsTo","injectReducerFactory","isValid","isString","isEmpty","Reflect","has","createReducer","getInjectors","injectReducer","context","ReactReduxContext","ids","urlEndpointDepartment"],"mappings":"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","file":"static/js/28.f825bfca.chunk.js","sourcesContent":["/* eslint-disable react/prop-types */\r\nimport React, { useEffect, useState } from 'react';\r\nimport { Button, Modal, Form, Input, message, InputNumber, Select } from 'antd';\r\nimport { createDepartment, getDepartmentById, updateDepartment } from 'services/department/index';\r\nimport { SAVE_SUCCESS } from 'utils/common/messageContants';\r\nimport './style.less';\r\n\r\nconst CreateAndUpdate = (props) => {\r\n  const { isOpen, ID, onClose, title, form, reload, setCode, dropdownDepartment } = props;\r\n  const [isLoading, setIsLoading] = useState(false);\r\n\r\n  const handleCancel = () => {\r\n    form.resetFields();\r\n    onClose();\r\n  };\r\n\r\n  const onFinish = (values) => {\r\n    let updateValues = {\r\n      code: values?.code?.trim() || '',\r\n      name: values?.name?.trim() || '',\r\n      mandates: values?.mandates?.trim() || '',\r\n      location: values?.location?.trim() || '',\r\n      sequence: values?.sequence,\r\n      parentId: values?.parentId,\r\n    };\r\n\r\n    const id = form.getFieldValue('id')\r\n    if (id) {\r\n      updateValues = { ...updateValues, id: id};\r\n      handleUpdateDepartment({ id: id, input: updateValues });\r\n    } else {\r\n      handleCreateDepartment(updateValues);\r\n    }\r\n  };\r\n  const handleCreateDepartment = async (values) => {\r\n    setIsLoading(true);\r\n    const result = await createDepartment(values);\r\n    if (result.isSuccess) {\r\n      handleCancel();\r\n      reload(true);\r\n      message.success(SAVE_SUCCESS);\r\n    } else {\r\n      message.error(result.message);\r\n    }\r\n    setIsLoading(false);\r\n  };\r\n\r\n  const handleUpdateDepartment = async (values) => {\r\n    setIsLoading(true);\r\n    const result = await updateDepartment(values);\r\n    if (result.isSuccess) {\r\n      handleCancel();\r\n      reload(true);\r\n\r\n      message.success(SAVE_SUCCESS);\r\n    } else {\r\n      message.error(result.message);\r\n    }\r\n    setIsLoading(false);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Modal\r\n        title={title}\r\n        open={isOpen}\r\n        className=\"forn-create-department\"\r\n        form={form}\r\n        onCancel={handleCancel}\r\n        footer={[\r\n          <Button form=\"myForm\" key=\"back\" onClick={handleCancel}>\r\n            Hủy\r\n          </Button>,\r\n          <Button form=\"myForm\" key=\"submit\" type=\"primary\" htmlType=\"submit\">\r\n            Lưu\r\n          </Button>,\r\n        ]}\r\n      >\r\n        <Form id=\"myForm\" form={form} layout=\"vertical\" onFinish={onFinish}>\r\n          {ID && <Form.Item hidden={true} name=\"id\"></Form.Item>}\r\n          <Form.Item\r\n            label=\"Mã Khoa/Phòng/Ban\"\r\n            name=\"code\"\r\n            rules={[{ required: true, message: 'Mã khoa/phòng/ban không được bỏ trống!' }]}\r\n          >\r\n            <Input />\r\n          </Form.Item>\r\n          <Form.Item\r\n            label=\"Tên Khoa/Phòng/Ban\"\r\n            name=\"name\"\r\n            rules={[{ required: true, message: 'Tên khoa/phòng/ban không được bỏ trống!' }]}\r\n          >\r\n            <Input />\r\n          </Form.Item>\r\n          <Form.Item label=\"Chức năng nhiệm vụ\" name=\"mandates\">\r\n            <Input />\r\n          </Form.Item>\r\n          <Form.Item label=\"Vị trí\" name=\"location\">\r\n            <Input />\r\n          </Form.Item>\r\n          {/* <Form.Item\r\n            label=\"Thuộc Khoa/Phòng/Ban\"\r\n            name=\"parentId\"\r\n            // rules={[{ required: true, message: 'Vui lòng nhập Thuộc Khoa/Phòng/Ban!' }]}\r\n          >\r\n            <Select>\r\n              {dropdownDepartment &&\r\n                dropdownDepartment.map((item, index) => (\r\n                  <Select.Option key={index} value={item.id}>\r\n                    {item.name}\r\n                  </Select.Option>\r\n                ))}\r\n            </Select>\r\n          </Form.Item> */}\r\n          <Form.Item label=\"Thứ tự sắp xếp\" name=\"sequence\">\r\n            <InputNumber />\r\n          </Form.Item>\r\n        </Form>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nCreateAndUpdate.propTypes = {};\r\nexport default CreateAndUpdate;\r\n","import { Form, message, Modal } from 'antd';\r\nimport React, { useState, useEffect } from 'react';\r\nimport { ExclamationCircleOutlined } from '@ant-design/icons';\r\nimport { DELETE_ERROR, DELETE_SUCCESS } from 'utils/common/messageContants';\r\nimport { deleteDepartments } from 'services/department/index';\r\nimport HeaderPage from 'pages/home/header-page';\r\nimport PageWrapper from 'components/Layout/PageWrapper';\r\nimport Grid from 'components/Grid';\r\nimport { urlEndpointTableDepartment, dropdownDepartments } from 'services/department/index';\r\nimport CreateAndUpdate from './CreateAndUpdate';\r\nimport { useDispatch } from 'react-redux';\r\nimport * as actions from 'redux/global/actions';\r\nimport { ButtonEdit } from 'common/components/Buttons';\r\nimport { isAccessed } from 'utils/utils';\r\nimport { PER } from 'common/enum';\r\n\r\nconst Department = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  const [isOpen, setIsopen] = useState(false);\r\n  const [code, setCode] = useState('');\r\n  const [dropdownDepartment, setDropDownDepartment] = useState([]);\r\n  const [form] = Form.useForm();\r\n\r\n  const columns = [\r\n    {\r\n      title: 'Mã Khoa/Phòng/Ban',\r\n      dataIndex: 'code',\r\n      minWidth: 200,\r\n    },\r\n    {\r\n      title: 'Tên Khoa/Phòng/Ban',\r\n      dataIndex: 'name',\r\n      minWidth: 300,\r\n    },\r\n    {\r\n      title: 'Chức năng nhiệm vụ',\r\n      dataIndex: 'mandates',\r\n      minWidth: 300,\r\n    },\r\n    {\r\n      title: 'Vị trí',\r\n      dataIndex: 'location',\r\n      minWidth: 300,\r\n    },\r\n    // {\r\n    //   title: 'Thuộc Khoa/Phòng/Ban',\r\n    //   dataIndex: ['parent', 'name'],\r\n    // },\r\n    {\r\n      title: 'Số lượng nhân viên',\r\n      dataIndex: 'numberEmployees',\r\n    },\r\n    {\r\n      title: '',\r\n      dataIndex: 'action',\r\n      width: 30,\r\n      render: (_, values) => <ButtonEdit disabled={!isAccessed(PER.KHOA_PHONG_BAN_SUA)} onClick={() => onClickUpdate(values)} />,\r\n    },\r\n  ];\r\n\r\n  useEffect(() => {\r\n    getDepartments();\r\n  }, [isOpen]);\r\n\r\n  const getDepartments = async () => {\r\n    const response = await dropdownDepartments();\r\n    setDropDownDepartment(response?.data || []);\r\n  };\r\n\r\n  const readGrid = (refresh) => {\r\n    dispatch(actions.refreshGrid(refresh));\r\n  };\r\n\r\n  const handleDelete = (values) => {\r\n    deleteDepartments(values)\r\n      .then((res) => {\r\n        if (res.isSuccess) {\r\n          message.success(DELETE_SUCCESS);\r\n          readGrid(true);\r\n        } else {\r\n          message.error(DELETE_ERROR);\r\n        }\r\n      })\r\n      .catch(() => {\r\n        message.error('Xóa thất bại! Vui lòng thử lại');\r\n      });\r\n  };\r\n\r\n  const onClickUpdate = (record) => {\r\n    form.setFieldsValue(record);\r\n    setIsopen(true);\r\n  };\r\n\r\n  const onClickDelete = (values) => {\r\n    if (!values.length) return;\r\n\r\n    Modal.confirm({\r\n      title: 'Xác Nhận',\r\n      icon: <ExclamationCircleOutlined />,\r\n      content: 'Bạn có chắc chắn muốn xóa dòng dữ liệu đã chọn?',\r\n      okText: 'Xác Nhận',\r\n      cancelText: 'Hủy',\r\n      onOk: () => handleDelete(values),\r\n    });\r\n  };\r\n\r\n  const onOpenModel = () => {\r\n    form.resetFields();\r\n    setIsopen(true);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {isAccessed(PER.KHOA_PHONG_BAN_XEM) && (\r\n        <div>\r\n          <HeaderPage\r\n            title=\"KHOA/PHÒNG/BAN\"\r\n            actions=\"default\"\r\n            onCreate={onOpenModel}\r\n            handleDelete={onClickDelete}\r\n            isShowActionAdd={isAccessed(PER.KHOA_PHONG_BAN_THEM)}\r\n            isShowActionDelete={isAccessed(PER.KHOA_PHONG_BAN_XOA)}\r\n          />\r\n          <div className=\"main__application\">\r\n            <PageWrapper>\r\n              <Grid columns={columns} urlEndpoint={urlEndpointTableDepartment} />\r\n            </PageWrapper>\r\n          </div>\r\n          <CreateAndUpdate\r\n            isOpen={isOpen}\r\n            ID={code}\r\n            form={form}\r\n            reload={() => readGrid(true)}\r\n            onClose={() => setIsopen(false)}\r\n            setMaPhongBan={setCode}\r\n            dropdownDepartment={dropdownDepartment}\r\n            title={code ? `Chỉnh sửa khoa phòng ban` : 'Thêm mới khoa phòng ban'}\r\n          />\r\n        </div>\r\n      )}\r\n    </>\r\n\r\n  );\r\n};\r\n\r\nDepartment.propTypes = {};\r\n\r\nexport default Department;\r\n","import React from 'react';\r\nimport { Button } from 'antd';\r\nfunction PrimaryButton(props) {\r\n  return <Button type=\"primary\" size=\"small\" {...props} />;\r\n}\r\n\r\nPrimaryButton.propTypes = {};\r\n\r\nexport default PrimaryButton;\r\n","import React from 'react';\r\nimport { Button } from 'antd';\r\nfunction DangerButton(props) {\r\n  return <Button danger size=\"small\" {...props} />;\r\n}\r\n\r\nDangerButton.propTypes = {};\r\n\r\nexport default DangerButton;\r\n","import React from 'react';\r\nimport { Button } from 'antd';\r\nfunction DefaultButton(props) {\r\n  return <Button type=\"default\" size=\"small\" {...props} />;\r\n}\r\n\r\nDefaultButton.propTypes = {};\r\n\r\nexport default DefaultButton;\r\n","import React from 'react';\r\nimport DefaultButton from './PrimaryButton';\r\nimport { StopOutlined } from '@ant-design/icons';\r\n\r\nfunction ButtonCancel({ title = 'Thêm mới', ...rest }) {\r\n  return (\r\n    <DefaultButton icon={<StopOutlined />} {...rest}>\r\n      {title}\r\n    </DefaultButton>\r\n  );\r\n}\r\n\r\nButtonCancel.propTypes = {};\r\n\r\nexport default ButtonCancel;\r\n","import React from 'react';\r\nimport DangerButton from './DangerButton';\r\nimport { DeleteOutlined } from '@ant-design/icons';\r\n\r\nfunction ButtonDelete({ title = '', ...rest }) {\r\n  return (\r\n    <DangerButton icon={<DeleteOutlined />} {...rest}>\r\n      {title}\r\n    </DangerButton>\r\n  );\r\n}\r\n\r\nButtonDelete.propTypes = {};\r\n\r\nexport default ButtonDelete;\r\n","import React from 'react';\r\nimport { EditOutlined } from '@ant-design/icons';\r\nimport DefaultButton from './DefaultButton';\r\n\r\nfunction ButtonEdit({ title = '', ...rest }) {\r\n  return (\r\n    <DefaultButton icon={<EditOutlined />} {...rest}>\r\n      {title}\r\n    </DefaultButton>\r\n  );\r\n}\r\n\r\nButtonEdit.propTypes = {};\r\n\r\nexport default ButtonEdit;\r\n","import moment from \"moment\";\r\n\r\nexport const formatCurrency = (number) => {\r\n  if (Number.isNaN(number) || !number || number === null) {\r\n    number = 0;\r\n  }\r\n  let vnd = new Intl.NumberFormat('vi-VN', {\r\n    style: 'currency',\r\n    currency: 'VND',\r\n  });\r\n  return vnd.format(number).replaceAll('₫', '');\r\n};\r\n\r\nexport const formatCurrencyInput = (numberString) => {\r\n  let number = numberString.replaceAll('.', '');\r\n  return Number(number);\r\n};\r\n\r\nexport const formatDateYMD = (date) => {\r\n  let myDate = moment(date);\r\n  return moment.isMoment(myDate) ? myDate?.format('YYYY-MM-DD') : myDate\r\n}\r\n","import produce from 'immer';\r\nimport * as types from './constants';\r\n\r\n// initial state\r\nexport const initialState = {\r\n  idSelections: [],\r\n  detailSelections: [],\r\n};\r\n\r\nconst gridViewReducer = (state = initialState, action) =>\r\n  produce(state, (draft) => {\r\n    switch (action.type) {\r\n      case types.SET_ITEM_ID_SELECTIONS:\r\n        draft.idSelections = action.payload;\r\n        break;\r\n      case types.SET_ITEM_DETAIL_SELECTIONS:\r\n        draft.detailSelections = action.payload;\r\n        break;\r\n    }\r\n  });\r\n\r\nexport default gridViewReducer;\r\n","export const SET_ITEM_ID_SELECTIONS = 'SET_ITEM_ID_SELECTIONS';\r\nexport const SET_ITEM_DETAIL_SELECTIONS = 'SET_ITEM_DETAIL_SELECTIONS';\r\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\n/**\n * Use invariant() to assert state which your program assumes to be true.\n *\n * Provide sprintf-style format (only %s is supported) and arguments\n * to provide information about what broke and what you were\n * expecting.\n *\n * The invariant message will be stripped in production, but the invariant\n * will remain to ensure logic does not differ in production.\n */\n\nvar invariant = function(condition, format, a, b, c, d, e, f) {\n  if (process.env.NODE_ENV !== 'production') {\n    if (format === undefined) {\n      throw new Error('invariant requires an error message argument');\n    }\n  }\n\n  if (!condition) {\n    var error;\n    if (format === undefined) {\n      error = new Error(\n        'Minified exception occurred; use the non-minified dev environment ' +\n        'for the full error message and additional helpful warnings.'\n      );\n    } else {\n      var args = [a, b, c, d, e, f];\n      var argIndex = 0;\n      error = new Error(\n        format.replace(/%s/g, function() { return args[argIndex++]; })\n      );\n      error.name = 'Invariant Violation';\n    }\n\n    error.framesToPop = 1; // we don't care about invariant's own frame\n    throw error;\n  }\n};\n\nmodule.exports = invariant;\n","import { Button, Divider, Space, Tooltip } from 'antd';\r\nimport React from 'react';\r\nconst ButtonTooltip = (props) => (\r\n  <>\r\n    <Space wrap>\r\n      <Tooltip title={props?.tip} color=\"blue\" key=\"blue\">\r\n        {props.children}\r\n      </Tooltip>\r\n    </Space>\r\n  </>\r\n);\r\nexport default ButtonTooltip;\r\n\r\n\r\n\r\n\r\n// import React from 'react';\r\n// import { Button } from 'antd';\r\n\r\n// function ButtonToolTip(props) {\r\n//   return <Button type=\"primary\" size=\"small\" {...props} />;\r\n// }\r\n\r\n// ButtonToolTip.propTypes = {};\r\n\r\n// export default ButtonToolTip;\r\n","export const mapToSelectOption = (data) => {\r\n  const options = data.map((x) => {\r\n    return {\r\n      value: x.id,\r\n      label: x.name,\r\n    };\r\n  });\r\n  return options\r\n};\r\n\r\nexport const isAccessed = (permissionsAction) => {\r\n  if (!permissionsAction) return\r\n\r\n  const userInfo = JSON.parse(localStorage.getItem('userInfo'))\r\n  const permissionsList = userInfo.permissions\r\n  if (permissionsList && permissionsList.length > 0) {\r\n    return permissionsList.includes(permissionsAction)\r\n  }\r\n\r\n  return false\r\n}\r\n","import React from 'react';\r\nimport classnames from 'classnames';\r\n\r\nimport './PageWrapper.less';\r\n\r\nfunction PageWrapper({ className, children, ...rest }) {\r\n  return (\r\n    <div className={classnames('section-wrapper', className)} {...rest}>\r\n      {children}\r\n    </div>\r\n  );\r\n}\r\n\r\nPageWrapper.propTypes = {};\r\n\r\nexport default PageWrapper;\r\n","import { createSelector } from 'reselect';\r\nimport { initialState } from './reducer';\r\n\r\nconst selectGridView = (state) => (state && state.tableView) || initialState;\r\n\r\nconst selectGridIdSelections = () => createSelector(selectGridView, (globalState) => globalState.idSelections);\r\n\r\nconst selectGridDetailSelections = () => createSelector(selectGridView, (globalState) => globalState.detailSelections);\r\n\r\nexport { selectGridView, selectGridIdSelections, selectGridDetailSelections };\r\n","import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Row, Col, Input, Button, Typography } from 'antd';\r\nimport { PlusCircleOutlined, BarsOutlined, FilterOutlined } from '@ant-design/icons';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { ButtonDelete, PrimaryButton } from 'common/components/Buttons';\r\n\r\nimport * as gridViewSelectors from 'components/Grid/controllers/selectors';\r\nimport { updateSearch } from 'redux/global/actions';\r\nimport './header.less';\r\n\r\nconst { Search } = Input;\r\n\r\nconst HeaderPage = ({\r\n  title = '',\r\n  actions = 'default',\r\n  onCreate,\r\n  handleDelete,\r\n  labelPrimaryBtn = \"\",\r\n  onPressPrimaryBtn = () => { },\r\n  isFilter = false,\r\n  onFilter,\r\n  isHideAction = false,\r\n  isShowActionDelete = true,\r\n  isShowActionAdd = true,\r\n}) => {\r\n  const dispatch = useDispatch();\r\n  const itemSelections = useSelector(gridViewSelectors.selectGridIdSelections());\r\n\r\n  const onSearch = (text) => {\r\n    dispatch(updateSearch(text));\r\n  };\r\n\r\n\r\n  return (\r\n    <div className=\"header-page\">\r\n      <Row className=\"wrapper\" justify=\"space-around\" align=\"center\">\r\n        <Col className=\"header-page__title\">\r\n          <Typography.Title level={3}>{title}</Typography.Title>\r\n        </Col>\r\n        <Col flex={1} style={{ textAlign: 'right' }}>\r\n          {actions === 'default' ? (\r\n            <Row\r\n              style={{\r\n                display: 'flex',\r\n                flexWrap: 'nowrap',\r\n                gap: '16px',\r\n                justifyContent: 'end',\r\n              }}\r\n            >\r\n              <Search className=\"header-page__search\" placeholder=\"Tìm kiếm...\" onSearch={onSearch} enterButton />\r\n              {isFilter &&\r\n                (<Button type=\"primary\" onClick={() => onFilter()} icon={<FilterOutlined />}>\r\n                </Button>)\r\n              }\r\n              {isHideAction === false && (\r\n                <>\r\n                  {isShowActionAdd && (\r\n                    <Button type=\"primary\" onClick={() => onCreate()} icon={<PlusCircleOutlined />}>\r\n                      Thêm mới\r\n                    </Button>\r\n                  )}\r\n                  {!!labelPrimaryBtn && <PrimaryButton size=\"medium\" icon={<BarsOutlined />} onClick={onPressPrimaryBtn}>\r\n                    {labelPrimaryBtn}\r\n                  </PrimaryButton>}\r\n                  {isShowActionDelete && (\r\n                    <ButtonDelete\r\n                      size=\"medium\"\r\n                      onClick={() => handleDelete && handleDelete(itemSelections)}\r\n                      disabled={!itemSelections.length}\r\n                    >\r\n                      Xóa\r\n                    </ButtonDelete>\r\n                  )}\r\n                </>\r\n              )}\r\n            </Row>\r\n          ) : typeof actions === 'function' ? (\r\n            actions()\r\n          ) : null}\r\n        </Col>\r\n      </Row>\r\n    </div>\r\n  );\r\n};\r\n\r\nHeaderPage.propTypes = {\r\n  title: PropTypes.string,\r\n  actions: PropTypes.oneOfType([PropTypes.string, PropTypes.func, PropTypes.bool]),\r\n  onCreate: PropTypes.func,\r\n  handleDelete: PropTypes.func,\r\n  labelPrimaryBtn: PropTypes.string,\r\n  onPressPrimaryBtn: PropTypes.func,\r\n};\r\n\r\nexport default HeaderPage;\r\n","import * as types from './constants';\r\n\r\nexport function setItemIdSelections(items) {\r\n  return {\r\n    type: types.SET_ITEM_ID_SELECTIONS,\r\n    payload: items,\r\n  };\r\n}\r\nexport function setItemDetailSelections(items) {\r\n  return {\r\n    type: types.SET_ITEM_DETAIL_SELECTIONS,\r\n    payload: items,\r\n  };\r\n}\r\n","import React, { useContext, useReducer, useCallback } from 'react';\r\n\r\nconst ActionKind = {\r\n  SET_STATE: 'SET_STATE',\r\n  SET_DATA: 'SET_DATA',\r\n  SET_PAGE: 'SET_PAGE',\r\n  SET_TOTAL_PAGE: 'SET_TOTAL_PAGE',\r\n  SET_TOTAL_ELEMENT: 'SET_TOTAL_ELEMENT',\r\n  SET_LOADING: 'SET_LOADING',\r\n  SET_PAGESIZE: 'SET_PAGESIZE',\r\n  SET_SORT: 'SET_SORT',\r\n  SET_SEARCH_TEXT: 'SET_SEARCH_TEXT',\r\n};\r\n\r\nexport const initialState = {\r\n  data: [],\r\n  currentPage: 1,\r\n  totalPage: 1,\r\n  totalElement: 0,\r\n  pageSize: 10,\r\n  loading: false,\r\n  searchText: '',\r\n  sort: [\r\n    {\r\n      field: '',\r\n      order: '',\r\n    },\r\n  ],\r\n};\r\n\r\nconst store = React.createContext({\r\n  state: initialState,\r\n  setState: () => null,\r\n  setPage: () => null,\r\n  setTotalPage: () => null,\r\n  setData: () => null,\r\n  setTotalElement: () => null,\r\n  setLoading: () => null,\r\n  setPageSize: () => null,\r\n});\r\n\r\nconst { Provider } = store;\r\n\r\nconst TableProvider = ({ children, initState }) => {\r\n  const [state, dispatch] = useReducer(\r\n    (state, action) => {\r\n      switch (action.type) {\r\n        case ActionKind.SET_STATE:\r\n          return {\r\n            ...state,\r\n            ...action.payload,\r\n          };\r\n        case ActionKind.SET_DATA:\r\n          return {\r\n            ...state,\r\n            data: action.payload.data,\r\n          };\r\n        case ActionKind.SET_PAGE:\r\n          return {\r\n            ...state,\r\n            currentPage: action.payload.currentPage,\r\n          };\r\n        case ActionKind.SET_TOTAL_PAGE:\r\n          return {\r\n            ...state,\r\n            totalPage: action.payload.totalPage,\r\n          };\r\n        case ActionKind.SET_TOTAL_ELEMENT:\r\n          return {\r\n            ...state,\r\n            totalElement: action.payload.totalElement,\r\n          };\r\n        case ActionKind.SET_LOADING:\r\n          return {\r\n            ...state,\r\n            loading: action.payload.loading,\r\n          };\r\n        case ActionKind.SET_PAGESIZE:\r\n          return {\r\n            ...state,\r\n            pageSize: action.payload.pageSize,\r\n          };\r\n        case ActionKind.SET_SEARCH_TEXT:\r\n          return {\r\n            ...state,\r\n            searchText: action.payload.searchText,\r\n          };\r\n        case ActionKind.SET_SORT:\r\n          return {\r\n            ...state,\r\n            sort: action.payload.sort,\r\n          };\r\n        default:\r\n          return { ...state };\r\n      }\r\n    },\r\n    { ...initialState, ...initState },\r\n  );\r\n\r\n  const setState = useCallback((state) => {\r\n    dispatch({\r\n      type: ActionKind.SET_STATE,\r\n      payload: state,\r\n    });\r\n  }, []);\r\n\r\n  const setPage = useCallback((page) => {\r\n    dispatch({\r\n      type: ActionKind.SET_PAGE,\r\n      payload: {\r\n        currentPage: page,\r\n      },\r\n    });\r\n  }, []);\r\n\r\n  const setData = useCallback((data) => {\r\n    dispatch({\r\n      type: ActionKind.SET_DATA,\r\n      payload: {\r\n        data: data,\r\n      },\r\n    });\r\n  }, []);\r\n\r\n  const setTotalPage = useCallback((total) => {\r\n    dispatch({\r\n      type: ActionKind.SET_TOTAL_PAGE,\r\n      payload: {\r\n        totalPage: total,\r\n      },\r\n    });\r\n  }, []);\r\n\r\n  const setLoading = useCallback((val) => {\r\n    dispatch({\r\n      type: ActionKind.SET_LOADING,\r\n      payload: {\r\n        loading: val,\r\n      },\r\n    });\r\n  }, []);\r\n\r\n  const setTotalElement = useCallback((total) => {\r\n    dispatch({\r\n      type: ActionKind.SET_TOTAL_ELEMENT,\r\n      payload: {\r\n        totalElement: total,\r\n      },\r\n    });\r\n  }, []);\r\n\r\n  const setPageSize = useCallback((size) => {\r\n    dispatch({\r\n      type: ActionKind.SET_PAGESIZE,\r\n      payload: {\r\n        pageSize: size,\r\n      },\r\n    });\r\n  }, []);\r\n  const setSearchText = useCallback((searchText) => {\r\n    dispatch({\r\n      type: ActionKind.SET_SEARCH_TEXT,\r\n      payload: {\r\n        searchText: searchText,\r\n      },\r\n    });\r\n  }, []);\r\n  const setSort = useCallback((sort) => {\r\n    dispatch({\r\n      type: ActionKind.SET_SORT,\r\n      payload: {\r\n        sort: sort,\r\n      },\r\n    });\r\n  }, []);\r\n\r\n  return (\r\n    <Provider\r\n      value={{\r\n        state,\r\n        setState,\r\n        setPage,\r\n        setTotalPage,\r\n        setData,\r\n        setLoading,\r\n        setTotalElement,\r\n        setPageSize,\r\n        setSearchText,\r\n        setSort,\r\n      }}\r\n    >\r\n      {children}\r\n    </Provider>\r\n  );\r\n};\r\n\r\nexport default TableProvider;\r\n\r\n// HOC to wrap component with TableProvider\r\nexport function withTable(WrappedComponent, initState = initialState) {\r\n  const ComponentWithTableProvider = (props) => (\r\n    <TableProvider initState={initState}>\r\n      <WrappedComponent {...props} />\r\n    </TableProvider>\r\n  );\r\n  return ComponentWithTableProvider;\r\n}\r\n\r\nexport const useTable = () => useContext(store);\r\n","import React, { useEffect, useCallback, useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Table } from 'antd';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport clsx from 'classnames';\r\nimport { isArray } from 'lodash';\r\n\r\nimport * as api from 'config/axios';\r\nimport * as actions from 'redux/global/actions';\r\nimport reducer from './controllers/reducer';\r\n// import saga from './controllers/saga';\r\nimport * as gridViewActions from './controllers/actions';\r\nimport { useInjectReducer } from 'utils/common/injectedReducers';\r\n// import { useInjectSaga } from 'utils/common/injectSaga';\r\nimport { useTable, withTable } from 'hooks/useTable';\r\n\r\nimport './Grid.less';\r\nimport { formatCurrency } from 'utils/format';\r\n\r\nconst key = 'tableView';\r\n\r\nconst Grid = ({\r\n  className = '',\r\n  columns,\r\n  data,\r\n  expandedRowRender,\r\n  handleGetDetailSelections,\r\n  handleGetSelections,\r\n  hasRowSelected = true,\r\n  isHidePagination,\r\n  rowKey = 'id',\r\n  shouldSaveToStore = true,\r\n  shouldShowTotal = true,\r\n  urlEndpoint,\r\n  pageSize,\r\n  ...rest\r\n}) => {\r\n  useInjectReducer({ key, reducer });\r\n  // useInjectSaga({ key, saga });\r\n\r\n  const dispatch = useDispatch();\r\n  const searchText = useSelector((state) => state.global.searchText);\r\n  const readGrid = useSelector((state) => state.global.refreshGrid);\r\n  const filters = useSelector((state) => state.global.filters);\r\n\r\n  const [idsSelection, setIdsSelection] = useState([]);\r\n  const { state, setState, setLoading, setData } = useTable();\r\n  const [totalAmount, setTotalAmount] = useState('');\r\n\r\n  const resetState = () => {\r\n    dispatch(actions.refreshGrid(false));\r\n  };\r\n\r\n  const getSortItem = (sort) => {\r\n    let sorted = [];\r\n    sort.map((item) => {\r\n      if (item?.field) {\r\n        sorted.push({\r\n          fieldName: item.field,\r\n          isAscending: item.order === 'ascend',\r\n        });\r\n      }\r\n    });\r\n\r\n    return sorted;\r\n  };\r\n\r\n  const fetchData = useCallback(() => {\r\n    if (!urlEndpoint) return;\r\n    setLoading(true);\r\n\r\n    const params = {\r\n      pageSize: state.pageSize,\r\n      pageIndex: state.currentPage - 1,\r\n      searchText: state.searchText,\r\n      sort: getSortItem(state.sort),\r\n      fieldId: filters?.fields,\r\n      filter: [],\r\n    };\r\n\r\n    api\r\n      .sendGet(urlEndpoint, params)\r\n      .then((results) => {\r\n        if (results && results?.isSuccess) {\r\n          const data = results?.data || {};\r\n          setState({\r\n            data: data?.records,\r\n            currentPage: params?.pageIndex || 1,\r\n            totalElement: data?.total || 0,\r\n            loading: false,\r\n          });\r\n          setTotalAmount(results?.data?.totalAmount);\r\n        } else {\r\n          setState({\r\n            data: [],\r\n            totalElement: 0,\r\n          });\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        // eslint-disable-next-line no-console\r\n        console.log('err: ', err);\r\n      })\r\n      .finally(() => {\r\n        setLoading(false);\r\n      });\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [state.pageSize, state.sort, state.searchText, urlEndpoint, filters?.fields]);\r\n\r\n  useEffect(() => {\r\n    fetchData();\r\n  }, [dispatch, fetchData]);\r\n\r\n  useEffect(() => {\r\n    console.log('filtersfilters', filters);\r\n  }, [filters]);\r\n\r\n  useEffect(() => {\r\n    if (urlEndpoint) {\r\n      setState({\r\n        searchText: searchText,\r\n        currentPage: 1,\r\n      });\r\n    }\r\n  }, [searchText, setState, urlEndpoint]);\r\n\r\n  useEffect(() => {\r\n    if (readGrid) {\r\n      fetchData();\r\n      resetState();\r\n    }\r\n\r\n    return () => {\r\n      setIdsSelection([]);\r\n      dispatch(gridViewActions.setItemIdSelections([]));\r\n      dispatch(gridViewActions.setItemDetailSelections([]));\r\n    };\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [readGrid]);\r\n\r\n  useEffect(() => {\r\n    if (data && isArray(data)) {\r\n      setData(data);\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [JSON.stringify(data)]);\r\n\r\n  const onChange = (pagination, filters, sorter) => {\r\n    setState({\r\n      currentPage: pagination.current,\r\n      pageSize: pagination.pageSize,\r\n      sort: sorter ? [sorter] : [],\r\n    });\r\n  };\r\n\r\n  const rowSelection = {\r\n    selectedRowKeys: idsSelection,\r\n    onChange: (selectedRowKeys, selectedRows) => {\r\n      setIdsSelection(selectedRowKeys);\r\n      // handleCallback\r\n      handleGetSelections && handleGetSelections(selectedRowKeys);\r\n      handleGetDetailSelections && handleGetDetailSelections(selectedRows);\r\n\r\n      // save to redux gridView\r\n      if (shouldSaveToStore) {\r\n        dispatch(gridViewActions.setItemIdSelections(selectedRowKeys));\r\n        dispatch(gridViewActions.setItemDetailSelections(selectedRows));\r\n      }\r\n    },\r\n  };\r\n\r\n  const summary = () => (\r\n    <Table.Summary.Row>\r\n      {columns.map((x, index) => (\r\n        <>\r\n          <Table.Summary.Cell>{index === rest?.summaryNumberCol ? formatCurrency(totalAmount) : ''}</Table.Summary.Cell>\r\n        </>\r\n      ))}\r\n      <Table.Summary.Cell></Table.Summary.Cell>\r\n    </Table.Summary.Row>\r\n  );\r\n\r\n  return (\r\n    <div className={clsx('grid', className && className)}>\r\n      <Table\r\n        columns={columns}\r\n        dataSource={state.data}\r\n        onChange={onChange}\r\n        bordered\r\n        pagination={\r\n          isHidePagination\r\n            ? false\r\n            : {\r\n              defaultPageSize: pageSize ? pageSize : state.pageSize,\r\n              showSizeChanger: true,\r\n              pageSizeOptions: ['5', '10', '20', '50'],\r\n              total: state.totalElement,\r\n              showTotal: shouldShowTotal ? () => `Có ${state.totalElement} dữ liệu` : null,\r\n            }\r\n        }\r\n        loading={state.loading}\r\n        expandable={{\r\n          expandedRowRender,\r\n        }}\r\n        rowKey={rowKey}\r\n        rowSelection={hasRowSelected ? rowSelection : null}\r\n        scroll={{ x: '100%' }}\r\n        {...rest}\r\n        summary={(state.data.length > 0 && !!rest.summaryNumberCol) ? summary : () => { }}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nGrid.propTypes = {\r\n  className: PropTypes.string,\r\n  columns: PropTypes.array,\r\n  data: PropTypes.array,\r\n  expandedRowRender: PropTypes.any,\r\n  handleGetDetailSelections: PropTypes.func,\r\n  handleGetSelections: PropTypes.func,\r\n  hasRowSelected: PropTypes.bool,\r\n  isHidePagination: PropTypes.bool,\r\n  rowKey: PropTypes.string,\r\n  shouldSaveToStore: PropTypes.bool,\r\n  shouldShowTotal: PropTypes.bool,\r\n  urlEndpoint: PropTypes.oneOfType([PropTypes.string]),\r\n};\r\n\r\nexport default withTable(Grid);\r\n","import { conformsTo, isFunction, isObject } from 'lodash';\r\nimport invariant from 'invariant';\r\n\r\n/**\r\n * Validate the shape of redux store\r\n */\r\nexport default function checkStore(store) {\r\n  const shape = {\r\n    dispatch: isFunction,\r\n    subscribe: isFunction,\r\n    getState: isFunction,\r\n    replaceReducer: isFunction,\r\n    runSaga: isFunction,\r\n    injectedReducers: isObject,\r\n    injectedSagas: isObject,\r\n  };\r\n  invariant(conformsTo(store, shape), '(app/utils...) injectors: Expected a valid redux store');\r\n}\r\n","import invariant from 'invariant';\r\nimport { isEmpty, isFunction, isString } from 'lodash';\r\n\r\nimport checkStore from './checkStore';\r\nimport createReducer from '../../reducers';\r\n\r\nexport function injectReducerFactory(store, isValid) {\r\n  return function injectReducer(key, reducer) {\r\n    if (!isValid) checkStore(store);\r\n\r\n    invariant(\r\n      isString(key) && !isEmpty(key) && isFunction(reducer),\r\n      '(app/utils...) injectReducer: Expected `reducer` to be a reducer function',\r\n    );\r\n\r\n    // Check `store.injectedReducers[key] === reducer` for hot reloading when a key is the same but a reducer is different\r\n    if (Reflect.has(store.injectedReducers, key) && store.injectedReducers[key] === reducer) return;\r\n\r\n    store.injectedReducers[key] = reducer; // eslint-disable-line no-param-reassign\r\n    store.replaceReducer(createReducer(store.injectedReducers));\r\n  };\r\n}\r\n\r\nexport default function getInjectors(store) {\r\n  checkStore(store);\r\n\r\n  return {\r\n    injectReducer: injectReducerFactory(store, true),\r\n  };\r\n}\r\n","import React from 'react';\r\nimport hoistNonReactStatics from 'hoist-non-react-statics';\r\nimport { ReactReduxContext } from 'react-redux';\r\n\r\nimport getInjectors from './reducerInjectors';\r\n\r\n/**\r\n * Dynamically injects a reducer\r\n *\r\n * @param {string} key A key of the reducer\r\n * @param {function} reducer A reducer that will be injected\r\n *\r\n */\r\nexport default ({ key, reducer }) =>\r\n  (WrappedComponent) => {\r\n    class ReducerInjector extends React.Component {\r\n      static WrappedComponent = WrappedComponent;\r\n\r\n      static contextType = ReactReduxContext;\r\n\r\n      static displayName = `withReducer(${WrappedComponent.displayName || WrappedComponent.name || 'Component'})`;\r\n\r\n      constructor(props, context) {\r\n        super(props, context);\r\n\r\n        getInjectors(context.store).injectReducer(key, reducer);\r\n      }\r\n\r\n      render() {\r\n        return <WrappedComponent {...this.props} />;\r\n      }\r\n    }\r\n\r\n    return hoistNonReactStatics(ReducerInjector, WrappedComponent);\r\n  };\r\n\r\nconst useInjectReducer = ({ key, reducer }) => {\r\n  const context = React.useContext(ReactReduxContext);\r\n  React.useEffect(() => {\r\n    getInjectors(context.store).injectReducer(key, reducer);\r\n  }, [context.store, key, reducer]);\r\n};\r\n\r\nexport { useInjectReducer };\r\n","import * as api from '../../config/axios';\r\nexport const urlEndpointDepartment = '/api/departments/';\r\nexport const urlEndpointTableDepartment = '/api/departments';\r\n\r\nexport const getDepartmentById = (id) => api.sendGet(urlEndpointDepartment + id);\r\n\r\nexport const getDepartments = (data) => api.sendGet(urlEndpointDepartment, data);\r\n\r\nexport const createDepartment = (payload) =>\r\n  api.sendPost(urlEndpointDepartment, {\r\n    id: payload.id,\r\n    input: payload,\r\n  });\r\n\r\nexport const updateDepartment = (payload) => api.sendPost(urlEndpointDepartment, payload);\r\n\r\nexport const deleteDepartments = (payload) =>\r\n  api.sendDelete(urlEndpointDepartment, {\r\n    data: { ids: payload },\r\n  });\r\n\r\nexport const dropdownDepartments = () => api.sendGet(urlEndpointDepartment + 'dropdown', '');\r\n"],"sourceRoot":""}