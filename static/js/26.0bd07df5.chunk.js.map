{"version":3,"sources":["pages/permissions/components/AddRole.js","pages/permissions/controllers/actions.js","pages/permissions/controllers/constants.js","pages/permissions/controllers/reducer.js","pages/permissions/controllers/selectors.js","services/permissions/endpoints.js","services/permissions/index.js","pages/permissions/utils.js","pages/permissions/components/RoleList.js","pages/permissions/components/TreePermission/TreePermissions.js","pages/permissions/components/PermissionList.js","pages/permissions/components/AddUser.js","pages/permissions/components/RoleUsers.js","pages/permissions/index.js","common/components/Buttons/PrimaryButton.js","common/components/Buttons/DangerButton.js","common/components/Buttons/DefaultButton.js","common/components/Buttons/ButtonCancel.js","common/components/Buttons/ButtonDelete.js","common/components/Buttons/ButtonEdit.js","utils/format.js","components/Grid/controllers/reducer.js","components/Grid/controllers/constants.js","common/components/Buttons/ButtonToolTip.js","utils/utils.js","components/Layout/PageWrapper.js","components/Grid/controllers/selectors.js","pages/home/header-page/index.js","components/Grid/controllers/actions.js","hooks/useTable.js","components/Grid/Grid.js","utils/common/checkStore.js","utils/common/reducerInjectors.js","utils/common/injectedReducers.js"],"names":["AddRole","isLoading","form","onFinish","isOpen","handleCancel","title","getFieldValue","open","onCancel","footer","key","onClick","type","htmlType","id","layout","Item","hidden","label","name","rules","required","message","TextArea","setActivedRoleId","payload","setActivedRoleDetail","initialState","activeRoleId","activeRoleDetail","permissionsAvaiable","rolePermissionReducer","state","action","produce","draft","rolePermissionSelectors","rolePermission","selectActiveRoleId","createSelector","groupState","urlApiAuthen","GET_ROLES_ENDPOINT","GET_USERS_HAVE_ROLE_ENDPOINT","GET_LIST_PERMISSIONS_ROLE","GET_PERMISSIONS_AVAILABLE","GET_USER_NOT_IN_ROLES_ENDPOINT","SAVE_ROLE","DELETE_ROLE","SAVE_USER_TO_ROLE","DELETE_USER_TO_ROLE","GET_PERMISSIONS_TREE_MODEL","saveRole","api","endpoints","deleteRole","roleId","RoleList","useState","setIsOpen","dispatch","useDispatch","allRoles","currentRoles","roles","setRoles","status","setStatus","handleFirstRole","useCallback","length","actions","getRoleList","result","isSuccess","data","useEffect","handleSearch","text","allRole","newRoles","filter","el","displayName","toLowerCase","includes","useGetRoles","idsSelection","useSelector","selectors","callbackFunc","useForm","setIsLoading","handleSubmit","description","permissions","input","rolePermissionsServices","resetFields","error","onFinishModal","getFieldsValue","useSaveRole","onClickDelete","success","DELETE_SUCCESS","DELETE_ERROR","confirm","icon","ExclamationCircleOutlined","content","okText","cancelText","onOk","useDeleteRole","onClickUpdateModal","values","setFieldsValue","columns","useMemo","dataIndex","width","sorter","render","_","value","Space","rowSelection","selectedRowKeys","onChange","selectedRows","className","addRole","onSearch","PageWrapper","Grid","rowKey","shouldShowTotal","pageSize","RoleTool","align","Title","level","style","margin","Search","placeholder","enterButton","allowClear","PlusCircleOutlined","TreePermissions","props","checkedData","checkedKeys","setCheckedKeys","expandedKeys","setExpandedKeys","getAllNodeKeys","treeData","flatMap","node","premissionChildren","paddingBottom","textAlign","marginRight","maxHeight","overflow","onExpand","showLine","checkable","onCheck","savePermissionsIntoRole","renderTreeNodes","map","item","TreeNode","selectable","memo","roleSelected","permissionsAvailable","SHOW_PARENT","allPermisions","currentPermisions","setPermission","permissionsSelected","setPermissionsSelected","setLoading","setToggleModal","searchValue","setSearchValue","treePermissions","setTreePermissions","setCheckedData","permissionsUnInRole","find","element","getPermissionsData","getPermissionUser","permission","x","handleDeletePermission","e","target","allPer","currentPer","permissionUpdate","currentPermissionUpdate","dataUpdated","push","handleSaveRole","res","isAccessed","then","spinning","perChecked","SAVE_SUCCESS","SAVE_ERROR","handleAddNewPermissions","AddUser","users","setUsers","getUsers","userName","treeCheckable","treeDefaultExpandAll","filterTreeNode","search","indexOf","popupClassName","RoleUsers","allUsers","currentUsers","userInRole","setUserInRole","userIds","addUser","newUsers","tenNhanVien","onChangeSearch","hasRowSelected","taikhoan","RoleUserTool","Permission","useInjectReducer","reducer","reducers","getPermissionsAvailableInRole","PER","PHAN_QUYEN","gutter","span","PrimaryButton","size","DangerButton","danger","DefaultButton","ButtonCancel","ButtonDelete","rest","DeleteOutlined","ButtonEdit","EditOutlined","formatCurrency","number","Number","isNaN","Intl","NumberFormat","currency","format","replaceAll","formatCurrencyInput","numberString","formatDateYMD","date","myDate","moment","isMoment","idSelections","detailSelections","gridViewReducer","types","SET_ITEM_ID_SELECTIONS","SET_ITEM_DETAIL_SELECTIONS","ButtonTooltip","wrap","tip","color","children","mapToSelectOption","permissionsAction","permissionsList","JSON","parse","localStorage","getItem","classnames","selectGridView","tableView","HeaderPage","onCreate","handleDelete","labelPrimaryBtn","onPressPrimaryBtn","isFilter","onFilter","isHideAction","isShowActionDelete","isShowActionAdd","itemSelections","globalState","justify","flex","display","flexWrap","gap","justifyContent","updateSearch","FilterOutlined","BarsOutlined","disabled","setItemIdSelections","items","setItemDetailSelections","ActionKind","currentPage","totalPage","totalElement","loading","searchText","sort","field","order","store","React","createContext","setState","setPage","setTotalPage","setData","setTotalElement","setPageSize","Provider","TableProvider","initState","useReducer","page","total","val","setSearchText","setSort","withTable","WrappedComponent","ComponentWithTableProvider","expandedRowRender","handleGetDetailSelections","handleGetSelections","isHidePagination","shouldSaveToStore","urlEndpoint","global","readGrid","refreshGrid","filters","setIdsSelection","useContext","totalAmount","setTotalAmount","getSortItem","sorted","fieldName","isAscending","fetchData","params","pageIndex","fieldId","fields","results","records","catch","err","console","log","finally","gridViewActions","isArray","stringify","clsx","dataSource","pagination","current","bordered","defaultPageSize","showSizeChanger","pageSizeOptions","showTotal","expandable","scroll","summary","summaryNumberCol","Summary","Row","index","Cell","checkStore","shape","isFunction","subscribe","getState","replaceReducer","runSaga","injectedReducers","isObject","injectedSagas","invariant","conformsTo","injectReducerFactory","isValid","isString","isEmpty","Reflect","has","createReducer","getInjectors","injectReducer","context","ReactReduxContext"],"mappings":"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","file":"static/js/26.0bd07df5.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Form, Input, Modal, Button } from 'antd';\r\n\r\nconst AddRole = ({ isLoading, form, onFinish, isOpen, handleCancel }) => (\r\n  <Modal\r\n    isLoading={isLoading}\r\n    title={form?.getFieldValue('id') ? 'Chỉnh sửa nhóm quyền' : 'Thêm nhóm quyền'}\r\n    open={isOpen}\r\n    form={form}\r\n    onCancel={handleCancel}\r\n    footer={[\r\n      <Button form=\"add-role-form\" key=\"back\" onClick={handleCancel}>\r\n        Hủy\r\n      </Button>,\r\n      <Button form=\"add-role-form\" key=\"submit\" type=\"primary\" htmlType=\"submit\">\r\n        Lưu\r\n      </Button>,\r\n    ]}\r\n  >\r\n    <Form id=\"add-role-form\" form={form} layout=\"vertical\" onFinish={onFinish}>\r\n      <Form.Item hidden={true} label=\"id\" name=\"id\" />\r\n      <Form.Item\r\n        label=\"Tên nhóm quyền\"\r\n        name=\"name\"\r\n        rules={[{ required: true, message: 'Tên nhóm quyền không được bỏ trống!' }]}\r\n      >\r\n        <Input />\r\n      </Form.Item>\r\n      <Form.Item label=\"Mô tả\" name=\"description\">\r\n        <Input.TextArea />\r\n      </Form.Item>\r\n    </Form>\r\n  </Modal>\r\n);\r\n\r\nexport default AddRole;\r\n","import * as types from './constants';\r\n\r\nexport const setActivedRoleId = (payload) => ({\r\n  type: types.SET_ACTIVE_ROLE_ID,\r\n  payload,\r\n});\r\n\r\nexport const setActivedRoleDetail = (payload) => ({\r\n  type: types.SET_ACTIVE_ROLE_DETAIL,\r\n  payload,\r\n});\r\n\r\nexport const setPermissionsAvailbe = (payload) => ({\r\n  type: types.SET_PERMISSIONS_AVAIABLE,\r\n  payload,\r\n});\r\n","export const SET_ACTIVE_ROLE_ID = 'SET_ACTIVE_ROLE_ID';\r\nexport const SET_ACTIVE_ROLE_DETAIL = 'SET_ACTIVE_ROLE_DETAIL';\r\nexport const SET_PERMISSIONS_AVAIABLE = 'SET_PERMISSIONS_AVAIABLE';\r\n","import produce from 'immer';\r\nimport * as types from './constants';\r\n\r\nexport const initialState = {\r\n  activeRoleId: null,\r\n  activeRoleDetail: null,\r\n  permissionsAvaiable: [],\r\n};\r\n\r\nconst rolePermissionReducer = (state = initialState, action) =>\r\n  produce(state, (draft) => {\r\n    switch (action.type) {\r\n      case types.SET_ACTIVE_ROLE_ID:\r\n        draft.activeRoleId = action.payload;\r\n        break;\r\n      case types.SET_ACTIVE_ROLE_DETAIL:\r\n        draft.activeRoleDetail = action.payload;\r\n        break;\r\n      case types.SET_PERMISSIONS_AVAIABLE:\r\n        draft.permissionsAvaiable = action.payload;\r\n        break;\r\n      default:\r\n        draft = draft;\r\n        break\r\n    }\r\n  });\r\n\r\nexport default rolePermissionReducer;\r\n","import { createSelector } from 'reselect';\r\nimport { initialState } from './reducer';\r\n\r\nconst rolePermissionSelectors = (state) => state.rolePermission || initialState;\r\n\r\nconst selectActiveRoleId = () => createSelector(rolePermissionSelectors, (groupState) => groupState?.activeRoleId);\r\n\r\nconst selectActiveRoleDetail = () =>\r\n  createSelector(rolePermissionSelectors, (groupState) => groupState.activeRoleDetail);\r\n\r\nconst setPermissionsAvaiable = () =>\r\n  createSelector(rolePermissionSelectors, (groupState) => groupState.permissionsAvaiable);\r\n\r\nexport { selectActiveRoleId, selectActiveRoleDetail, setPermissionsAvaiable };\r\n","export const urlApiAuthen = 'api/authorization';\r\n\r\n// - GET -\r\nexport const GET_ROLES_ENDPOINT = `${urlApiAuthen}/get-available-roles`;\r\nexport const GET_USERS_HAVE_ROLE_ENDPOINT = `${urlApiAuthen}/get-users-in-role`;\r\nexport const GET_LIST_PERMISSIONS_ROLE = `${urlApiAuthen}/get-permissions-in-role`;\r\nexport const GET_PERMISSIONS_AVAILABLE = `${urlApiAuthen}/get-available-permissions`;\r\nexport const GET_USER_NOT_IN_ROLES_ENDPOINT = `${urlApiAuthen}/get-users-not-in-role`;\r\n// - POST -\r\nexport const SAVE_ROLE = `${urlApiAuthen}/save-role`;\r\nexport const DELETE_ROLE = `${urlApiAuthen}/delete-role`;\r\nexport const SAVE_USER_TO_ROLE = `${urlApiAuthen}/add-users-to-role`;\r\nexport const DELETE_USER_TO_ROLE = `${urlApiAuthen}/remove-users-from-role`;\r\n\r\nexport const GET_PERMISSIONS_TREE_MODEL = `${urlApiAuthen}/get-permissions-tree-model`;\r\n","import * as api from 'config/axios';\r\nimport * as endpoints from './endpoints';\r\n\r\nexport const getRoles = () => api.sendGet(endpoints.GET_ROLES_ENDPOINT);\r\nexport const getPermissionsInRole = (id) => api.sendGet(`${endpoints.GET_LIST_PERMISSIONS_ROLE}?RoleId=${id}`);\r\nexport const getPermissionsAvailable = () => api.sendGet(endpoints.GET_PERMISSIONS_AVAILABLE);\r\nexport const getUserInRole = (id) => api.sendGet(`${endpoints.GET_USERS_HAVE_ROLE_ENDPOINT}?RoleId=${id}`);\r\nexport const getUserNotInRoles = (id) => api.sendGet(`${endpoints.GET_USER_NOT_IN_ROLES_ENDPOINT}?RoleId=${id}`);\r\n\r\nexport const saveRole = (payload) => api.sendPost(endpoints.SAVE_ROLE, payload);\r\nexport const deleteRole = (roleId) => api.sendPost(endpoints.DELETE_ROLE, { id: roleId });\r\nexport const saveUserToRole = (payload) => api.sendPost(endpoints.SAVE_USER_TO_ROLE, payload);\r\nexport const deleteUserToRole = (payload) => api.sendPost(endpoints.DELETE_USER_TO_ROLE, payload);\r\nexport const getPermissionsTreeModel = () => api.sendGet(endpoints.GET_PERMISSIONS_TREE_MODEL);","import React, { useState, useCallback, useEffect } from 'react';\r\nimport { Form, message, Modal } from 'antd';\r\nimport { useDispatch } from 'react-redux';\r\nimport { ExclamationCircleOutlined } from '@ant-design/icons';\r\n\r\nimport * as rolePermissionsServices from 'services/permissions';\r\nimport { DELETE_ERROR, DELETE_SUCCESS } from 'utils/common/messageContants';\r\nimport * as actions from './controllers/actions';\r\n\r\nexport const useGetRoles = () => {\r\n  const dispatch = useDispatch();\r\n  const [roles, setRoles] = useState({\r\n    allRoles: [],\r\n    currentRoles: [],\r\n  });\r\n  const [status, setStatus] = useState('idle');\r\n\r\n  const handleSearch = (text) => {\r\n    const allRole = roles.allRoles;\r\n\r\n    if (!text) {\r\n      setRoles({ allRoles: allRole, currentRoles: allRole });\r\n      return;\r\n    }\r\n    const newRoles = allRole.filter((el) => {\r\n      if (el.displayName && el.displayName.toLowerCase().includes(text.toLowerCase())) return el;\r\n    });\r\n    setRoles({ allRoles: allRole, currentRoles: newRoles });\r\n  };\r\n\r\n  const handleFirstRole = useCallback(\r\n    (roles) => {\r\n      if (roles?.length > 0) {\r\n        dispatch(actions.setActivedRoleDetail(roles[0]));\r\n        dispatch(actions.setActivedRoleId(roles[0]?.id));\r\n      }\r\n    },\r\n    [dispatch],\r\n  );\r\n\r\n  const getRoleList = useCallback(async () => {\r\n    try {\r\n      setStatus('loading');\r\n      const result = await rolePermissionsServices.getRoles();\r\n      if (result?.isSuccess) {\r\n        setRoles({\r\n          allRoles: result?.data,\r\n          currentRoles: result?.data,\r\n        });\r\n        setStatus('success');\r\n        handleFirstRole(result?.data);\r\n      } else {\r\n        setRoles({\r\n          allRoles: [],\r\n          currentRoles: [],\r\n        });\r\n        setStatus('error');\r\n      }\r\n    } catch (err) {\r\n      setStatus('error');\r\n    }\r\n  }, [handleFirstRole]);\r\n\r\n  useEffect(() => {\r\n    getRoleList();\r\n  }, [getRoleList]);\r\n\r\n  return { roles, status, getRoleList, handleSearch };\r\n};\r\n\r\nexport const useSaveRole = (callbackFunc) => {\r\n  const [form] = Form.useForm();\r\n  const [isLoading, setIsLoading] = useState(false);\r\n\r\n  const handleSubmit = async (name, description, id, permissions) => {\r\n    const data = {\r\n      id: id,\r\n      input: {\r\n        id: id,\r\n        name: name,\r\n        description: description,\r\n      },\r\n    };\r\n    setIsLoading(true);\r\n    const result = await rolePermissionsServices.saveRole(data);\r\n    if (result.isSuccess) {\r\n      form.resetFields();\r\n      callbackFunc && callbackFunc(result?.data?.roleId);\r\n    } else {\r\n      message.error(result.message);\r\n    }\r\n    setIsLoading(false);\r\n  };\r\n\r\n  const onFinishModal = () => {\r\n    const { name, description, id } = form.getFieldsValue();\r\n    handleSubmit(name, description, id, []);\r\n  };\r\n\r\n  return {\r\n    form,\r\n    handleSubmit,\r\n    isLoading,\r\n    onFinishModal,\r\n  };\r\n};\r\n\r\nexport const useDeleteRole = (callbackFunc) => {\r\n  const deleteRole = useCallback(\r\n    async (roleId) => {\r\n      const result = await rolePermissionsServices.deleteRole(roleId);\r\n      if (result.isSuccess) {\r\n        message.success(DELETE_SUCCESS);\r\n        callbackFunc && callbackFunc();\r\n      } else {\r\n        message.error(DELETE_ERROR);\r\n      }\r\n    },\r\n    [callbackFunc],\r\n  );\r\n\r\n  const onClickDelete = useCallback(\r\n    (roleId) => {\r\n      Modal.confirm({\r\n        title: 'Xác Nhận',\r\n        icon: <ExclamationCircleOutlined />,\r\n        content: 'Bạn có chắc chắn muốn xóa dòng dữ liệu đã chọn?',\r\n        okText: 'Xác Nhận',\r\n        cancelText: 'Hủy',\r\n        onOk: () => deleteRole(roleId),\r\n      });\r\n    },\r\n    [deleteRole],\r\n  );\r\n\r\n  return {\r\n    deleteRole,\r\n    onClickDelete,\r\n  };\r\n};\r\n","import React, { useCallback, useMemo, useState } from 'react';\r\nimport { Row, Typography, Button, Input } from 'antd';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { PlusCircleOutlined } from '@ant-design/icons';\r\nimport { ButtonDelete, ButtonEdit } from 'common/components/Buttons';\r\nimport AddRoleModal from './AddRole';\r\nimport Space from 'components/Space';\r\nimport * as actions from '../controllers/actions';\r\nimport * as selectors from '../controllers/selectors';\r\nimport { useDeleteRole, useGetRoles, useSaveRole } from '../utils';\r\nimport Grid from 'components/Grid';\r\nimport PageWrapper from 'components/Layout/PageWrapper';\r\nimport './RoleList.less';\r\n\r\nconst RoleList = () => {\r\n  const [isOpen, setIsOpen] = useState(false);\r\n\r\n  const dispatch = useDispatch();\r\n  const { roles, getRoleList, handleSearch } = useGetRoles();\r\n  const idsSelection = useSelector(selectors.selectActiveRoleId());\r\n\r\n  const onSaveSuccess = useCallback(() => {\r\n    getRoleList();\r\n    setIsOpen(false);\r\n  }, [getRoleList]);\r\n\r\n  const { form, isLoading, onFinishModal: onFinish } = useSaveRole(onSaveSuccess);\r\n  const { onClickDelete } = useDeleteRole(() => getRoleList());\r\n\r\n  const onClickUpdateModal = useCallback(\r\n    (values) => {\r\n      form.setFieldsValue(values);\r\n      setIsOpen(true);\r\n    },\r\n    [form],\r\n  );\r\n\r\n  const columns = useMemo(\r\n    () => [\r\n      {\r\n        title: 'Tên nhóm',\r\n        dataIndex: 'name',\r\n        width: '50%',\r\n      },\r\n      {\r\n        title: 'Mô tả',\r\n        dataIndex: 'description',\r\n        sorter: false,\r\n        width: '46%',\r\n      },\r\n      {\r\n        title: '',\r\n        dataIndex: 'action',\r\n        render: (_, value) => (\r\n          <>\r\n            {value?.name !== 'Administrators' && (\r\n              <Space>\r\n                <ButtonEdit onClick={() => onClickUpdateModal(value)} />\r\n                <ButtonDelete onClick={() => onClickDelete(value.id)} />\r\n              </Space>\r\n            )}\r\n          </>\r\n        ),\r\n        width: '4%',\r\n      },\r\n    ],\r\n    [onClickDelete, onClickUpdateModal],\r\n  );\r\n\r\n  const rowSelection = {\r\n    type: 'radio',\r\n    selectedRowKeys: [idsSelection],\r\n    onChange: (selectedRowKeys, selectedRows) => {\r\n      dispatch(actions.setActivedRoleId(selectedRowKeys[0]));\r\n      dispatch(actions.setActivedRoleDetail(selectedRows[0]));\r\n    },\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"role-list\">\r\n        <RoleTool addRole={() => setIsOpen(true)} onSearch={handleSearch} />\r\n        <PageWrapper>\r\n          <Grid\r\n            rowKey=\"id\"\r\n            columns={columns}\r\n            data={roles.currentRoles}\r\n            rowSelection={rowSelection}\r\n            shouldShowTotal={false}\r\n            pageSize={20}\r\n          />\r\n        </PageWrapper>\r\n      </div>\r\n      <AddRoleModal\r\n        isLoading={isLoading}\r\n        isOpen={isOpen}\r\n        handleCancel={() => {\r\n          form.resetFields();\r\n          setIsOpen(false);\r\n        }}\r\n        form={form}\r\n        onFinish={onFinish}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default RoleList;\r\n\r\nexport const RoleTool = ({ addRole, onSearch }) => (\r\n  <Row className=\"role-list__tool\" align=\"space-between\">\r\n    <Typography.Title level={4} style={{ margin: 0 }}>\r\n      Nhóm quyền\r\n    </Typography.Title>\r\n    <Space>\r\n      <Input.Search placeholder=\"Tìm kiếm nhóm quyền\" type=\"primary\" onSearch={onSearch} enterButton allowClear />\r\n      <Button type=\"primary\" style={{ width: '170px' }} onClick={addRole} icon={<PlusCircleOutlined />}>\r\n        Thêm nhóm quyền\r\n      </Button>\r\n    </Space>\r\n  </Row>\r\n);\r\n","import React, { useEffect, useState } from 'react';\r\nimport { Button, Tree, Typography } from 'antd';\r\n\r\nconst TreePermissions = (props) => {\r\n    const [checkedKeys, setCheckedKeys] = useState(props?.checkedData);\r\n    const [expandedKeys, setExpandedKeys] = useState([]);\r\n\r\n    const onCheck = (checkedKeys) => {\r\n        props.savePermissionsIntoRole(checkedKeys)\r\n        // setCheckedKeys(checkedKeys);\r\n\r\n    };\r\n\r\n    const handleExpandAll = () => {\r\n        setExpandedKeys(getAllNodeKeys(props.treeData));\r\n    };\r\n\r\n    const handleCollapseAll = () => {\r\n        setExpandedKeys([]);\r\n    };\r\n\r\n    const handleNodeExpand = (expandedKeys) => {\r\n        setExpandedKeys(expandedKeys);\r\n    };\r\n\r\n    const getAllNodeKeys = (treeData) => {\r\n        return treeData.flatMap((node) => {\r\n            if (node.premissionChildren && node.premissionChildren.length > 0) {\r\n                return [node.id, ...getAllNodeKeys(node.premissionChildren)];\r\n            }\r\n            return node.id;\r\n        });\r\n    };\r\n\r\n    useEffect(() => {\r\n        setCheckedKeys(props.checkedData)\r\n    }, [props.checkedData])\r\n\r\n    const renderTreeNodes = (data) =>\r\n        data.map((item) => {\r\n            if (item.premissionChildren) {\r\n                return (\r\n                    <Tree.TreeNode\r\n                        key={item.id}\r\n                        title={item.name}\r\n                        selectable={false}\r\n                        checkable\r\n                    >\r\n                        {renderTreeNodes(item.premissionChildren)}\r\n                    </Tree.TreeNode>\r\n                );\r\n            }\r\n            return (\r\n                <Tree.TreeNode\r\n                    key={item.id}\r\n                    title={item.name}\r\n                    selectable={false}\r\n                    checkable\r\n                />\r\n            );\r\n        });\r\n\r\n    return (\r\n        <div>\r\n            <div style={{ paddingBottom: '15px', textAlign: 'left' }}>\r\n                <Typography.Title level={4} style={{ paddingBottom: 7 }}>\r\n                    Danh sách quyền\r\n                </Typography.Title>\r\n                <Button style={{ marginRight: '15px' }} type=\"primary\" onClick={() => handleExpandAll()}>Mở tất cả </Button>\r\n                <Button type=\"primary\" onClick={() => handleCollapseAll()}>Đóng tất cả</Button>\r\n            </div>\r\n            <div style={{ maxHeight: 500, overflow: 'auto' }}>\r\n                <Tree\r\n                    expandedKeys={expandedKeys}\r\n                    onExpand={handleNodeExpand}\r\n                    showLine\r\n                    // defaultExpandParent\r\n                    checkable\r\n                    checkedKeys={checkedKeys}\r\n                    onCheck={onCheck}\r\n                >\r\n                    {renderTreeNodes(props.treeData)}\r\n                </Tree>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default TreePermissions;\r\n","import React, { useCallback, useEffect, useState, useMemo, memo } from 'react';\r\nimport { Typography, Button, Spin, Space, Modal, message, Row, Input, TreeSelect } from 'antd';\r\nimport { PlusCircleOutlined, ExclamationCircleOutlined } from '@ant-design/icons';\r\nimport PropTypes from 'prop-types';\r\nimport { useSelector } from 'react-redux';\r\n\r\n// Services\r\nimport { getPermissionsInRole, getPermissionsTreeModel, saveRole } from 'services/permissions';\r\nimport { DELETE_SUCCESS, DELETE_ERROR, SAVE_ERROR, SAVE_SUCCESS } from 'utils/common/messageContants';\r\n\r\n// Components\r\nimport Grid from 'components/Grid';\r\nimport PageWrapper from 'components/Layout/PageWrapper';\r\n\r\nimport * as selectors from '../controllers/selectors';\r\n\r\nimport './PermissionList.less';\r\nimport TreePermissions from './TreePermission/TreePermissions';\r\nimport { isAccessed } from 'utils/utils';\r\n\r\nconst PermissionList = () => {\r\n  const roleSelected = useSelector(selectors.selectActiveRoleDetail());\r\n  const permissionsAvailable = useSelector(selectors.setPermissionsAvaiable());\r\n  const SHOW_PARENT = TreeSelect.SHOW_PARENT;\r\n\r\n  const [permissions, setPermission] = useState({\r\n    allPermisions: [],\r\n    currentPermisions: [],\r\n  });\r\n  const [permissionsSelected, setPermissionsSelected] = useState([]);\r\n  const [isLoading, setLoading] = useState(false);\r\n  const [toggleModal, setToggleModal] = useState(false);\r\n  const [searchValue, setSearchValue] = useState('');\r\n  const [treePermissions, setTreePermissions] = useState([]);\r\n  const [checkedData, setCheckedData] = useState([]);\r\n\r\n\r\n  const permissionsUnInRole = useMemo(() => {\r\n    // #29 - Filter permissions exist in role before\r\n    const permissionsUnRole = permissionsAvailable.filter(\r\n      (el) => !permissions.allPermisions.find((element) => element.name === el.name),\r\n    );\r\n\r\n    return (\r\n      permissionsUnRole.map((item) => ({\r\n        label: item.name,\r\n        value: item.id,\r\n        key: item.id,\r\n      })) || []\r\n    );\r\n  }, [permissions, permissionsAvailable]);\r\n\r\n  useEffect(() => {\r\n    if (roleSelected) {\r\n      const getPermissionUser = async () => {\r\n        await getPermissionsData();\r\n      };\r\n\r\n      getPermissionUser();\r\n\r\n      // Clear search value\r\n      setSearchValue('');\r\n    }\r\n  }, [roleSelected]);\r\n\r\n  const getPermissionsData = async () => {\r\n    setLoading(true);\r\n    const data = await getPermissionsInRole(roleSelected?.id);\r\n\r\n    if (data?.isSuccess) {\r\n      let permission = data?.data || [];\r\n      //permission = permission.map((item, index) => ({ ...item, id: `${index}_${item.permissionName}` }));\r\n      setPermission({\r\n        allPermisions: permission,\r\n        currentPermisions: permission,\r\n      });\r\n      setCheckedData(permission.map(x => x.id))\r\n    }\r\n    setLoading(false);\r\n  };\r\n\r\n  const handleSearch = (text) => {\r\n    const allPers = permissions.allPermisions;\r\n\r\n    if (!text) {\r\n      setPermission({\r\n        allPermisions: allPers,\r\n        currentPermisions: allPers,\r\n      });\r\n      return;\r\n    }\r\n    const newPermisions = allPers.filter((el) => {\r\n      if (el.permissionDisplayName && el.permissionDisplayName.toLowerCase().includes(text.toLowerCase())) return el;\r\n    });\r\n    setPermission({\r\n      allPermisions: allPers,\r\n      currentPermisions: newPermisions,\r\n    });\r\n  };\r\n\r\n  const handleOnChangeSearch = useCallback((e) => setSearchValue(e.target.value), [searchValue]);\r\n\r\n  const onClickDelete = useCallback(\r\n    (value) => {\r\n      Modal.confirm({\r\n        title: 'Xác Nhận',\r\n        icon: <ExclamationCircleOutlined />,\r\n        content: 'Bạn có chắc chắn muốn xóa dòng dữ liệu đã chọn?',\r\n        okText: 'Xác Nhận',\r\n        cancelText: 'Hủy',\r\n        onOk: () => handleDeletePermission(value),\r\n      });\r\n    },\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    [permissions],\r\n  );\r\n\r\n  const handleDeletePermission = useCallback(\r\n    async (value) => {\r\n      setLoading(true);\r\n      const allPer = permissions?.allPermisions || [];\r\n      const currentPer = permissions?.currentPermisions || [];\r\n\r\n      // Remove permission in all permissions\r\n      const permissionUpdate = allPer.filter((item) => item.id !== value.id);\r\n\r\n      // Remove permission in current permissions\r\n      const currentPermissionUpdate = currentPer.filter((item) => item.id !== value.id);\r\n\r\n      let dataUpdated = [];\r\n\r\n      permissionUpdate.map((item) => {\r\n        if (item.id !== permissionUpdate.id) {\r\n          dataUpdated.push(item.id);\r\n        }\r\n      });\r\n\r\n      const res = await handleSaveRole(dataUpdated);\r\n\r\n      if (res.isSuccess) {\r\n        message.success(DELETE_SUCCESS);\r\n        setPermission({\r\n          currentPermisions: currentPermissionUpdate,\r\n          allPermisions: permissionUpdate,\r\n        });\r\n      } else {\r\n        message.error(res?.message || DELETE_ERROR);\r\n      }\r\n      setLoading(false);\r\n    },\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    [permissions],\r\n  );\r\n\r\n  const handleSaveRole = useCallback(\r\n    async (dataUpdated) => {\r\n      const payload = {\r\n        id: roleSelected.id,\r\n        input: {\r\n          id: roleSelected.id,\r\n          name: roleSelected.name,\r\n          description: roleSelected.description,\r\n          permissions: dataUpdated,\r\n        },\r\n      };\r\n\r\n      const res = await saveRole(payload);\r\n\r\n      return res;\r\n    },\r\n    [roleSelected, permissionsSelected],\r\n  );\r\n\r\n  const onCreate = useCallback(() => {\r\n    setToggleModal(true);\r\n  }, [permissions, permissionsAvailable]);\r\n\r\n\r\n  const handleCancel = () => {\r\n    setToggleModal(false);\r\n    setPermissionsSelected([]);\r\n  };\r\n\r\n  const handleOnChangePermissions = useCallback(\r\n    (value) => {\r\n      setPermissionsSelected(value);\r\n    },\r\n    [permissionsUnInRole, permissionsSelected],\r\n  );\r\n\r\n  const handleAddNewPermissions = (perChecked) => {\r\n    setCheckedData(perChecked)\r\n    setLoading(true);\r\n    // #29 - Add permissions in role\r\n    handleSaveRole(perChecked).then(res => {\r\n      if (res.isSuccess) {\r\n        message.success(SAVE_SUCCESS);\r\n      } else {\r\n        message.error(res?.message || SAVE_ERROR);\r\n      }\r\n      setLoading(false);\r\n    })\r\n  };\r\n\r\n  useEffect(() => {\r\n    let a = isAccessed('thinh')\r\n    getPermissionsTreeModel().then(res => {\r\n      setTreePermissions(res.data)\r\n    })\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <PageWrapper className={permissions.currentPermisions?.length == 0 ? 'no-record' : ''}>\r\n        <Spin spinning={isLoading}>\r\n          <TreePermissions\r\n            treeData={treePermissions}\r\n            checkedData={checkedData}\r\n            savePermissionsIntoRole={(perChecked) => handleAddNewPermissions(perChecked)}\r\n          />\r\n        </Spin>\r\n      </PageWrapper>\r\n    </>\r\n  );\r\n};\r\n\r\nPermissionList.propTypes = {\r\n  roleSelected: PropTypes.object,\r\n};\r\n\r\nexport default memo(PermissionList);\r\n","import React, { useEffect, useState } from 'react';\r\nimport { Form, Modal, TreeSelect, Button } from 'antd';\r\nimport { getUserNotInRoles } from 'services/permissions';\r\n\r\nconst AddUser = ({ isLoading, form, onFinish, isOpen, handleCancel, roleId }) => {\r\n  const [users, setUsers] = useState([]);\r\n\r\n  const buildUsers = (data) => {\r\n    const users = data.map((item) => ({\r\n      title: item.userName,\r\n      value: item.id,\r\n      key: item.id,\r\n    }));\r\n    return users;\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (isOpen) {\r\n      getUsers();\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [roleId, isOpen]);\r\n\r\n  const getUsers = async () => {\r\n    const result = await getUserNotInRoles(roleId);\r\n    if (result.isSuccess) {\r\n      const users = buildUsers(result.data || []);\r\n      setUsers(users);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Modal\r\n      isLoading={isLoading}\r\n      title={form?.getFieldValue('id') ? 'Chỉnh sửa tài khoản' : 'Thêm tài khoản'}\r\n      open={isOpen}\r\n      form={form}\r\n      onCancel={handleCancel}\r\n      footer={[\r\n        <Button form=\"add-user-form\" key=\"back\" onClick={handleCancel}>\r\n          Hủy\r\n        </Button>,\r\n        <Button form=\"add-user-form\" key=\"submit\" type=\"primary\" htmlType=\"submit\">\r\n          Lưu\r\n        </Button>,\r\n      ]}\r\n    >\r\n      <Form id=\"add-user-form\" form={form} layout=\"vertical\" onFinish={onFinish}>\r\n        <Form.Item\r\n          label=\"Tài khoản\"\r\n          name=\"taikhoan\"\r\n          rules={[{ required: true, message: 'Tài khoản không được bỏ trống!' }]}\r\n        >\r\n          <TreeSelect\r\n            placeholder=\"Chọn tài khoản...\"\r\n            treeCheckable={true}\r\n            treeData={users}\r\n            treeDefaultExpandAll={true}\r\n            style={{ width: '100%' }}\r\n            allowClear={true}\r\n            filterTreeNode={(search, item) => item.title.toLowerCase().indexOf(search.toLowerCase()) >= 0}\r\n            popupClassName=\"tree-select-user\"\r\n          />\r\n        </Form.Item>\r\n      </Form>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default AddUser;\r\n","import React, { useMemo, useState, useEffect, useCallback } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { Input, Row, Typography, Button, Spin, Form, message } from 'antd';\r\nimport Grid from 'components/Grid';\r\nimport { ButtonDelete } from 'common/components/Buttons';\r\nimport { PlusCircleOutlined } from '@ant-design/icons';\r\nimport Space from 'components/Space';\r\nimport * as selectors from '../controllers/selectors';\r\nimport './RoleUsers.less';\r\nimport { getUserInRole, saveUserToRole, deleteUserToRole } from 'services/permissions';\r\nimport PageWrapper from 'components/Layout/PageWrapper';\r\nimport AddUser from './AddUser';\r\nimport { DELETE_SUCCESS } from 'utils/common/messageContants';\r\n\r\nconst RoleUsers = () => {\r\n  const activeRoleId = useSelector(selectors.selectActiveRoleId());\r\n\r\n  const [isLoading, setLoading] = useState(false);\r\n  const [userInRole, setUserInRole] = useState({\r\n    allUsers: [],\r\n    currentUsers: [],\r\n  });\r\n  const [isOpen, setIsOpen] = useState(false);\r\n  const [searchValue, setSearchValue] = useState('');\r\n\r\n  const [form] = Form.useForm();\r\n\r\n  useEffect(() => {\r\n    if (activeRoleId) {\r\n      setSearchValue('');\r\n    }\r\n  }, [activeRoleId]);\r\n\r\n  const onFinish = () => {\r\n    const { taikhoan } = form.getFieldsValue();\r\n    handleSubmit({ roleId: activeRoleId, userIds: taikhoan });\r\n  };\r\n\r\n  const handleSubmit = async (data) => {\r\n    setLoading(true);\r\n    const result = await saveUserToRole(data);\r\n    if (result.isSuccess) {\r\n      form.resetFields();\r\n      setIsOpen(false);\r\n      getPermissionUser();\r\n    } else {\r\n      message.error(result.message);\r\n    }\r\n    setLoading(false);\r\n  };\r\n  const onClickDelete = useCallback(\r\n    async (id) => {\r\n      setLoading(true);\r\n      const result = await deleteUserToRole({ roleId: activeRoleId, userIds: [id] });\r\n      if (result.isSuccess) {\r\n        message.success(DELETE_SUCCESS);\r\n        getPermissionUser();\r\n      } else {\r\n        message.error(result.message);\r\n      }\r\n      setLoading(false);\r\n    },\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    [activeRoleId],\r\n  );\r\n\r\n  const columns = useMemo(\r\n    () => [\r\n      {\r\n        title: 'Tên người dùng',\r\n        dataIndex: 'userName',\r\n      },\r\n      {\r\n        title: 'Tài khoản',\r\n        dataIndex: 'email',\r\n        width: '46%',\r\n      },\r\n      {\r\n        title: '',\r\n        dataIndex: 'action',\r\n        width: '30px',\r\n        // eslint-disable-next-line no-unused-vars\r\n        render: (_, value) => <ButtonDelete onClick={() => onClickDelete(value.id)}></ButtonDelete>,\r\n      },\r\n    ],\r\n    [onClickDelete],\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (activeRoleId) {\r\n      getPermissionUser();\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [activeRoleId]);\r\n\r\n  const getPermissionUser = async () => {\r\n    setLoading(true);\r\n    const data = await getUserInRole(activeRoleId);\r\n    if (data.isSuccess) {\r\n      setUserInRole({\r\n        allUsers: data.data,\r\n        currentUsers: data.data,\r\n      });\r\n    }\r\n    setLoading(false);\r\n  };\r\n  if (!activeRoleId) return null;\r\n\r\n  const handleSearch = (text) => {\r\n    const users = userInRole.allUsers;\r\n\r\n    if (!text) {\r\n      setUserInRole({ allUsers: users, currentUsers: users });\r\n      return;\r\n    }\r\n    const newUsers = users.filter((el) => {\r\n      if (el.tenNhanVien && el.tenNhanVien.toLowerCase().includes(text.toLowerCase())) return el;\r\n    });\r\n    setUserInRole({ allUsers: users, currentUsers: newUsers });\r\n  };\r\n\r\n  const handleOnChangeSearch = (e) => setSearchValue(e.target.value);\r\n\r\n  return (\r\n    <>\r\n      <Row className=\"role-users\">\r\n        <RoleUserTool\r\n          addUser={() => setIsOpen(true)}\r\n          onSearch={handleSearch}\r\n          searchValue={searchValue}\r\n          onChangeSearch={handleOnChangeSearch}\r\n        />\r\n      </Row>\r\n      <PageWrapper className={userInRole.currentUsers.length === 0 ? 'no-record' : ''}>\r\n        <Spin spinning={isLoading}>\r\n          {userInRole.currentUsers.length > 0 ? (\r\n            <Grid\r\n              rowKey=\"id\"\r\n              hasRowSelected={false}\r\n              columns={columns}\r\n              shouldShowTotal={true}\r\n              data={userInRole.currentUsers}\r\n              pageSize={5}\r\n            />\r\n          ) : (\r\n            !isLoading && <span> Không có tài khoản cho nhóm quyền</span>\r\n          )}\r\n        </Spin>\r\n      </PageWrapper>\r\n      <AddUser\r\n        isLoading={isLoading}\r\n        isOpen={isOpen}\r\n        handleCancel={() => {\r\n          form.resetFields();\r\n          setIsOpen(false);\r\n        }}\r\n        form={form}\r\n        onFinish={onFinish}\r\n        roleId={activeRoleId}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nRoleUsers.propTypes = {};\r\n\r\nexport default RoleUsers;\r\n\r\nexport const RoleUserTool = ({ addUser, onSearch, searchValue, onChangeSearch }) => (\r\n  <Row className=\"role-users__tool\" align=\"space-between\">\r\n    <Typography.Title level={4} style={{ margin: 0 }}>\r\n      Danh sách tài khoản\r\n    </Typography.Title>\r\n    <Space>\r\n      <Input.Search\r\n        value={searchValue}\r\n        onChange={onChangeSearch}\r\n        placeholder=\"Tìm kiếm tài khoản\"\r\n        type=\"primary\"\r\n        onSearch={onSearch}\r\n        enterButton\r\n        allowClear\r\n      />\r\n      <Button type=\"primary\" style={{ width: '170px' }} onClick={addUser} icon={<PlusCircleOutlined />}>\r\n        Thêm tài khoản\r\n      </Button>\r\n    </Space>\r\n  </Row>\r\n);\r\n","import React, { useEffect } from 'react';\r\nimport { Col, Row } from 'antd';\r\nimport { useDispatch } from 'react-redux';\r\n\r\nimport HeaderPage from 'pages/home/header-page';\r\nimport RoleList from './components/RoleList';\r\nimport PermissionList from './components/PermissionList';\r\nimport RoleUsers from './components/RoleUsers';\r\nimport PageWrapper from 'components/Layout/PageWrapper';\r\n\r\nimport { useInjectReducer } from 'utils/common/injectedReducers';\r\n// import { useInjectSaga } from 'utils/common/injectSaga';\r\nimport reducers from './controllers/reducer';\r\nimport * as actions from './controllers/actions';\r\n\r\n// Services\r\nimport { getPermissionsAvailable } from 'services/permissions';\r\nimport { isAccessed } from 'utils/utils';\r\nimport { PER } from 'common/enum';\r\n// import PermissionListV2 from './components/PermissionListV2';\r\n// import saga from './controllers/saga';\r\n\r\nconst key = 'rolePermission';\r\n\r\nconst Permission = () => {\r\n  useInjectReducer({ key, reducer: reducers });\r\n  // useInjectSaga({ key, saga });\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    const getPermissionsAvailableInRole = async () => {\r\n      const res = await getPermissionsAvailable();\r\n      if (res.isSuccess) {\r\n        const permissionsAvailable = res.data || [];\r\n        dispatch(actions.setPermissionsAvailbe(permissionsAvailable));\r\n      }\r\n    };\r\n\r\n    getPermissionsAvailableInRole();\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"permisions\">\r\n      {isAccessed(PER.PHAN_QUYEN) && (\r\n        <div>\r\n\r\n          <HeaderPage title=\"PHÂN QUYỀN\" actions={false} />\r\n          <div className=\"main__application\">\r\n            <PageWrapper>\r\n              <Row gutter={16}>\r\n                <Col span={16}>\r\n                  <RoleList />\r\n                  <RoleUsers />\r\n                </Col>\r\n                <Col span={8}>\r\n                  <PermissionList />\r\n                </Col>\r\n              </Row>\r\n            </PageWrapper>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nPermission.propTypes = {};\r\n\r\nexport default Permission;\r\n","import React from 'react';\r\nimport { Button } from 'antd';\r\nfunction PrimaryButton(props) {\r\n  return <Button type=\"primary\" size=\"small\" {...props} />;\r\n}\r\n\r\nPrimaryButton.propTypes = {};\r\n\r\nexport default PrimaryButton;\r\n","import React from 'react';\r\nimport { Button } from 'antd';\r\nfunction DangerButton(props) {\r\n  return <Button danger size=\"small\" {...props} />;\r\n}\r\n\r\nDangerButton.propTypes = {};\r\n\r\nexport default DangerButton;\r\n","import React from 'react';\r\nimport { Button } from 'antd';\r\nfunction DefaultButton(props) {\r\n  return <Button type=\"default\" size=\"small\" {...props} />;\r\n}\r\n\r\nDefaultButton.propTypes = {};\r\n\r\nexport default DefaultButton;\r\n","import React from 'react';\r\nimport DefaultButton from './PrimaryButton';\r\nimport { StopOutlined } from '@ant-design/icons';\r\n\r\nfunction ButtonCancel({ title = 'Thêm mới', ...rest }) {\r\n  return (\r\n    <DefaultButton icon={<StopOutlined />} {...rest}>\r\n      {title}\r\n    </DefaultButton>\r\n  );\r\n}\r\n\r\nButtonCancel.propTypes = {};\r\n\r\nexport default ButtonCancel;\r\n","import React from 'react';\r\nimport DangerButton from './DangerButton';\r\nimport { DeleteOutlined } from '@ant-design/icons';\r\n\r\nfunction ButtonDelete({ title = '', ...rest }) {\r\n  return (\r\n    <DangerButton icon={<DeleteOutlined />} {...rest}>\r\n      {title}\r\n    </DangerButton>\r\n  );\r\n}\r\n\r\nButtonDelete.propTypes = {};\r\n\r\nexport default ButtonDelete;\r\n","import React from 'react';\r\nimport { EditOutlined } from '@ant-design/icons';\r\nimport DefaultButton from './DefaultButton';\r\n\r\nfunction ButtonEdit({ title = '', ...rest }) {\r\n  return (\r\n    <DefaultButton icon={<EditOutlined />} {...rest}>\r\n      {title}\r\n    </DefaultButton>\r\n  );\r\n}\r\n\r\nButtonEdit.propTypes = {};\r\n\r\nexport default ButtonEdit;\r\n","import moment from \"moment\";\r\n\r\nexport const formatCurrency = (number) => {\r\n  if (Number.isNaN(number) || !number || number === null) {\r\n    number = 0;\r\n  }\r\n  let vnd = new Intl.NumberFormat('vi-VN', {\r\n    style: 'currency',\r\n    currency: 'VND',\r\n  });\r\n  return vnd.format(number).replaceAll('₫', '');\r\n};\r\n\r\nexport const formatCurrencyInput = (numberString) => {\r\n  let number = numberString.replaceAll('.', '');\r\n  return Number(number);\r\n};\r\n\r\nexport const formatDateYMD = (date) => {\r\n  let myDate = moment(date);\r\n  return moment.isMoment(myDate) ? myDate?.format('YYYY-MM-DD') : myDate\r\n}\r\n","import produce from 'immer';\r\nimport * as types from './constants';\r\n\r\n// initial state\r\nexport const initialState = {\r\n  idSelections: [],\r\n  detailSelections: [],\r\n};\r\n\r\nconst gridViewReducer = (state = initialState, action) =>\r\n  produce(state, (draft) => {\r\n    switch (action.type) {\r\n      case types.SET_ITEM_ID_SELECTIONS:\r\n        draft.idSelections = action.payload;\r\n        break;\r\n      case types.SET_ITEM_DETAIL_SELECTIONS:\r\n        draft.detailSelections = action.payload;\r\n        break;\r\n    }\r\n  });\r\n\r\nexport default gridViewReducer;\r\n","export const SET_ITEM_ID_SELECTIONS = 'SET_ITEM_ID_SELECTIONS';\r\nexport const SET_ITEM_DETAIL_SELECTIONS = 'SET_ITEM_DETAIL_SELECTIONS';\r\n","import { Button, Divider, Space, Tooltip } from 'antd';\r\nimport React from 'react';\r\nconst ButtonTooltip = (props) => (\r\n  <>\r\n    <Space wrap>\r\n      <Tooltip title={props?.tip} color=\"blue\" key=\"blue\">\r\n        {props.children}\r\n      </Tooltip>\r\n    </Space>\r\n  </>\r\n);\r\nexport default ButtonTooltip;\r\n\r\n\r\n\r\n\r\n// import React from 'react';\r\n// import { Button } from 'antd';\r\n\r\n// function ButtonToolTip(props) {\r\n//   return <Button type=\"primary\" size=\"small\" {...props} />;\r\n// }\r\n\r\n// ButtonToolTip.propTypes = {};\r\n\r\n// export default ButtonToolTip;\r\n","export const mapToSelectOption = (data) => {\r\n  const options = data.map((x) => {\r\n    return {\r\n      value: x.id,\r\n      label: x.name,\r\n    };\r\n  });\r\n  return options\r\n};\r\n\r\nexport const isAccessed = (permissionsAction) => {\r\n  if (!permissionsAction) return\r\n\r\n  const userInfo = JSON.parse(localStorage.getItem('userInfo'))\r\n  const permissionsList = userInfo.permissions\r\n  if (permissionsList && permissionsList.length > 0) {\r\n    return permissionsList.includes(permissionsAction)\r\n  }\r\n\r\n  return false\r\n}\r\n","import React from 'react';\r\nimport classnames from 'classnames';\r\n\r\nimport './PageWrapper.less';\r\n\r\nfunction PageWrapper({ className, children, ...rest }) {\r\n  return (\r\n    <div className={classnames('section-wrapper', className)} {...rest}>\r\n      {children}\r\n    </div>\r\n  );\r\n}\r\n\r\nPageWrapper.propTypes = {};\r\n\r\nexport default PageWrapper;\r\n","import { createSelector } from 'reselect';\r\nimport { initialState } from './reducer';\r\n\r\nconst selectGridView = (state) => (state && state.tableView) || initialState;\r\n\r\nconst selectGridIdSelections = () => createSelector(selectGridView, (globalState) => globalState.idSelections);\r\n\r\nconst selectGridDetailSelections = () => createSelector(selectGridView, (globalState) => globalState.detailSelections);\r\n\r\nexport { selectGridView, selectGridIdSelections, selectGridDetailSelections };\r\n","import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Row, Col, Input, Button, Typography } from 'antd';\r\nimport { PlusCircleOutlined, BarsOutlined, FilterOutlined } from '@ant-design/icons';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { ButtonDelete, PrimaryButton } from 'common/components/Buttons';\r\n\r\nimport * as gridViewSelectors from 'components/Grid/controllers/selectors';\r\nimport { updateSearch } from 'redux/global/actions';\r\nimport './header.less';\r\n\r\nconst { Search } = Input;\r\n\r\nconst HeaderPage = ({\r\n  title = '',\r\n  actions = 'default',\r\n  onCreate,\r\n  handleDelete,\r\n  labelPrimaryBtn = \"\",\r\n  onPressPrimaryBtn = () => { },\r\n  isFilter = false,\r\n  onFilter,\r\n  isHideAction = false,\r\n  isShowActionDelete = true,\r\n  isShowActionAdd = true,\r\n}) => {\r\n  const dispatch = useDispatch();\r\n  const itemSelections = useSelector(gridViewSelectors.selectGridIdSelections());\r\n\r\n  const onSearch = (text) => {\r\n    dispatch(updateSearch(text));\r\n  };\r\n\r\n\r\n  return (\r\n    <div className=\"header-page\">\r\n      <Row className=\"wrapper\" justify=\"space-around\" align=\"center\">\r\n        <Col className=\"header-page__title\">\r\n          <Typography.Title level={3}>{title}</Typography.Title>\r\n        </Col>\r\n        <Col flex={1} style={{ textAlign: 'right' }}>\r\n          {actions === 'default' ? (\r\n            <Row\r\n              style={{\r\n                display: 'flex',\r\n                flexWrap: 'nowrap',\r\n                gap: '16px',\r\n                justifyContent: 'end',\r\n              }}\r\n            >\r\n              <Search className=\"header-page__search\" placeholder=\"Tìm kiếm...\" onSearch={onSearch} enterButton />\r\n              {isFilter &&\r\n                (<Button type=\"primary\" onClick={() => onFilter()} icon={<FilterOutlined />}>\r\n                </Button>)\r\n              }\r\n              {isHideAction === false && (\r\n                <>\r\n                  {isShowActionAdd && (\r\n                    <Button type=\"primary\" onClick={() => onCreate()} icon={<PlusCircleOutlined />}>\r\n                      Thêm mới\r\n                    </Button>\r\n                  )}\r\n                  {!!labelPrimaryBtn && <PrimaryButton size=\"medium\" icon={<BarsOutlined />} onClick={onPressPrimaryBtn}>\r\n                    {labelPrimaryBtn}\r\n                  </PrimaryButton>}\r\n                  {isShowActionDelete && (\r\n                    <ButtonDelete\r\n                      size=\"medium\"\r\n                      onClick={() => handleDelete && handleDelete(itemSelections)}\r\n                      disabled={!itemSelections.length}\r\n                    >\r\n                      Xóa\r\n                    </ButtonDelete>\r\n                  )}\r\n                </>\r\n              )}\r\n            </Row>\r\n          ) : typeof actions === 'function' ? (\r\n            actions()\r\n          ) : null}\r\n        </Col>\r\n      </Row>\r\n    </div>\r\n  );\r\n};\r\n\r\nHeaderPage.propTypes = {\r\n  title: PropTypes.string,\r\n  actions: PropTypes.oneOfType([PropTypes.string, PropTypes.func, PropTypes.bool]),\r\n  onCreate: PropTypes.func,\r\n  handleDelete: PropTypes.func,\r\n  labelPrimaryBtn: PropTypes.string,\r\n  onPressPrimaryBtn: PropTypes.func,\r\n};\r\n\r\nexport default HeaderPage;\r\n","import * as types from './constants';\r\n\r\nexport function setItemIdSelections(items) {\r\n  return {\r\n    type: types.SET_ITEM_ID_SELECTIONS,\r\n    payload: items,\r\n  };\r\n}\r\nexport function setItemDetailSelections(items) {\r\n  return {\r\n    type: types.SET_ITEM_DETAIL_SELECTIONS,\r\n    payload: items,\r\n  };\r\n}\r\n","import React, { useContext, useReducer, useCallback } from 'react';\r\n\r\nconst ActionKind = {\r\n  SET_STATE: 'SET_STATE',\r\n  SET_DATA: 'SET_DATA',\r\n  SET_PAGE: 'SET_PAGE',\r\n  SET_TOTAL_PAGE: 'SET_TOTAL_PAGE',\r\n  SET_TOTAL_ELEMENT: 'SET_TOTAL_ELEMENT',\r\n  SET_LOADING: 'SET_LOADING',\r\n  SET_PAGESIZE: 'SET_PAGESIZE',\r\n  SET_SORT: 'SET_SORT',\r\n  SET_SEARCH_TEXT: 'SET_SEARCH_TEXT',\r\n};\r\n\r\nexport const initialState = {\r\n  data: [],\r\n  currentPage: 1,\r\n  totalPage: 1,\r\n  totalElement: 0,\r\n  pageSize: 10,\r\n  loading: false,\r\n  searchText: '',\r\n  sort: [\r\n    {\r\n      field: '',\r\n      order: '',\r\n    },\r\n  ],\r\n};\r\n\r\nconst store = React.createContext({\r\n  state: initialState,\r\n  setState: () => null,\r\n  setPage: () => null,\r\n  setTotalPage: () => null,\r\n  setData: () => null,\r\n  setTotalElement: () => null,\r\n  setLoading: () => null,\r\n  setPageSize: () => null,\r\n});\r\n\r\nconst { Provider } = store;\r\n\r\nconst TableProvider = ({ children, initState }) => {\r\n  const [state, dispatch] = useReducer(\r\n    (state, action) => {\r\n      switch (action.type) {\r\n        case ActionKind.SET_STATE:\r\n          return {\r\n            ...state,\r\n            ...action.payload,\r\n          };\r\n        case ActionKind.SET_DATA:\r\n          return {\r\n            ...state,\r\n            data: action.payload.data,\r\n          };\r\n        case ActionKind.SET_PAGE:\r\n          return {\r\n            ...state,\r\n            currentPage: action.payload.currentPage,\r\n          };\r\n        case ActionKind.SET_TOTAL_PAGE:\r\n          return {\r\n            ...state,\r\n            totalPage: action.payload.totalPage,\r\n          };\r\n        case ActionKind.SET_TOTAL_ELEMENT:\r\n          return {\r\n            ...state,\r\n            totalElement: action.payload.totalElement,\r\n          };\r\n        case ActionKind.SET_LOADING:\r\n          return {\r\n            ...state,\r\n            loading: action.payload.loading,\r\n          };\r\n        case ActionKind.SET_PAGESIZE:\r\n          return {\r\n            ...state,\r\n            pageSize: action.payload.pageSize,\r\n          };\r\n        case ActionKind.SET_SEARCH_TEXT:\r\n          return {\r\n            ...state,\r\n            searchText: action.payload.searchText,\r\n          };\r\n        case ActionKind.SET_SORT:\r\n          return {\r\n            ...state,\r\n            sort: action.payload.sort,\r\n          };\r\n        default:\r\n          return { ...state };\r\n      }\r\n    },\r\n    { ...initialState, ...initState },\r\n  );\r\n\r\n  const setState = useCallback((state) => {\r\n    dispatch({\r\n      type: ActionKind.SET_STATE,\r\n      payload: state,\r\n    });\r\n  }, []);\r\n\r\n  const setPage = useCallback((page) => {\r\n    dispatch({\r\n      type: ActionKind.SET_PAGE,\r\n      payload: {\r\n        currentPage: page,\r\n      },\r\n    });\r\n  }, []);\r\n\r\n  const setData = useCallback((data) => {\r\n    dispatch({\r\n      type: ActionKind.SET_DATA,\r\n      payload: {\r\n        data: data,\r\n      },\r\n    });\r\n  }, []);\r\n\r\n  const setTotalPage = useCallback((total) => {\r\n    dispatch({\r\n      type: ActionKind.SET_TOTAL_PAGE,\r\n      payload: {\r\n        totalPage: total,\r\n      },\r\n    });\r\n  }, []);\r\n\r\n  const setLoading = useCallback((val) => {\r\n    dispatch({\r\n      type: ActionKind.SET_LOADING,\r\n      payload: {\r\n        loading: val,\r\n      },\r\n    });\r\n  }, []);\r\n\r\n  const setTotalElement = useCallback((total) => {\r\n    dispatch({\r\n      type: ActionKind.SET_TOTAL_ELEMENT,\r\n      payload: {\r\n        totalElement: total,\r\n      },\r\n    });\r\n  }, []);\r\n\r\n  const setPageSize = useCallback((size) => {\r\n    dispatch({\r\n      type: ActionKind.SET_PAGESIZE,\r\n      payload: {\r\n        pageSize: size,\r\n      },\r\n    });\r\n  }, []);\r\n  const setSearchText = useCallback((searchText) => {\r\n    dispatch({\r\n      type: ActionKind.SET_SEARCH_TEXT,\r\n      payload: {\r\n        searchText: searchText,\r\n      },\r\n    });\r\n  }, []);\r\n  const setSort = useCallback((sort) => {\r\n    dispatch({\r\n      type: ActionKind.SET_SORT,\r\n      payload: {\r\n        sort: sort,\r\n      },\r\n    });\r\n  }, []);\r\n\r\n  return (\r\n    <Provider\r\n      value={{\r\n        state,\r\n        setState,\r\n        setPage,\r\n        setTotalPage,\r\n        setData,\r\n        setLoading,\r\n        setTotalElement,\r\n        setPageSize,\r\n        setSearchText,\r\n        setSort,\r\n      }}\r\n    >\r\n      {children}\r\n    </Provider>\r\n  );\r\n};\r\n\r\nexport default TableProvider;\r\n\r\n// HOC to wrap component with TableProvider\r\nexport function withTable(WrappedComponent, initState = initialState) {\r\n  const ComponentWithTableProvider = (props) => (\r\n    <TableProvider initState={initState}>\r\n      <WrappedComponent {...props} />\r\n    </TableProvider>\r\n  );\r\n  return ComponentWithTableProvider;\r\n}\r\n\r\nexport const useTable = () => useContext(store);\r\n","import React, { useEffect, useCallback, useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Table } from 'antd';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport clsx from 'classnames';\r\nimport { isArray } from 'lodash';\r\n\r\nimport * as api from 'config/axios';\r\nimport * as actions from 'redux/global/actions';\r\nimport reducer from './controllers/reducer';\r\n// import saga from './controllers/saga';\r\nimport * as gridViewActions from './controllers/actions';\r\nimport { useInjectReducer } from 'utils/common/injectedReducers';\r\n// import { useInjectSaga } from 'utils/common/injectSaga';\r\nimport { useTable, withTable } from 'hooks/useTable';\r\n\r\nimport './Grid.less';\r\nimport { formatCurrency } from 'utils/format';\r\n\r\nconst key = 'tableView';\r\n\r\nconst Grid = ({\r\n  className = '',\r\n  columns,\r\n  data,\r\n  expandedRowRender,\r\n  handleGetDetailSelections,\r\n  handleGetSelections,\r\n  hasRowSelected = true,\r\n  isHidePagination,\r\n  rowKey = 'id',\r\n  shouldSaveToStore = true,\r\n  shouldShowTotal = true,\r\n  urlEndpoint,\r\n  pageSize,\r\n  ...rest\r\n}) => {\r\n  useInjectReducer({ key, reducer });\r\n  // useInjectSaga({ key, saga });\r\n\r\n  const dispatch = useDispatch();\r\n  const searchText = useSelector((state) => state.global.searchText);\r\n  const readGrid = useSelector((state) => state.global.refreshGrid);\r\n  const filters = useSelector((state) => state.global.filters);\r\n\r\n  const [idsSelection, setIdsSelection] = useState([]);\r\n  const { state, setState, setLoading, setData } = useTable();\r\n  const [totalAmount, setTotalAmount] = useState('');\r\n\r\n  const resetState = () => {\r\n    dispatch(actions.refreshGrid(false));\r\n  };\r\n\r\n  const getSortItem = (sort) => {\r\n    let sorted = [];\r\n    sort.map((item) => {\r\n      if (item?.field) {\r\n        sorted.push({\r\n          fieldName: item.field,\r\n          isAscending: item.order === 'ascend',\r\n        });\r\n      }\r\n    });\r\n\r\n    return sorted;\r\n  };\r\n\r\n  const fetchData = useCallback(() => {\r\n    if (!urlEndpoint) return;\r\n    setLoading(true);\r\n\r\n    const params = {\r\n      pageSize: state.pageSize,\r\n      pageIndex: state.currentPage - 1,\r\n      searchText: state.searchText,\r\n      sort: getSortItem(state.sort),\r\n      fieldId: filters?.fields,\r\n      filter: [],\r\n    };\r\n\r\n    api\r\n      .sendGet(urlEndpoint, params)\r\n      .then((results) => {\r\n        if (results && results?.isSuccess) {\r\n          const data = results?.data || {};\r\n          setState({\r\n            data: data?.records,\r\n            currentPage: params?.pageIndex || 1,\r\n            totalElement: data?.total || 0,\r\n            loading: false,\r\n          });\r\n          setTotalAmount(results?.data?.totalAmount);\r\n        } else {\r\n          setState({\r\n            data: [],\r\n            totalElement: 0,\r\n          });\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        // eslint-disable-next-line no-console\r\n        console.log('err: ', err);\r\n      })\r\n      .finally(() => {\r\n        setLoading(false);\r\n      });\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [state.pageSize, state.sort, state.searchText, urlEndpoint, filters?.fields]);\r\n\r\n  useEffect(() => {\r\n    fetchData();\r\n  }, [dispatch, fetchData]);\r\n\r\n  useEffect(() => {\r\n    console.log('filtersfilters', filters);\r\n  }, [filters]);\r\n\r\n  useEffect(() => {\r\n    if (urlEndpoint) {\r\n      setState({\r\n        searchText: searchText,\r\n        currentPage: 1,\r\n      });\r\n    }\r\n  }, [searchText, setState, urlEndpoint]);\r\n\r\n  useEffect(() => {\r\n    if (readGrid) {\r\n      fetchData();\r\n      resetState();\r\n    }\r\n\r\n    return () => {\r\n      setIdsSelection([]);\r\n      dispatch(gridViewActions.setItemIdSelections([]));\r\n      dispatch(gridViewActions.setItemDetailSelections([]));\r\n    };\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [readGrid]);\r\n\r\n  useEffect(() => {\r\n    if (data && isArray(data)) {\r\n      setData(data);\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [JSON.stringify(data)]);\r\n\r\n  const onChange = (pagination, filters, sorter) => {\r\n    setState({\r\n      currentPage: pagination.current,\r\n      pageSize: pagination.pageSize,\r\n      sort: sorter ? [sorter] : [],\r\n    });\r\n  };\r\n\r\n  const rowSelection = {\r\n    selectedRowKeys: idsSelection,\r\n    onChange: (selectedRowKeys, selectedRows) => {\r\n      setIdsSelection(selectedRowKeys);\r\n      // handleCallback\r\n      handleGetSelections && handleGetSelections(selectedRowKeys);\r\n      handleGetDetailSelections && handleGetDetailSelections(selectedRows);\r\n\r\n      // save to redux gridView\r\n      if (shouldSaveToStore) {\r\n        dispatch(gridViewActions.setItemIdSelections(selectedRowKeys));\r\n        dispatch(gridViewActions.setItemDetailSelections(selectedRows));\r\n      }\r\n    },\r\n  };\r\n\r\n  const summary = () => (\r\n    <Table.Summary.Row>\r\n      {columns.map((x, index) => (\r\n        <>\r\n          <Table.Summary.Cell>{index === rest?.summaryNumberCol ? formatCurrency(totalAmount) : ''}</Table.Summary.Cell>\r\n        </>\r\n      ))}\r\n      <Table.Summary.Cell></Table.Summary.Cell>\r\n    </Table.Summary.Row>\r\n  );\r\n\r\n  return (\r\n    <div className={clsx('grid', className && className)}>\r\n      <Table\r\n        columns={columns}\r\n        dataSource={state.data}\r\n        onChange={onChange}\r\n        bordered\r\n        pagination={\r\n          isHidePagination\r\n            ? false\r\n            : {\r\n              defaultPageSize: pageSize ? pageSize : state.pageSize,\r\n              showSizeChanger: true,\r\n              pageSizeOptions: ['5', '10', '20', '50'],\r\n              total: state.totalElement,\r\n              showTotal: shouldShowTotal ? () => `Có ${state.totalElement} dữ liệu` : null,\r\n            }\r\n        }\r\n        loading={state.loading}\r\n        expandable={{\r\n          expandedRowRender,\r\n        }}\r\n        rowKey={rowKey}\r\n        rowSelection={hasRowSelected ? rowSelection : null}\r\n        scroll={{ x: '100%' }}\r\n        {...rest}\r\n        summary={(state.data.length > 0 && !!rest.summaryNumberCol) ? summary : () => { }}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nGrid.propTypes = {\r\n  className: PropTypes.string,\r\n  columns: PropTypes.array,\r\n  data: PropTypes.array,\r\n  expandedRowRender: PropTypes.any,\r\n  handleGetDetailSelections: PropTypes.func,\r\n  handleGetSelections: PropTypes.func,\r\n  hasRowSelected: PropTypes.bool,\r\n  isHidePagination: PropTypes.bool,\r\n  rowKey: PropTypes.string,\r\n  shouldSaveToStore: PropTypes.bool,\r\n  shouldShowTotal: PropTypes.bool,\r\n  urlEndpoint: PropTypes.oneOfType([PropTypes.string]),\r\n};\r\n\r\nexport default withTable(Grid);\r\n","import { conformsTo, isFunction, isObject } from 'lodash';\r\nimport invariant from 'invariant';\r\n\r\n/**\r\n * Validate the shape of redux store\r\n */\r\nexport default function checkStore(store) {\r\n  const shape = {\r\n    dispatch: isFunction,\r\n    subscribe: isFunction,\r\n    getState: isFunction,\r\n    replaceReducer: isFunction,\r\n    runSaga: isFunction,\r\n    injectedReducers: isObject,\r\n    injectedSagas: isObject,\r\n  };\r\n  invariant(conformsTo(store, shape), '(app/utils...) injectors: Expected a valid redux store');\r\n}\r\n","import invariant from 'invariant';\r\nimport { isEmpty, isFunction, isString } from 'lodash';\r\n\r\nimport checkStore from './checkStore';\r\nimport createReducer from '../../reducers';\r\n\r\nexport function injectReducerFactory(store, isValid) {\r\n  return function injectReducer(key, reducer) {\r\n    if (!isValid) checkStore(store);\r\n\r\n    invariant(\r\n      isString(key) && !isEmpty(key) && isFunction(reducer),\r\n      '(app/utils...) injectReducer: Expected `reducer` to be a reducer function',\r\n    );\r\n\r\n    // Check `store.injectedReducers[key] === reducer` for hot reloading when a key is the same but a reducer is different\r\n    if (Reflect.has(store.injectedReducers, key) && store.injectedReducers[key] === reducer) return;\r\n\r\n    store.injectedReducers[key] = reducer; // eslint-disable-line no-param-reassign\r\n    store.replaceReducer(createReducer(store.injectedReducers));\r\n  };\r\n}\r\n\r\nexport default function getInjectors(store) {\r\n  checkStore(store);\r\n\r\n  return {\r\n    injectReducer: injectReducerFactory(store, true),\r\n  };\r\n}\r\n","import React from 'react';\r\nimport hoistNonReactStatics from 'hoist-non-react-statics';\r\nimport { ReactReduxContext } from 'react-redux';\r\n\r\nimport getInjectors from './reducerInjectors';\r\n\r\n/**\r\n * Dynamically injects a reducer\r\n *\r\n * @param {string} key A key of the reducer\r\n * @param {function} reducer A reducer that will be injected\r\n *\r\n */\r\nexport default ({ key, reducer }) =>\r\n  (WrappedComponent) => {\r\n    class ReducerInjector extends React.Component {\r\n      static WrappedComponent = WrappedComponent;\r\n\r\n      static contextType = ReactReduxContext;\r\n\r\n      static displayName = `withReducer(${WrappedComponent.displayName || WrappedComponent.name || 'Component'})`;\r\n\r\n      constructor(props, context) {\r\n        super(props, context);\r\n\r\n        getInjectors(context.store).injectReducer(key, reducer);\r\n      }\r\n\r\n      render() {\r\n        return <WrappedComponent {...this.props} />;\r\n      }\r\n    }\r\n\r\n    return hoistNonReactStatics(ReducerInjector, WrappedComponent);\r\n  };\r\n\r\nconst useInjectReducer = ({ key, reducer }) => {\r\n  const context = React.useContext(ReactReduxContext);\r\n  React.useEffect(() => {\r\n    getInjectors(context.store).injectReducer(key, reducer);\r\n  }, [context.store, key, reducer]);\r\n};\r\n\r\nexport { useInjectReducer };\r\n"],"sourceRoot":""}