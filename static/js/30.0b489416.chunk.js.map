{"version":3,"sources":["pages/revenueStatistic/revenueYear.js","pages/revenueStatistic/revenueEmployee.js","pages/revenueStatistic/revenueQuarter.js","pages/revenueStatistic/revenue5Years.js","pages/revenueStatistic/index.js","common/components/Buttons/PrimaryButton.js","common/components/Buttons/DangerButton.js","common/components/Buttons/DefaultButton.js","common/components/Buttons/ButtonCancel.js","common/components/Buttons/ButtonDelete.js","common/components/Buttons/ButtonEdit.js","utils/formatDate.js","components/Grid/controllers/reducer.js","components/Grid/controllers/constants.js","common/components/Buttons/ButtonToolTip.js","utils/utils.js","components/Layout/PageWrapper.js","components/Grid/controllers/selectors.js","pages/home/header-page/index.js"],"names":["RevenueYear","config","data","name","month","amount","isGroup","xField","yField","seriesField","height","className","style","width","placeholder","format","defaultValue","today","picker","RevenueEmployee","autoFit","point","size","shape","label","fill","RevenueQuarter","G","G2","getEngine","appendPadding","type","value","angleField","colorField","radius","legend","labelHeight","formatter","mappingData","group","Group","addShape","attrs","x","y","r","color","text","percent","toFixed","fontWeight","interactions","Revenue5Years","city","columnStyle","option","searchCriteria","SEARCH_CRITERIA","ALL","RevenueStatistic","dispatch","useDispatch","useEffect","actions","id","isAccessed","PER","BAO_CAO_THONG_KE","title","PageWrapper","PrimaryButton","props","DangerButton","danger","DefaultButton","ButtonCancel","ButtonDelete","rest","icon","DeleteOutlined","ButtonEdit","EditOutlined","getDateFormat","date","d","moment","isValid","formatMMDDYYYY","formatDDMMYYYY","DateTimeToDate","dateString","Date","toISOString","split","initialState","idSelections","detailSelections","gridViewReducer","state","action","produce","draft","types","payload","SET_ITEM_ID_SELECTIONS","SET_ITEM_DETAIL_SELECTIONS","ButtonTooltip","wrap","tip","key","children","mapToSelectOption","map","permissionsAction","permissionsList","JSON","parse","localStorage","getItem","permissions","length","includes","classnames","selectGridView","tableView","Search","HeaderPage","onCreate","handleDelete","labelPrimaryBtn","onPressPrimaryBtn","isFilter","onFilter","isHideAction","isShowActionDelete","isShowActionAdd","itemSelections","useSelector","createSelector","globalState","justify","align","Title","level","flex","textAlign","display","flexWrap","gap","justifyContent","onSearch","updateSearch","enterButton","onClick","FilterOutlined","PlusCircleOutlined","BarsOutlined","disabled"],"mappings":"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","file":"static/js/30.0b489416.chunk.js","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { Column } from '@ant-design/plots';\r\nimport { DatePicker } from 'antd';\r\nimport { today } from 'utils/formatDate';\r\n\r\nconst RevenueYear = () => {\r\n  const data = [\r\n    {\r\n      name: 'Hóa đơn',\r\n      month: 'Tháng 1',\r\n      amount: 100,\r\n    },\r\n    {\r\n      name: 'Hóa đơn',\r\n      month: 'Tháng 2',\r\n      amount: 80,\r\n    },\r\n    {\r\n      name: 'Hóa đơn',\r\n      month: 'Tháng 3',\r\n      amount: 120,\r\n    },\r\n    {\r\n      name: 'Hóa đơn',\r\n      month: 'Tháng 4',\r\n      amount: 40,\r\n    },\r\n    {\r\n      name: 'Hóa đơn',\r\n      month: 'Tháng 5',\r\n      amount: 60,\r\n    },\r\n    {\r\n      name: 'Hóa đơn',\r\n      month: 'Tháng 6',\r\n      amount: 70,\r\n    },\r\n    {\r\n      name: 'Hóa đơn',\r\n      month: 'Tháng 7',\r\n      amount: 180,\r\n    },\r\n    {\r\n      name: 'Hóa đơn',\r\n      month: 'Tháng 8',\r\n      amount: 90,\r\n    },\r\n    {\r\n      name: 'Hóa đơn',\r\n      month: 'Tháng 9',\r\n      amount: 150,\r\n    },\r\n    {\r\n      name: 'Hóa đơn',\r\n      month: 'Tháng 10',\r\n      amount: 150,\r\n    },\r\n    {\r\n      name: 'Hóa đơn',\r\n      month: 'Tháng 11',\r\n      amount: 150,\r\n    },\r\n    {\r\n      name: 'Hóa đơn',\r\n      month: 'Tháng 12',\r\n      amount: 150,\r\n    },\r\n    {\r\n      name: 'Hợp đồng',\r\n      month: 'Tháng 1',\r\n      amount: 90,\r\n    },\r\n    {\r\n      name: 'Hợp đồng',\r\n      month: 'Tháng 2',\r\n      amount: 90,\r\n    },\r\n    {\r\n      name: 'Hợp đồng',\r\n      month: 'Tháng 3',\r\n      amount: 30,\r\n    },\r\n    {\r\n      name: 'Hợp đồng',\r\n      month: 'Tháng 4',\r\n      amount: 500,\r\n    },\r\n    {\r\n      name: 'Hợp đồng',\r\n      month: 'Tháng 5',\r\n      amount: 400,\r\n    },\r\n    {\r\n      name: 'Hợp đồng',\r\n      month: 'Tháng 6',\r\n      amount: 550,\r\n    },\r\n    {\r\n      name: 'Hợp đồng',\r\n      month: 'Tháng 7',\r\n      amount: 65,\r\n    },\r\n    {\r\n      name: 'Hợp đồng',\r\n      month: 'Tháng 8',\r\n      amount: 150,\r\n    },\r\n    {\r\n      name: 'Hợp đồng',\r\n      month: 'Tháng 9',\r\n      amount: 150,\r\n    },\r\n    {\r\n      name: 'Hợp đồng',\r\n      month: 'Tháng 10',\r\n      amount: 150,\r\n    },\r\n    {\r\n      name: 'Hợp đồng',\r\n      month: 'Tháng 11',\r\n      amount: 150,\r\n    },\r\n    {\r\n      name: 'Hợp đồng',\r\n      month: 'Tháng 12',\r\n      amount: 150,\r\n    },\r\n  ];\r\n  const config = {\r\n    data,\r\n    isGroup: true,\r\n    xField: 'month',\r\n    yField: 'amount',\r\n    seriesField: 'name',\r\n    height: 200,\r\n    // width: 260,\r\n  };\r\n  return (\r\n    <>\r\n      <div>\r\n        <div className=\"title-chart\">\r\n          <h3>Thống kê doanh số theo năm</h3>\r\n          <span>\r\n            Năm:{' '}\r\n            <DatePicker style={{ width: '80px' }} placeholder=\"\" format={'YYYY'} defaultValue={today()} picker=\"year\" />\r\n          </span>\r\n          &nbsp;&nbsp;<span>ĐVT: (triệu đồng)</span>\r\n        </div>\r\n        <Column {...config} />\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default RevenueYear;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { DualAxes } from '@ant-design/plots';\r\nimport { DatePicker } from 'antd';\r\nimport { today } from 'utils/formatDate';\r\nimport { Line } from '@ant-design/charts';\r\n\r\nconst RevenueEmployee = () => {\r\n  const data = [\r\n    {\r\n      name: 'Hóa đơn',\r\n      month: 'Tháng 1',\r\n      amount: 100,\r\n    },\r\n    {\r\n      name: 'Hóa đơn',\r\n      month: 'Tháng 2',\r\n      amount: 80,\r\n    },\r\n    {\r\n      name: 'Hóa đơn',\r\n      month: 'Tháng 3',\r\n      amount: 120,\r\n    },\r\n    {\r\n      name: 'Hóa đơn',\r\n      month: 'Tháng 4',\r\n      amount: 40,\r\n    },\r\n    {\r\n      name: 'Hóa đơn',\r\n      month: 'Tháng 5',\r\n      amount: 60,\r\n    },\r\n    {\r\n      name: 'Hóa đơn',\r\n      month: 'Tháng 6',\r\n      amount: 70,\r\n    },\r\n    {\r\n      name: 'Hóa đơn',\r\n      month: 'Tháng 7',\r\n      amount: 180,\r\n    },\r\n    {\r\n      name: 'Hóa đơn',\r\n      month: 'Tháng 8',\r\n      amount: 90,\r\n    },\r\n    {\r\n      name: 'Hóa đơn',\r\n      month: 'Tháng 9',\r\n      amount: 150,\r\n    },\r\n    {\r\n      name: 'Hóa đơn',\r\n      month: 'Tháng 10',\r\n      amount: 150,\r\n    },\r\n    {\r\n      name: 'Hóa đơn',\r\n      month: 'Tháng 11',\r\n      amount: 150,\r\n    },\r\n    {\r\n      name: 'Hóa đơn',\r\n      month: 'Tháng 12',\r\n      amount: 150,\r\n    },\r\n  ];\r\n\r\n  const config = {\r\n    data,\r\n    // width: 800,\r\n    height: 200,\r\n    autoFit: false,\r\n    xField: 'month',\r\n    yField: 'amount',\r\n    point: {\r\n      size: 5,\r\n      shape: 'diamond',\r\n    },\r\n    label: {\r\n      style: {\r\n        fill: '#aaa',\r\n      },\r\n    },\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div>\r\n        <div className=\"title-chart\">\r\n          <h3>Thống kê doanh số theo nhân viên</h3>\r\n          <span>\r\n            Nhân viên:{' '}\r\n            <DatePicker style={{ width: '80px' }} placeholder=\"\" format={'YYYY'} defaultValue={today()} picker=\"year\" />\r\n          </span>\r\n          &nbsp;&nbsp;<span>ĐVT: (triệu đồng)</span>\r\n        </div>\r\n        <Line {...config} />\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default RevenueEmployee;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { Pie, G2 } from '@ant-design/plots';\r\nimport { DatePicker } from 'antd';\r\nimport { today } from 'utils/formatDate';\r\n\r\nconst RevenueQuarter = () => {\r\n  const G = G2.getEngine('canvas');\r\n  const data = [\r\n    {\r\n      type: 'Quý 1',\r\n      value: 100,\r\n    },\r\n    {\r\n      type: 'Quý 2',\r\n      value: 200,\r\n    },\r\n    {\r\n      type: 'Quý 3',\r\n      value: 300,\r\n    },\r\n    {\r\n      type: 'Quý 4',\r\n      value: 100,\r\n    },\r\n  ];\r\n  const cfg = {\r\n    appendPadding: 10,\r\n    data,\r\n    angleField: 'value',\r\n    colorField: 'type',\r\n    radius: 0.75,\r\n    legend: false,\r\n    label: {\r\n      type: 'spider',\r\n      labelHeight: 40,\r\n      formatter: (data, mappingData) => {\r\n        const group = new G.Group({});\r\n        group.addShape({\r\n          type: 'circle',\r\n          attrs: {\r\n            x: 0,\r\n            y: 0,\r\n            width: 40,\r\n            height: 50,\r\n            r: 5,\r\n            fill: mappingData.color,\r\n          },\r\n        });\r\n        group.addShape({\r\n          type: 'text',\r\n          attrs: {\r\n            x: 10,\r\n            y: 8,\r\n            text: `${data.type}`,\r\n            fill: mappingData.color,\r\n          },\r\n        });\r\n        group.addShape({\r\n          type: 'text',\r\n          attrs: {\r\n            x: 0,\r\n            y: 25,\r\n            text: `${data.value}tr ${(data.percent * 100).toFixed(2)}%`,\r\n            fill: 'rgba(0, 0, 0, 0.65)',\r\n            fontWeight: 700,\r\n          },\r\n        });\r\n        return group;\r\n      },\r\n    },\r\n    interactions: [\r\n      {\r\n        type: 'element-selected',\r\n      },\r\n      {\r\n        type: 'element-active',\r\n      },\r\n    ],\r\n    height: 200,\r\n  };\r\n  const config = cfg;\r\n\r\n  return (\r\n    <>\r\n      <div>\r\n        <div className=\"title-chart\">\r\n          <h3>Thống kê doanh số theo quý</h3>\r\n          <span>\r\n            Năm:{' '}\r\n            <DatePicker style={{ width: '80px' }} placeholder=\"\" format={'YYYY'} defaultValue={today()} picker=\"year\" />\r\n          </span>\r\n          &nbsp;&nbsp;<span>ĐVT: (triệu đồng)</span>\r\n        </div>\r\n        <Pie {...config} />\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default RevenueQuarter;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { Column } from '@ant-design/plots';\r\nimport { DatePicker } from 'antd';\r\nimport { today } from 'utils/formatDate';\r\n\r\nconst Revenue5Years = () => {\r\n  const data = [\r\n    {\r\n      city: '2019',\r\n      type: 'Quí 1',\r\n      value: 14500,\r\n    },\r\n    {\r\n      city: '2019',\r\n      type: 'Quí 2',\r\n      value: 8500,\r\n    },\r\n    {\r\n      city: '2019',\r\n      type: 'Quí 3',\r\n      value: 10000,\r\n    },\r\n    {\r\n      city: '2019',\r\n      type: 'Quí 4',\r\n      value: 7000,\r\n    },\r\n    {\r\n      city: '2020',\r\n      type: 'Quí 1',\r\n      value: 9000,\r\n    },\r\n    {\r\n      city: '2020',\r\n      type: 'Quí 2',\r\n      value: 8500,\r\n    },\r\n    {\r\n      city: '2020',\r\n      type: 'Quí 3',\r\n      value: 11000,\r\n    },\r\n    {\r\n      city: '2020',\r\n      type: 'Quí 4',\r\n      value: 6000,\r\n    },\r\n    {\r\n      city: '2021',\r\n      type: 'Quí 1',\r\n      value: 16000,\r\n    },\r\n    {\r\n      city: '2021',\r\n      type: 'Quí 2',\r\n      value: 5000,\r\n    },\r\n    {\r\n      city: '2021',\r\n      type: 'Quí 3',\r\n      value: 6000,\r\n    },\r\n    {\r\n      city: '2021',\r\n      type: 'Quí 4',\r\n      value: 10000,\r\n    },\r\n    {\r\n      city: '2022',\r\n      type: 'Quí 1',\r\n      value: 16000,\r\n    },\r\n    {\r\n      city: '2022',\r\n      type: 'Quí 2',\r\n      value: 5000,\r\n    },\r\n    {\r\n      city: '2022',\r\n      type: 'Quí 3',\r\n      value: 6000,\r\n    },\r\n    {\r\n      city: '2022',\r\n      type: 'Quí 4',\r\n      value: 10000,\r\n    },\r\n  ];\r\n  const config = {\r\n    data,\r\n    xField: 'city',\r\n    yField: 'value',\r\n    seriesField: 'type',\r\n    isGroup: true,\r\n    columnStyle: {\r\n      radius: [20, 20, 0, 0],\r\n    },\r\n    height: 200,\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div>\r\n        <div className=\"title-chart\">\r\n          <h3>Thống kê doanh 5 năm gần nhất</h3>\r\n          &nbsp;&nbsp;<span>ĐVT: (triệu đồng)</span>\r\n        </div>\r\n        <Column {...config} />\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Revenue5Years;\r\n","import React, { useEffect } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport * as actions from 'redux/global/actions';\r\nimport HeaderPage from 'pages/home/header-page';\r\nimport PageWrapper from 'components/Layout/PageWrapper';\r\nimport { SEARCH_CRITERIA } from 'static/Constants';\r\nimport './revenueStatistic.less';\r\nimport RevenueYear from './revenueYear';\r\nimport RevenueEmployee from './revenueEmployee';\r\nimport RevenueQuarter from './revenueQuarter';\r\nimport Revenue5Years from './revenue5Years';\r\nimport { isAccessed } from 'utils/utils';\r\nimport { PER } from 'common/enum';\r\n\r\nconst option = {};\r\nconst searchCriteria = SEARCH_CRITERIA.ALL;\r\n\r\nconst RevenueStatistic = () => {\r\n  const dispatch = useDispatch();\r\n  useEffect(() => {\r\n    dispatch(actions.changeRibbonActions(option));\r\n  }, [dispatch]);\r\n\r\n  useEffect(() => {\r\n    dispatch(actions.updateSearchCriteria(searchCriteria));\r\n  }, [dispatch]);\r\n\r\n  return (\r\n    <div id=\"invoice-page\">\r\n\r\n      {isAccessed(PER.BAO_CAO_THONG_KE) && (\r\n        <div>\r\n          <HeaderPage title=\"THỐNG KÊ VÀ DOANH THU\" actions=\"\" />\r\n          <div className=\"main__application\">\r\n            <PageWrapper className={`page-chart`}>\r\n              <div className=\"revenue-statistic-chart\">\r\n                <div className=\"chart-item\">\r\n                  <RevenueYear />\r\n                </div>\r\n                <div className=\"chart-item\">\r\n                  <RevenueEmployee />\r\n                </div>\r\n                <div className=\"chart-item\">\r\n                  <RevenueQuarter />\r\n                </div>\r\n                <div className=\"chart-item\">\r\n                  <Revenue5Years />\r\n                </div>\r\n              </div>\r\n            </PageWrapper>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nRevenueStatistic.propTypes = {};\r\n\r\nexport default RevenueStatistic;\r\n","import React from 'react';\r\nimport { Button } from 'antd';\r\nfunction PrimaryButton(props) {\r\n  return <Button type=\"primary\" size=\"small\" {...props} />;\r\n}\r\n\r\nPrimaryButton.propTypes = {};\r\n\r\nexport default PrimaryButton;\r\n","import React from 'react';\r\nimport { Button } from 'antd';\r\nfunction DangerButton(props) {\r\n  return <Button danger size=\"small\" {...props} />;\r\n}\r\n\r\nDangerButton.propTypes = {};\r\n\r\nexport default DangerButton;\r\n","import React from 'react';\r\nimport { Button } from 'antd';\r\nfunction DefaultButton(props) {\r\n  return <Button type=\"default\" size=\"small\" {...props} />;\r\n}\r\n\r\nDefaultButton.propTypes = {};\r\n\r\nexport default DefaultButton;\r\n","import React from 'react';\r\nimport DefaultButton from './PrimaryButton';\r\nimport { StopOutlined } from '@ant-design/icons';\r\n\r\nfunction ButtonCancel({ title = 'Thêm mới', ...rest }) {\r\n  return (\r\n    <DefaultButton icon={<StopOutlined />} {...rest}>\r\n      {title}\r\n    </DefaultButton>\r\n  );\r\n}\r\n\r\nButtonCancel.propTypes = {};\r\n\r\nexport default ButtonCancel;\r\n","import React from 'react';\r\nimport DangerButton from './DangerButton';\r\nimport { DeleteOutlined } from '@ant-design/icons';\r\n\r\nfunction ButtonDelete({ title = '', ...rest }) {\r\n  return (\r\n    <DangerButton icon={<DeleteOutlined />} {...rest}>\r\n      {title}\r\n    </DangerButton>\r\n  );\r\n}\r\n\r\nButtonDelete.propTypes = {};\r\n\r\nexport default ButtonDelete;\r\n","import React from 'react';\r\nimport { EditOutlined } from '@ant-design/icons';\r\nimport DefaultButton from './DefaultButton';\r\n\r\nfunction ButtonEdit({ title = '', ...rest }) {\r\n  return (\r\n    <DefaultButton icon={<EditOutlined />} {...rest}>\r\n      {title}\r\n    </DefaultButton>\r\n  );\r\n}\r\n\r\nButtonEdit.propTypes = {};\r\n\r\nexport default ButtonEdit;\r\n","import moment from 'moment';\r\n\r\nexport const formatMDY = (data) => (data ? window.moment.utc(data).local().format('MM/DD/YYYY') : '');\r\n\r\nexport const customFormat = (data, format) => {\r\n  const date = window.moment.utc(data).local();\r\n  return date.isValid() ? date.format(format) : '';\r\n};\r\n\r\nexport const getDateFormat = (date) => {\r\n  const d = moment(date);\r\n  return date && d.isValid() ? d : '';\r\n};\r\n\r\nexport const startDMY = (data, type) => moment(data).startOf(type).toString();\r\n\r\nexport const endDMY = (data, type) => moment(data).endOf(type).toString();\r\n\r\nexport const formatMDYWithParam = (param) => (param && param.value ? formatMDY(param.value) : '');\r\nexport const formatMMDDYYYY = (data) => (data ? moment(data).format('MM/DD/YYYY') : '');\r\nexport const formatDDMMYYYY = (data) => (data ? moment(data).format('DD/MM/YYYY') : '');\r\n\r\nexport const formatTime = (data) => (data ? moment(data).format('HH:mm A') : '');\r\n\r\nexport const formatFullTime = (data) => (data ? moment(data).format('MM/DD/YYYY hh:mm A') : '');\r\n\r\nexport const exportToChatTime = (isoDate) => {\r\n  if (!isoDate) return;\r\n  const diff = moment(isoDate).diff(new Date(), 'hours');\r\n\r\n  let result;\r\n\r\n  if (-diff < 10) {\r\n    result = window.moment(isoDate).fromNow();\r\n  }\r\n\r\n  if (-diff >= 10) {\r\n    result = window.moment(isoDate).calendar();\r\n  }\r\n\r\n  return result;\r\n};\r\n\r\nexport const formattedFullTime = (data) => moment(data).format('YYYY-MM-DDTHH:mm:ss[Z]');\r\n\r\nexport const startISOTime = (data, typeView) => moment(data).startOf(typeView).toISOString();\r\n\r\nexport const endISOTime = (data, typeView) => moment(data).endOf(typeView).toISOString();\r\n\r\nexport const convertToISOTime = (data) => moment(data).toISOString();\r\n\r\nexport const getPreviousDays = (number) => moment().subtract(number, 'days');\r\nexport const getPrevious30Days = () => getPreviousDays(30);\r\n\r\nexport const today = () => moment();\r\n\r\n\r\nexport const DateTimeToDate = (dateString) => {\r\n  if (!dateString) return null\r\n\r\n  const date = new Date(dateString);\r\n  const formattedDate = date.toISOString().split('T')[0];\r\n  return formattedDate\r\n}\r\n\r\n","import produce from 'immer';\r\nimport * as types from './constants';\r\n\r\n// initial state\r\nexport const initialState = {\r\n  idSelections: [],\r\n  detailSelections: [],\r\n};\r\n\r\nconst gridViewReducer = (state = initialState, action) =>\r\n  produce(state, (draft) => {\r\n    switch (action.type) {\r\n      case types.SET_ITEM_ID_SELECTIONS:\r\n        draft.idSelections = action.payload;\r\n        break;\r\n      case types.SET_ITEM_DETAIL_SELECTIONS:\r\n        draft.detailSelections = action.payload;\r\n        break;\r\n    }\r\n  });\r\n\r\nexport default gridViewReducer;\r\n","export const SET_ITEM_ID_SELECTIONS = 'SET_ITEM_ID_SELECTIONS';\r\nexport const SET_ITEM_DETAIL_SELECTIONS = 'SET_ITEM_DETAIL_SELECTIONS';\r\n","import { Button, Divider, Space, Tooltip } from 'antd';\r\nimport React from 'react';\r\nconst ButtonTooltip = (props) => (\r\n  <>\r\n    <Space wrap>\r\n      <Tooltip title={props?.tip} color=\"blue\" key=\"blue\">\r\n        {props.children}\r\n      </Tooltip>\r\n    </Space>\r\n  </>\r\n);\r\nexport default ButtonTooltip;\r\n\r\n\r\n\r\n\r\n// import React from 'react';\r\n// import { Button } from 'antd';\r\n\r\n// function ButtonToolTip(props) {\r\n//   return <Button type=\"primary\" size=\"small\" {...props} />;\r\n// }\r\n\r\n// ButtonToolTip.propTypes = {};\r\n\r\n// export default ButtonToolTip;\r\n","export const mapToSelectOption = (data) => {\r\n  const options = data.map((x) => {\r\n    return {\r\n      value: x.id,\r\n      label: x.name,\r\n    };\r\n  });\r\n  return options\r\n};\r\n\r\nexport const isAccessed = (permissionsAction) => {\r\n  if (!permissionsAction) return\r\n\r\n  const userInfo = JSON.parse(localStorage.getItem('userInfo'))\r\n  const permissionsList = userInfo.permissions\r\n  if (permissionsList && permissionsList.length > 0) {\r\n    return permissionsList.includes(permissionsAction)\r\n  }\r\n\r\n  return false\r\n}\r\n","import React from 'react';\r\nimport classnames from 'classnames';\r\n\r\nimport './PageWrapper.less';\r\n\r\nfunction PageWrapper({ className, children, ...rest }) {\r\n  return (\r\n    <div className={classnames('section-wrapper', className)} {...rest}>\r\n      {children}\r\n    </div>\r\n  );\r\n}\r\n\r\nPageWrapper.propTypes = {};\r\n\r\nexport default PageWrapper;\r\n","import { createSelector } from 'reselect';\r\nimport { initialState } from './reducer';\r\n\r\nconst selectGridView = (state) => (state && state.tableView) || initialState;\r\n\r\nconst selectGridIdSelections = () => createSelector(selectGridView, (globalState) => globalState.idSelections);\r\n\r\nconst selectGridDetailSelections = () => createSelector(selectGridView, (globalState) => globalState.detailSelections);\r\n\r\nexport { selectGridView, selectGridIdSelections, selectGridDetailSelections };\r\n","import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Row, Col, Input, Button, Typography } from 'antd';\r\nimport { PlusCircleOutlined, BarsOutlined, FilterOutlined } from '@ant-design/icons';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { ButtonDelete, PrimaryButton } from 'common/components/Buttons';\r\n\r\nimport * as gridViewSelectors from 'components/Grid/controllers/selectors';\r\nimport { updateSearch } from 'redux/global/actions';\r\nimport './header.less';\r\n\r\nconst { Search } = Input;\r\n\r\nconst HeaderPage = ({\r\n  title = '',\r\n  actions = 'default',\r\n  onCreate,\r\n  handleDelete,\r\n  labelPrimaryBtn = \"\",\r\n  onPressPrimaryBtn = () => { },\r\n  isFilter = false,\r\n  onFilter,\r\n  isHideAction = false,\r\n  isShowActionDelete = true,\r\n  isShowActionAdd = true,\r\n}) => {\r\n  const dispatch = useDispatch();\r\n  const itemSelections = useSelector(gridViewSelectors.selectGridIdSelections());\r\n\r\n  const onSearch = (text) => {\r\n    dispatch(updateSearch(text));\r\n  };\r\n\r\n\r\n  return (\r\n    <div className=\"header-page\">\r\n      <Row className=\"wrapper\" justify=\"space-around\" align=\"center\">\r\n        <Col className=\"header-page__title\">\r\n          <Typography.Title level={3}>{title}</Typography.Title>\r\n        </Col>\r\n        <Col flex={1} style={{ textAlign: 'right' }}>\r\n          {actions === 'default' ? (\r\n            <Row\r\n              style={{\r\n                display: 'flex',\r\n                flexWrap: 'nowrap',\r\n                gap: '16px',\r\n                justifyContent: 'end',\r\n              }}\r\n            >\r\n              <Search className=\"header-page__search\" placeholder=\"Tìm kiếm...\" onSearch={onSearch} enterButton />\r\n              {isFilter &&\r\n                (<Button type=\"primary\" onClick={() => onFilter()} icon={<FilterOutlined />}>\r\n                </Button>)\r\n              }\r\n              {isHideAction === false && (\r\n                <>\r\n                  {isShowActionAdd && (\r\n                    <Button type=\"primary\" onClick={() => onCreate()} icon={<PlusCircleOutlined />}>\r\n                      Thêm mới\r\n                    </Button>\r\n                  )}\r\n                  {!!labelPrimaryBtn && <PrimaryButton size=\"medium\" icon={<BarsOutlined />} onClick={onPressPrimaryBtn}>\r\n                    {labelPrimaryBtn}\r\n                  </PrimaryButton>}\r\n                  {isShowActionDelete && (\r\n                    <ButtonDelete\r\n                      size=\"medium\"\r\n                      onClick={() => handleDelete && handleDelete(itemSelections)}\r\n                      disabled={!itemSelections.length}\r\n                    >\r\n                      Xóa\r\n                    </ButtonDelete>\r\n                  )}\r\n                </>\r\n              )}\r\n            </Row>\r\n          ) : typeof actions === 'function' ? (\r\n            actions()\r\n          ) : null}\r\n        </Col>\r\n      </Row>\r\n    </div>\r\n  );\r\n};\r\n\r\nHeaderPage.propTypes = {\r\n  title: PropTypes.string,\r\n  actions: PropTypes.oneOfType([PropTypes.string, PropTypes.func, PropTypes.bool]),\r\n  onCreate: PropTypes.func,\r\n  handleDelete: PropTypes.func,\r\n  labelPrimaryBtn: PropTypes.string,\r\n  onPressPrimaryBtn: PropTypes.func,\r\n};\r\n\r\nexport default HeaderPage;\r\n"],"sourceRoot":""}