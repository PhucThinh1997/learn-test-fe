{"version":3,"sources":["../node_modules/@ant-design/icons-svg/es/asn/BookOutlined.js","../node_modules/@ant-design/icons/es/icons/BookOutlined.js","pages/dealers/CreateAndUpdate.js","pages/dealers/index.js","common/components/Buttons/PrimaryButton.js","common/components/Buttons/DangerButton.js","common/components/Buttons/DefaultButton.js","common/components/Buttons/ButtonCancel.js","common/components/Buttons/ButtonDelete.js","common/components/Buttons/ButtonEdit.js","utils/format.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","utils/formatDate.js","components/Grid/controllers/reducer.js","components/Grid/controllers/constants.js","../node_modules/invariant/browser.js","common/components/Buttons/ButtonToolTip.js","utils/utils.js","components/Layout/PageWrapper.js","components/Grid/controllers/selectors.js","pages/home/header-page/index.js","components/Grid/controllers/actions.js","hooks/useTable.js","components/Grid/Grid.js","utils/common/checkStore.js","utils/common/reducerInjectors.js","utils/common/injectedReducers.js","services/customer/index.js","services/fields/index.js","components/input/inputCustom.js","utils/validate/validateUtils.js","components/input/selectSearch.js","pages/home/components/filter/filterCommon.js","services/dealers/dealers.service.js","constants/mode.cost.js","utils/dateUtils.js","pages/dealers/enum.js","common/components/status/Status.js"],"names":["BookOutlined","props","ref","React","AntdIcon","_objectSpread","icon","BookOutlinedSvg","displayName","CreateAndUpdate","id","isOpen","onClose","form","reloadTable","schema","yup","shape","code","valRequired","dealersName","registerDate","expireDate","deviceName","deviceModel","quantity","price","totalPrice","status","useForm","mode","resolver","yupResolver","control","handleSubmit","setValue","watch","errors","formState","useState","MODE","DETAIL","CREATE","setMode","createOrUpdateDealers","request","createDealers","then","res","handleCancel","useEffect","EDIT","defaultValueInModeCreate","getDealersById","Object","keys","data","forEach","key","getToDay","getSumPrice","title","getTitle","open","width","onCancel","className","footer","onSubmit","Number","formatDateYMD","span","type","onClick","isTitleInline","isShowText","label","name","isRequired","onChange","value","formatInput","disabled","options","listResult","htmlType","Dealers","history","useHistory","isLoading","dispatch","useDispatch","filter","setFilter","setIsOpen","setId","readGrid","refresh","actions","columns","dataIndex","render","_","values","Text","formatDDMMYYYY","BLANK_VALUE","isWarning","align","formatCurrency","Status","text","color","tip","BarsOutlined","isCreateContract","idDealers","push","PrimaryButton","isAccessed","PER","DS_DANG_KY_DU_AN_XEM","onCreate","handleDelete","confirm","ExclamationCircleOutlined","content","okText","cancelText","onOk","deleteDealers","x","confirmLoading","isShowActionAdd","DS_DANG_KY_DU_AN_THEM","handleClosed","onApplyFilter","PageWrapper","Grid","scroll","urlEndpoint","urlEndpointTableDealers","summaryNumberCol","size","DangerButton","danger","DefaultButton","ButtonCancel","ButtonDelete","rest","DeleteOutlined","ButtonEdit","EditOutlined","number","isNaN","Intl","NumberFormat","style","currency","format","replaceAll","formatCurrencyInput","numberString","date","myDate","moment","isMoment","_toConsumableArray","arr","Array","isArray","arrayLikeToArray","iter","Symbol","iterator","from","unsupportedIterableToArray","TypeError","getDateFormat","d","isValid","formatMMDDYYYY","today","DateTimeToDate","dateString","Date","toISOString","split","initialState","idSelections","detailSelections","gridViewReducer","state","action","produce","draft","types","payload","SET_ITEM_ID_SELECTIONS","SET_ITEM_DETAIL_SELECTIONS","module","exports","condition","a","b","c","e","f","error","undefined","Error","args","argIndex","replace","framesToPop","ButtonTooltip","wrap","children","mapToSelectOption","map","permissionsAction","permissionsList","JSON","parse","localStorage","getItem","permissions","length","includes","classnames","selectGridView","tableView","Search","HeaderPage","labelPrimaryBtn","onPressPrimaryBtn","isFilter","onFilter","isHideAction","isShowActionDelete","itemSelections","useSelector","createSelector","globalState","justify","Title","level","flex","textAlign","display","flexWrap","gap","justifyContent","placeholder","onSearch","updateSearch","enterButton","FilterOutlined","PlusCircleOutlined","setItemIdSelections","items","setItemDetailSelections","ActionKind","currentPage","totalPage","totalElement","pageSize","loading","searchText","sort","field","order","store","createContext","setState","setPage","setTotalPage","setData","setTotalElement","setLoading","setPageSize","Provider","TableProvider","initState","useReducer","useCallback","page","total","val","setSearchText","setSort","withTable","WrappedComponent","ComponentWithTableProvider","expandedRowRender","handleGetDetailSelections","handleGetSelections","hasRowSelected","isHidePagination","rowKey","shouldSaveToStore","shouldShowTotal","useInjectReducer","reducer","global","refreshGrid","filters","idsSelection","setIdsSelection","useContext","totalAmount","setTotalAmount","getSortItem","sorted","item","fieldName","isAscending","fetchData","params","pageIndex","fieldId","fields","api","results","isSuccess","records","catch","err","console","log","finally","gridViewActions","stringify","rowSelection","selectedRowKeys","selectedRows","clsx","dataSource","pagination","sorter","current","bordered","defaultPageSize","showSizeChanger","pageSizeOptions","showTotal","expandable","summary","Summary","Row","index","Cell","checkStore","isFunction","subscribe","getState","replaceReducer","runSaga","injectedReducers","isObject","injectedSagas","invariant","conformsTo","injectReducerFactory","isString","isEmpty","Reflect","has","createReducer","getInjectors","injectReducer","context","ReactReduxContext","urlEndpointTableCustomer","getCustomerById","createCustomer","input","updateCustomer","deleteCustomers","ids","getCustomerDropdown","urlEndpointCustomer","getFieldsDropDowns","urlEndpointField","TextArea","InputCustom","classErrors","renderLabel","renderInputChild","customInput","prefix","defaultValue","thousandSeparator","decimalSeparator","onValueChange","target","renderInput","Item","exists","mesError","message","toLowerCase","renderErrorMessage","Group","compact","string","required","valPhone","matches","SelectSearch","setValues","customStyles","provided","borderColor","minHeight","isMulti","height","minWidth","boxShadow","isFocused","valueContainer","padding","margin","indicatorSeparator","indicatorsContainer","getValueByOption","result","option","find","styles","isDisabled","renderInputOfText","paddingBottom","Filter","setFields","onFinish","getFields","resetFields","labelCol","wrapperCol","layout","Option","urlEndpointTableDealersResult","getTechnicalById","substring","listResultTask","STATUS_TASK","CHO_TIEP_NHAN","DANG_THUC_HIEN","TU_CHOI","HOAN_THANH","THEM_MOI","bgColor","listEnum","success","backgroundColor","info","warning"],"mappings":"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","file":"static/js/21.f535fd83.chunk.js","sourcesContent":["// This icon file is generated automatically.\nvar BookOutlined = { \"icon\": { \"tag\": \"svg\", \"attrs\": { \"viewBox\": \"64 64 896 896\", \"focusable\": \"false\" }, \"children\": [{ \"tag\": \"path\", \"attrs\": { \"d\": \"M832 64H192c-17.7 0-32 14.3-32 32v832c0 17.7 14.3 32 32 32h640c17.7 0 32-14.3 32-32V96c0-17.7-14.3-32-32-32zm-260 72h96v209.9L621.5 312 572 347.4V136zm220 752H232V136h280v296.9c0 3.3 1 6.6 3 9.3a15.9 15.9 0 0022.3 3.7l83.8-59.9 81.4 59.4c2.7 2 6 3.1 9.4 3.1 8.8 0 16-7.2 16-16V136h64v752z\" } }] }, \"name\": \"book\", \"theme\": \"outlined\" };\nexport default BookOutlined;\n","import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\n// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\nimport * as React from 'react';\nimport BookOutlinedSvg from \"@ant-design/icons-svg/es/asn/BookOutlined\";\nimport AntdIcon from '../components/AntdIcon';\n\nvar BookOutlined = function BookOutlined(props, ref) {\n  return /*#__PURE__*/React.createElement(AntdIcon, _objectSpread(_objectSpread({}, props), {}, {\n    ref: ref,\n    icon: BookOutlinedSvg\n  }));\n};\n\nBookOutlined.displayName = 'BookOutlined';\nexport default /*#__PURE__*/React.forwardRef(BookOutlined);","/* eslint-disable react/prop-types */\r\nimport React, { useEffect, useState } from 'react';\r\nimport { Button, Modal, Row, Col } from 'antd';\r\nimport { formatDateYMD } from 'utils/format';\r\nimport _ from 'lodash';\r\nimport { yupResolver } from '@hookform/resolvers/yup';\r\nimport { useForm } from 'react-hook-form';\r\nimport * as yup from 'yup';\r\nimport InputCustom from 'components/input/inputCustom';\r\nimport './index.less';\r\nimport SelectSearch from 'components/input/selectSearch';\r\nimport { createDealers, getDealersById } from 'services/dealers/dealers.service';\r\nimport { MODE } from 'constants/mode.cost';\r\nimport { getToDay } from 'utils/dateUtils';\r\nimport { valRequired } from 'utils/validate/validateUtils';\r\nimport { listResult } from './enum';\r\nimport { getCustomerDropdown } from 'services/customer';\r\n\r\nconst CreateAndUpdate = (props) => {\r\n  const { id, isOpen, onClose, form, reloadTable } = props;\r\n  const schema = yup.object().shape({\r\n    code: valRequired(yup),\r\n    dealersName: valRequired(yup),\r\n    registerDate: valRequired(yup),\r\n    expireDate: valRequired(yup),\r\n    deviceName: valRequired(yup),\r\n    deviceModel: valRequired(yup),\r\n    quantity: valRequired(yup),\r\n    price: valRequired(yup),\r\n    totalPrice: valRequired(yup),\r\n    status: valRequired(yup),\r\n  });\r\n  const {\r\n    control,\r\n    handleSubmit,\r\n    setValue,\r\n    watch,\r\n    formState: { errors },\r\n  } = useForm({ mode: 'onChange', resolver: yupResolver(schema) });\r\n  const [mode, setMode] = useState(id ? MODE.DETAIL : MODE.CREATE);\r\n\r\n  const onSubmit = (data) => {\r\n    let request = {\r\n      ...data,\r\n      status: Number(data.status),\r\n      expireDate: formatDateYMD(data.expireDate),\r\n      registerDate: formatDateYMD(data.registerDate),\r\n    };\r\n    // if mode edit then add id edit\r\n    if (id) {\r\n      request.id = id;\r\n    }\r\n    createOrUpdateDealers(request);\r\n  };\r\n\r\n  const createOrUpdateDealers = (request) => {\r\n    createDealers(request).then((res) => {\r\n      if (res) {\r\n        onClose();\r\n        reloadTable();\r\n      }\r\n      return;\r\n    });\r\n  };\r\n\r\n  const handleCancel = () => {\r\n    onClose();\r\n  };\r\n\r\n  const onLoad = () => {\r\n    getDealersById(id).then((res) => {\r\n      Object.keys(res.data).forEach((key) => {\r\n        setValue(key, res.data[key]);\r\n      });\r\n    });\r\n  };\r\n\r\n\r\n\r\n  useEffect(() => {\r\n    if (id && (mode === MODE.EDIT || mode === MODE.DETAIL)) {\r\n      onLoad();\r\n      setMode(MODE.DETAIL);\r\n    } else {\r\n      defaultValueInModeCreate();\r\n    }\r\n  }, [id]);\r\n\r\n  const defaultValueInModeCreate = () => {\r\n    setValue('registerDate', getToDay());\r\n    setValue('expireDate', getToDay());\r\n    setValue('status', 0);\r\n  };\r\n\r\n  const getTitle = () => {\r\n    let title = 'Chi tiết công ty đăng ký dự án';\r\n\r\n    if (mode === MODE.CREATE) {\r\n      title = 'Thêm mới công ty đăng ký dự án';\r\n    }\r\n    if (mode === MODE.EDIT) {\r\n      title = 'Chỉnh sửa mới công ty đăng ký dự án';\r\n    }\r\n\r\n    return title;\r\n  };\r\n\r\n  const getSumPrice = () => {\r\n    const quantity = watch('quantity');\r\n    const price = watch('price');\r\n    if (!quantity || !price) {\r\n      setValue('totalPrice', '');\r\n      return;\r\n    }\r\n    setValue('totalPrice', quantity * price);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Modal\r\n        title={getTitle()}\r\n        open={isOpen}\r\n        form={form}\r\n        width={1200}\r\n        onCancel={handleCancel}\r\n        className=\"modal-dealers\"\r\n        footer={null}\r\n      >\r\n        <form className=\"form-dealers\" onSubmit={handleSubmit(onSubmit)}>\r\n          {mode !== MODE.CREATE && (\r\n            <Row>\r\n              <Col span={24} className=\"btn-edit\">\r\n                <Button type=\"primary\" onClick={() => setMode(mode === MODE.EDIT ? MODE.DETAIL : MODE.EDIT)}>\r\n                  {mode === MODE.EDIT ? 'Chi tiết' : 'Chỉnh sửa'}\r\n                </Button>\r\n              </Col>\r\n            </Row>\r\n          )}\r\n          <Row>\r\n            <Col className=\"col-input\" span={8}>\r\n              <InputCustom\r\n                isTitleInline={mode === MODE.DETAIL}\r\n                isShowText={mode === MODE.DETAIL}\r\n                label=\"Mã Dealers\"\r\n                control={control}\r\n                type=\"text\"\r\n                name=\"code\"\r\n                isRequired\r\n                errors={errors}\r\n              />\r\n            </Col>\r\n            <Col className=\"col-input\" span={16}>\r\n              <InputCustom\r\n                isTitleInline={mode === MODE.DETAIL}\r\n                isShowText={mode === MODE.DETAIL}\r\n                label=\"Công ty đăng ký\"\r\n                control={control}\r\n                type=\"text\"\r\n                name=\"dealersName\"\r\n                isRequired\r\n                errors={errors}\r\n              />\r\n            </Col>\r\n            <Col className=\"col-input\" span={8}>\r\n              <InputCustom\r\n                isTitleInline={mode === MODE.DETAIL}\r\n                isShowText={mode === MODE.DETAIL}\r\n                label=\"Ngày đăng ký\"\r\n                control={control}\r\n                type=\"date\"\r\n                name=\"registerDate\"\r\n                isRequired\r\n                errors={errors}\r\n              />\r\n            </Col>\r\n            <Col className=\"col-input\" span={16}>\r\n              <InputCustom\r\n                isTitleInline={mode === MODE.DETAIL}\r\n                isShowText={mode === MODE.DETAIL}\r\n                label=\"Dự án\"\r\n                control={control}\r\n                type=\"text\"\r\n                name=\"projectName\"\r\n                errors={errors}\r\n              />\r\n            </Col>\r\n            <Col className=\"col-input\" span={8}>\r\n              <InputCustom\r\n                isTitleInline={mode === MODE.DETAIL}\r\n                isShowText={mode === MODE.DETAIL}\r\n                label=\"Ngày hết hạn\"\r\n                control={control}\r\n                type=\"date\"\r\n                name=\"expireDate\"\r\n                isRequired\r\n                errors={errors}\r\n              />\r\n            </Col>\r\n            <Col className=\"col-input\" span={16}>\r\n              <InputCustom\r\n                isTitleInline={mode === MODE.DETAIL}\r\n                isShowText={mode === MODE.DETAIL}\r\n                label=\"Khách hàng sử dụng\"\r\n                control={control}\r\n                type=\"text\"\r\n                name=\"customerName\"\r\n                errors={errors}\r\n              />\r\n            </Col>\r\n          </Row>\r\n          <Row>\r\n            <Col className=\"col-input\" span={8}>\r\n              <InputCustom\r\n                isTitleInline={mode === MODE.DETAIL}\r\n                isShowText={mode === MODE.DETAIL}\r\n                label=\"Ngân sách\"\r\n                control={control}\r\n                type=\"text\"\r\n                name=\"budget\"\r\n                errors={errors}\r\n              />\r\n            </Col>\r\n\r\n            <Col className=\"col-input\" span={16}>\r\n              <InputCustom\r\n                isTitleInline={mode === MODE.DETAIL}\r\n                isShowText={mode === MODE.DETAIL}\r\n                label=\"Tên thiết bị\"\r\n                control={control}\r\n                type=\"text\"\r\n                name=\"deviceName\"\r\n                isRequired\r\n                errors={errors}\r\n              />\r\n            </Col>\r\n          </Row>\r\n          <Row>\r\n            <Col className=\"col-input\" span={8}>\r\n              <InputCustom\r\n                isTitleInline={mode === MODE.DETAIL}\r\n                isShowText={mode === MODE.DETAIL}\r\n                label=\"Model\"\r\n                control={control}\r\n                type=\"text\"\r\n                name=\"deviceModel\"\r\n                isRequired\r\n                errors={errors}\r\n              />\r\n            </Col>\r\n            <Col className=\"col-input\" span={8}>\r\n              <InputCustom\r\n                isTitleInline={mode === MODE.DETAIL}\r\n                isShowText={mode === MODE.DETAIL}\r\n                label=\"Số lượng\"\r\n                control={control}\r\n                type=\"number\"\r\n                name=\"quantity\"\r\n                isRequired\r\n                onChange={(value) => getSumPrice()}\r\n                errors={errors}\r\n              />\r\n            </Col>\r\n            <Col className=\"col-input\" span={8}>\r\n              <InputCustom\r\n                isTitleInline={mode === MODE.DETAIL}\r\n                isShowText={mode === MODE.DETAIL}\r\n                label=\"Đơn giá (Chưa VAT)\"\r\n                control={control}\r\n                type=\"text\"\r\n                name=\"price\"\r\n                onChange={(value) => getSumPrice()}\r\n                isRequired\r\n                errors={errors}\r\n                formatInput\r\n              />\r\n            </Col>\r\n            <Col className=\"col-input\" span={8}>\r\n              <InputCustom\r\n                isTitleInline={mode === MODE.DETAIL}\r\n                isShowText={mode === MODE.DETAIL}\r\n                label=\"Thành tiền\"\r\n                control={control}\r\n                type=\"text\"\r\n                name=\"totalPrice\"\r\n                isRequired\r\n                disabled\r\n                errors={errors}\r\n                formatInput\r\n              />\r\n            </Col>\r\n            <Col className=\"col-input\" span={8}>\r\n              <SelectSearch\r\n                isTitleInline={mode === MODE.DETAIL}\r\n                isShowText={mode === MODE.DETAIL}\r\n                label=\"Kết quả\"\r\n                control={control}\r\n                name=\"status\"\r\n                options={listResult}\r\n                isRequired\r\n                errors={errors}\r\n              />\r\n            </Col>\r\n          </Row>\r\n          <Row>\r\n            <Col className=\"col-input\" span={8}>\r\n              <InputCustom\r\n                isTitleInline={mode === MODE.DETAIL}\r\n                isShowText={mode === MODE.DETAIL}\r\n                label=\"Giá đối thủ (chưa VAT)\"\r\n                control={control}\r\n                type=\"text\"\r\n                name=\"competitorPrice\"\r\n                errors={errors}\r\n                formatInput\r\n              />\r\n            </Col>\r\n            <Col className=\"col-input\" span={16}>\r\n              <InputCustom\r\n                isTitleInline={mode === MODE.DETAIL}\r\n                isShowText={mode === MODE.DETAIL}\r\n                label=\"Thông tin khác\"\r\n                control={control}\r\n                type=\"text\"\r\n                name=\"otherInfo\"\r\n                errors={errors}\r\n              />\r\n            </Col>\r\n          </Row>\r\n          <Row>\r\n            <Col className=\"col-input\" span={8}>\r\n              <InputCustom\r\n                isTitleInline={mode === MODE.DETAIL}\r\n                isShowText={mode === MODE.DETAIL}\r\n                label=\"STT\"\r\n                control={control}\r\n                type=\"text\"\r\n                name=\"sequence\"\r\n                errors={errors}\r\n              />\r\n            </Col>\r\n            <Col className=\"col-input\" span={8}>\r\n              <InputCustom\r\n                isTitleInline={mode === MODE.DETAIL}\r\n                isShowText={mode === MODE.DETAIL}\r\n                label=\"Đối thủ chính\"\r\n                control={control}\r\n                type=\"text\"\r\n                name=\"competitorDeviceName\"\r\n                errors={errors}\r\n              />\r\n            </Col>\r\n            <Col className=\"col-input\" span={8}>\r\n              <InputCustom\r\n                isTitleInline={mode === MODE.DETAIL}\r\n                isShowText={mode === MODE.DETAIL}\r\n                label=\"Công ty chào giá\"\r\n                control={control}\r\n                type=\"text\"\r\n                name=\"competitorName\"\r\n                errors={errors}\r\n              />\r\n            </Col>\r\n          </Row>\r\n          <div className=\"my-modal-footer\">\r\n            <Button key=\"back\" onClick={handleCancel}>\r\n              Hủy\r\n            </Button>\r\n            {mode !== MODE.DETAIL && (\r\n              <Button key=\"submit\" type=\"primary\" htmlType=\"submit\">\r\n                Lưu\r\n              </Button>\r\n            )}\r\n          </div>\r\n        </form>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nCreateAndUpdate.propTypes = {};\r\nexport default CreateAndUpdate;\r\n","import React, { useState } from 'react';\r\nimport { Modal, Typography, Form } from 'antd';\r\nimport { ExclamationCircleOutlined, BarsOutlined } from '@ant-design/icons';\r\nimport { useDispatch } from 'react-redux';\r\nimport { useHistory } from 'react-router-dom';\r\nimport Grid from 'components/Grid';\r\nimport HeaderPage from 'pages/home/header-page';\r\nimport PageWrapper from 'components/Layout/PageWrapper';\r\nimport { BLANK_VALUE } from 'static/Constants';\r\nimport { formatDDMMYYYY } from 'utils/formatDate';\r\nimport * as actions from 'redux/global/actions';\r\nimport Filter from 'pages/home/components/filter/filterCommon';\r\nimport { PrimaryButton } from 'common/components/Buttons';\r\nimport { formatCurrency } from 'utils/format';\r\nimport CreateAndUpdate from './CreateAndUpdate';\r\nimport { deleteDealers, urlEndpointTableDealers } from 'services/dealers/dealers.service';\r\nimport { listResult } from './enum';\r\nimport Status from 'common/components/status/Status';\r\nimport { BookOutlined } from '@ant-design/icons';\r\nimport ButtonTooltip from 'common/components/Buttons/ButtonToolTip';\r\nimport { isAccessed } from 'utils/utils';\r\nimport { PER } from 'common/enum';\r\n\r\nconst Dealers = () => {\r\n  let history = useHistory();\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const dispatch = useDispatch();\r\n  const [filter, setFilter] = useState({\r\n    isOpen: false,\r\n  });\r\n  const [isOpen, setIsOpen] = useState(false);\r\n  const [id, setId] = useState('');\r\n  const [form] = Form.useForm();\r\n\r\n  const readGrid = (refresh) => {\r\n    dispatch(actions.refreshGrid(refresh));\r\n  };\r\n\r\n  const createContractByDealers = (idDealers) => {\r\n    history.push(`/tao-hop-dong?idDealers=${idDealers}`);\r\n  };\r\n\r\n  const columns = [\r\n    {\r\n      title: 'Ngày đăng ký',\r\n      dataIndex: 'registerDate',\r\n      render: (_, values) => (\r\n        <Typography.Text>{values?.registerDate ? formatDDMMYYYY(values?.registerDate) : BLANK_VALUE}</Typography.Text>\r\n      ),\r\n    },\r\n    {\r\n      title: 'Ngày hết hạn',\r\n      dataIndex: 'expireDate',\r\n      render: (_, values) => (\r\n        <Typography.Text className={values.isWarning ? 'is-warning-text' : ''}>\r\n          {values?.expireDate ? formatDDMMYYYY(values?.expireDate) : BLANK_VALUE}\r\n        </Typography.Text>\r\n      ),\r\n    },\r\n    {\r\n      title: 'Tên công ty đăng ký dự án',\r\n      dataIndex: 'dealersName',\r\n    },\r\n    {\r\n      title: 'Khách hàng sử dụng',\r\n      dataIndex: 'customerName',\r\n    },\r\n    {\r\n      title: 'Tên thiết bị',\r\n      dataIndex: 'deviceName',\r\n    },\r\n    {\r\n      title: 'Model',\r\n      dataIndex: 'deviceModel',\r\n    },\r\n    {\r\n      title: 'Số lượng',\r\n      dataIndex: 'quantity',\r\n    },\r\n    {\r\n      title: 'Đơn giá',\r\n      dataIndex: 'price',\r\n      align: 'right',\r\n      render: (_, values) => (\r\n        <Typography.Text>{values?.price ? formatCurrency(values?.price) : BLANK_VALUE}</Typography.Text>\r\n      ),\r\n    },\r\n    {\r\n      title: 'Thành tiền (Chưa VAT)',\r\n      dataIndex: 'totalPrice',\r\n      align: 'right',\r\n      render: (_, values) => (\r\n        <Typography.Text>{values?.totalPrice ? formatCurrency(values?.totalPrice) : BLANK_VALUE}</Typography.Text>\r\n      ),\r\n    },\r\n    {\r\n      title: 'Kết quả',\r\n      dataIndex: 'status',\r\n      render: (_, values) => <Status text={listResult[values.status].label} keys={listResult[values.status].color} />,\r\n    },\r\n    {\r\n      title: '',\r\n      dataIndex: 'action',\r\n      render: (_, values) => (\r\n        <div className=\"wrapper-button\">\r\n          <ButtonTooltip tip=\"Xem chi tiết\">\r\n            <PrimaryButton\r\n              icon={<BarsOutlined />}\r\n              onClick={() => {\r\n                setId(values.id);\r\n                setIsOpen(true);\r\n              }}\r\n            />\r\n          </ButtonTooltip>\r\n          {values.isCreateContract && (\r\n            <ButtonTooltip tip=\"Tạo hợp đồng\">\r\n              <PrimaryButton\r\n                onClick={() => createContractByDealers(values.id)}\r\n                PrimaryButton\r\n                icon={<BookOutlined />}\r\n              ></PrimaryButton>\r\n            </ButtonTooltip>\r\n          )}\r\n        </div>\r\n      ),\r\n    },\r\n  ];\r\n\r\n  const onCreateQuote = () => {\r\n    setId('');\r\n    setIsOpen(true);\r\n  };\r\n\r\n  const onClickDelete = (values) => {\r\n    Modal.confirm({\r\n      title: 'Xác Nhận',\r\n      icon: <ExclamationCircleOutlined />,\r\n      content: 'Bạn có chắc chắn muốn xóa dòng dữ liệu đã chọn?',\r\n      okText: 'Xác Nhận',\r\n      cancelText: 'Hủy',\r\n      onOk: () => {\r\n        deleteDealers(values).then((x) => {\r\n          readGrid(true);\r\n        });\r\n      },\r\n      confirmLoading: isLoading,\r\n    });\r\n  };\r\n\r\n  const renderFilter = () => (\r\n    <Filter\r\n      isOpen={filter.isOpen}\r\n      title={'Lọc hóa đơn'}\r\n      handleClosed={() => setFilter({ isOpen: false })}\r\n      onApplyFilter={(values) => {\r\n        dispatch(actions.filters(values));\r\n      }}\r\n    />\r\n  );\r\n\r\n  return (\r\n    <>\r\n      {isAccessed(PER.DS_DANG_KY_DU_AN_XEM) && (\r\n        <div>\r\n          <div id=\"dealers-page\">\r\n            <HeaderPage\r\n              title=\"DANH SÁCH CÔNG TY ĐĂNG KÝ DỰ ÁN\"\r\n              actions=\"default\"\r\n              onCreate={onCreateQuote}\r\n              handleDelete={onClickDelete}\r\n              isShowActionAdd={isAccessed(PER.DS_DANG_KY_DU_AN_THEM)}\r\n              // isShowActionDelete={isAccessed(PER.DS_DANG_KY_DU_AN_XOA)}\r\n            />\r\n            {renderFilter()}\r\n            <div className=\"main__application\">\r\n              <PageWrapper>\r\n                <Grid\r\n                  scroll={{ x: 1700 }}\r\n                  urlEndpoint={urlEndpointTableDealers}\r\n                  columns={columns}\r\n                  summaryNumberCol={9}\r\n                />\r\n              </PageWrapper>\r\n            </div>\r\n            {isOpen && (\r\n              <CreateAndUpdate\r\n                id={id}\r\n                isOpen={isOpen}\r\n                reloadTable={() => readGrid(true)}\r\n                form={form}\r\n                onClose={() => {\r\n                  setId('');\r\n                  setIsOpen(false);\r\n                }}\r\n              />\r\n            )}\r\n          </div>\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nDealers.propTypes = {};\r\n\r\nexport default Dealers;\r\n","import React from 'react';\r\nimport { Button } from 'antd';\r\nfunction PrimaryButton(props) {\r\n  return <Button type=\"primary\" size=\"small\" {...props} />;\r\n}\r\n\r\nPrimaryButton.propTypes = {};\r\n\r\nexport default PrimaryButton;\r\n","import React from 'react';\r\nimport { Button } from 'antd';\r\nfunction DangerButton(props) {\r\n  return <Button danger size=\"small\" {...props} />;\r\n}\r\n\r\nDangerButton.propTypes = {};\r\n\r\nexport default DangerButton;\r\n","import React from 'react';\r\nimport { Button } from 'antd';\r\nfunction DefaultButton(props) {\r\n  return <Button type=\"default\" size=\"small\" {...props} />;\r\n}\r\n\r\nDefaultButton.propTypes = {};\r\n\r\nexport default DefaultButton;\r\n","import React from 'react';\r\nimport DefaultButton from './PrimaryButton';\r\nimport { StopOutlined } from '@ant-design/icons';\r\n\r\nfunction ButtonCancel({ title = 'Thêm mới', ...rest }) {\r\n  return (\r\n    <DefaultButton icon={<StopOutlined />} {...rest}>\r\n      {title}\r\n    </DefaultButton>\r\n  );\r\n}\r\n\r\nButtonCancel.propTypes = {};\r\n\r\nexport default ButtonCancel;\r\n","import React from 'react';\r\nimport DangerButton from './DangerButton';\r\nimport { DeleteOutlined } from '@ant-design/icons';\r\n\r\nfunction ButtonDelete({ title = '', ...rest }) {\r\n  return (\r\n    <DangerButton icon={<DeleteOutlined />} {...rest}>\r\n      {title}\r\n    </DangerButton>\r\n  );\r\n}\r\n\r\nButtonDelete.propTypes = {};\r\n\r\nexport default ButtonDelete;\r\n","import React from 'react';\r\nimport { EditOutlined } from '@ant-design/icons';\r\nimport DefaultButton from './DefaultButton';\r\n\r\nfunction ButtonEdit({ title = '', ...rest }) {\r\n  return (\r\n    <DefaultButton icon={<EditOutlined />} {...rest}>\r\n      {title}\r\n    </DefaultButton>\r\n  );\r\n}\r\n\r\nButtonEdit.propTypes = {};\r\n\r\nexport default ButtonEdit;\r\n","import moment from \"moment\";\r\n\r\nexport const formatCurrency = (number) => {\r\n  if (Number.isNaN(number) || !number || number === null) {\r\n    number = 0;\r\n  }\r\n  let vnd = new Intl.NumberFormat('vi-VN', {\r\n    style: 'currency',\r\n    currency: 'VND',\r\n  });\r\n  return vnd.format(number).replaceAll('₫', '');\r\n};\r\n\r\nexport const formatCurrencyInput = (numberString) => {\r\n  let number = numberString.replaceAll('.', '');\r\n  return Number(number);\r\n};\r\n\r\nexport const formatDateYMD = (date) => {\r\n  let myDate = moment(date);\r\n  return moment.isMoment(myDate) ? myDate?.format('YYYY-MM-DD') : myDate\r\n}\r\n","import arrayWithoutHoles from \"./arrayWithoutHoles\";\nimport iterableToArray from \"./iterableToArray\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray\";\nimport nonIterableSpread from \"./nonIterableSpread\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"./arrayLikeToArray\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import moment from 'moment';\r\n\r\nexport const formatMDY = (data) => (data ? window.moment.utc(data).local().format('MM/DD/YYYY') : '');\r\n\r\nexport const customFormat = (data, format) => {\r\n  const date = window.moment.utc(data).local();\r\n  return date.isValid() ? date.format(format) : '';\r\n};\r\n\r\nexport const getDateFormat = (date) => {\r\n  const d = moment(date);\r\n  return date && d.isValid() ? d : '';\r\n};\r\n\r\nexport const startDMY = (data, type) => moment(data).startOf(type).toString();\r\n\r\nexport const endDMY = (data, type) => moment(data).endOf(type).toString();\r\n\r\nexport const formatMDYWithParam = (param) => (param && param.value ? formatMDY(param.value) : '');\r\nexport const formatMMDDYYYY = (data) => (data ? moment(data).format('MM/DD/YYYY') : '');\r\nexport const formatDDMMYYYY = (data) => (data ? moment(data).format('DD/MM/YYYY') : '');\r\n\r\nexport const formatTime = (data) => (data ? moment(data).format('HH:mm A') : '');\r\n\r\nexport const formatFullTime = (data) => (data ? moment(data).format('MM/DD/YYYY hh:mm A') : '');\r\n\r\nexport const exportToChatTime = (isoDate) => {\r\n  if (!isoDate) return;\r\n  const diff = moment(isoDate).diff(new Date(), 'hours');\r\n\r\n  let result;\r\n\r\n  if (-diff < 10) {\r\n    result = window.moment(isoDate).fromNow();\r\n  }\r\n\r\n  if (-diff >= 10) {\r\n    result = window.moment(isoDate).calendar();\r\n  }\r\n\r\n  return result;\r\n};\r\n\r\nexport const formattedFullTime = (data) => moment(data).format('YYYY-MM-DDTHH:mm:ss[Z]');\r\n\r\nexport const startISOTime = (data, typeView) => moment(data).startOf(typeView).toISOString();\r\n\r\nexport const endISOTime = (data, typeView) => moment(data).endOf(typeView).toISOString();\r\n\r\nexport const convertToISOTime = (data) => moment(data).toISOString();\r\n\r\nexport const getPreviousDays = (number) => moment().subtract(number, 'days');\r\nexport const getPrevious30Days = () => getPreviousDays(30);\r\n\r\nexport const today = () => moment();\r\n\r\n\r\nexport const DateTimeToDate = (dateString) => {\r\n  if (!dateString) return null\r\n\r\n  const date = new Date(dateString);\r\n  const formattedDate = date.toISOString().split('T')[0];\r\n  return formattedDate\r\n}\r\n\r\n","import produce from 'immer';\r\nimport * as types from './constants';\r\n\r\n// initial state\r\nexport const initialState = {\r\n  idSelections: [],\r\n  detailSelections: [],\r\n};\r\n\r\nconst gridViewReducer = (state = initialState, action) =>\r\n  produce(state, (draft) => {\r\n    switch (action.type) {\r\n      case types.SET_ITEM_ID_SELECTIONS:\r\n        draft.idSelections = action.payload;\r\n        break;\r\n      case types.SET_ITEM_DETAIL_SELECTIONS:\r\n        draft.detailSelections = action.payload;\r\n        break;\r\n    }\r\n  });\r\n\r\nexport default gridViewReducer;\r\n","export const SET_ITEM_ID_SELECTIONS = 'SET_ITEM_ID_SELECTIONS';\r\nexport const SET_ITEM_DETAIL_SELECTIONS = 'SET_ITEM_DETAIL_SELECTIONS';\r\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\n/**\n * Use invariant() to assert state which your program assumes to be true.\n *\n * Provide sprintf-style format (only %s is supported) and arguments\n * to provide information about what broke and what you were\n * expecting.\n *\n * The invariant message will be stripped in production, but the invariant\n * will remain to ensure logic does not differ in production.\n */\n\nvar invariant = function(condition, format, a, b, c, d, e, f) {\n  if (process.env.NODE_ENV !== 'production') {\n    if (format === undefined) {\n      throw new Error('invariant requires an error message argument');\n    }\n  }\n\n  if (!condition) {\n    var error;\n    if (format === undefined) {\n      error = new Error(\n        'Minified exception occurred; use the non-minified dev environment ' +\n        'for the full error message and additional helpful warnings.'\n      );\n    } else {\n      var args = [a, b, c, d, e, f];\n      var argIndex = 0;\n      error = new Error(\n        format.replace(/%s/g, function() { return args[argIndex++]; })\n      );\n      error.name = 'Invariant Violation';\n    }\n\n    error.framesToPop = 1; // we don't care about invariant's own frame\n    throw error;\n  }\n};\n\nmodule.exports = invariant;\n","import { Button, Divider, Space, Tooltip } from 'antd';\r\nimport React from 'react';\r\nconst ButtonTooltip = (props) => (\r\n  <>\r\n    <Space wrap>\r\n      <Tooltip title={props?.tip} color=\"blue\" key=\"blue\">\r\n        {props.children}\r\n      </Tooltip>\r\n    </Space>\r\n  </>\r\n);\r\nexport default ButtonTooltip;\r\n\r\n\r\n\r\n\r\n// import React from 'react';\r\n// import { Button } from 'antd';\r\n\r\n// function ButtonToolTip(props) {\r\n//   return <Button type=\"primary\" size=\"small\" {...props} />;\r\n// }\r\n\r\n// ButtonToolTip.propTypes = {};\r\n\r\n// export default ButtonToolTip;\r\n","export const mapToSelectOption = (data) => {\r\n  const options = data.map((x) => {\r\n    return {\r\n      value: x.id,\r\n      label: x.name,\r\n    };\r\n  });\r\n  return options\r\n};\r\n\r\nexport const isAccessed = (permissionsAction) => {\r\n  if (!permissionsAction) return\r\n\r\n  const userInfo = JSON.parse(localStorage.getItem('userInfo'))\r\n  const permissionsList = userInfo.permissions\r\n  if (permissionsList && permissionsList.length > 0) {\r\n    return permissionsList.includes(permissionsAction)\r\n  }\r\n\r\n  return false\r\n}\r\n","import React from 'react';\r\nimport classnames from 'classnames';\r\n\r\nimport './PageWrapper.less';\r\n\r\nfunction PageWrapper({ className, children, ...rest }) {\r\n  return (\r\n    <div className={classnames('section-wrapper', className)} {...rest}>\r\n      {children}\r\n    </div>\r\n  );\r\n}\r\n\r\nPageWrapper.propTypes = {};\r\n\r\nexport default PageWrapper;\r\n","import { createSelector } from 'reselect';\r\nimport { initialState } from './reducer';\r\n\r\nconst selectGridView = (state) => (state && state.tableView) || initialState;\r\n\r\nconst selectGridIdSelections = () => createSelector(selectGridView, (globalState) => globalState.idSelections);\r\n\r\nconst selectGridDetailSelections = () => createSelector(selectGridView, (globalState) => globalState.detailSelections);\r\n\r\nexport { selectGridView, selectGridIdSelections, selectGridDetailSelections };\r\n","import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Row, Col, Input, Button, Typography } from 'antd';\r\nimport { PlusCircleOutlined, BarsOutlined, FilterOutlined } from '@ant-design/icons';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { ButtonDelete, PrimaryButton } from 'common/components/Buttons';\r\n\r\nimport * as gridViewSelectors from 'components/Grid/controllers/selectors';\r\nimport { updateSearch } from 'redux/global/actions';\r\nimport './header.less';\r\n\r\nconst { Search } = Input;\r\n\r\nconst HeaderPage = ({\r\n  title = '',\r\n  actions = 'default',\r\n  onCreate,\r\n  handleDelete,\r\n  labelPrimaryBtn = \"\",\r\n  onPressPrimaryBtn = () => { },\r\n  isFilter = false,\r\n  onFilter,\r\n  isHideAction = false,\r\n  isShowActionDelete = true,\r\n  isShowActionAdd = true,\r\n}) => {\r\n  const dispatch = useDispatch();\r\n  const itemSelections = useSelector(gridViewSelectors.selectGridIdSelections());\r\n\r\n  const onSearch = (text) => {\r\n    dispatch(updateSearch(text));\r\n  };\r\n\r\n\r\n  return (\r\n    <div className=\"header-page\">\r\n      <Row className=\"wrapper\" justify=\"space-around\" align=\"center\">\r\n        <Col className=\"header-page__title\">\r\n          <Typography.Title level={3}>{title}</Typography.Title>\r\n        </Col>\r\n        <Col flex={1} style={{ textAlign: 'right' }}>\r\n          {actions === 'default' ? (\r\n            <Row\r\n              style={{\r\n                display: 'flex',\r\n                flexWrap: 'nowrap',\r\n                gap: '16px',\r\n                justifyContent: 'end',\r\n              }}\r\n            >\r\n              <Search className=\"header-page__search\" placeholder=\"Tìm kiếm...\" onSearch={onSearch} enterButton />\r\n              {isFilter &&\r\n                (<Button type=\"primary\" onClick={() => onFilter()} icon={<FilterOutlined />}>\r\n                </Button>)\r\n              }\r\n              {isHideAction === false && (\r\n                <>\r\n                  {isShowActionAdd && (\r\n                    <Button type=\"primary\" onClick={() => onCreate()} icon={<PlusCircleOutlined />}>\r\n                      Thêm mới\r\n                    </Button>\r\n                  )}\r\n                  {!!labelPrimaryBtn && <PrimaryButton size=\"medium\" icon={<BarsOutlined />} onClick={onPressPrimaryBtn}>\r\n                    {labelPrimaryBtn}\r\n                  </PrimaryButton>}\r\n                  {isShowActionDelete && (\r\n                    <ButtonDelete\r\n                      size=\"medium\"\r\n                      onClick={() => handleDelete && handleDelete(itemSelections)}\r\n                      disabled={!itemSelections.length}\r\n                    >\r\n                      Xóa\r\n                    </ButtonDelete>\r\n                  )}\r\n                </>\r\n              )}\r\n            </Row>\r\n          ) : typeof actions === 'function' ? (\r\n            actions()\r\n          ) : null}\r\n        </Col>\r\n      </Row>\r\n    </div>\r\n  );\r\n};\r\n\r\nHeaderPage.propTypes = {\r\n  title: PropTypes.string,\r\n  actions: PropTypes.oneOfType([PropTypes.string, PropTypes.func, PropTypes.bool]),\r\n  onCreate: PropTypes.func,\r\n  handleDelete: PropTypes.func,\r\n  labelPrimaryBtn: PropTypes.string,\r\n  onPressPrimaryBtn: PropTypes.func,\r\n};\r\n\r\nexport default HeaderPage;\r\n","import * as types from './constants';\r\n\r\nexport function setItemIdSelections(items) {\r\n  return {\r\n    type: types.SET_ITEM_ID_SELECTIONS,\r\n    payload: items,\r\n  };\r\n}\r\nexport function setItemDetailSelections(items) {\r\n  return {\r\n    type: types.SET_ITEM_DETAIL_SELECTIONS,\r\n    payload: items,\r\n  };\r\n}\r\n","import React, { useContext, useReducer, useCallback } from 'react';\r\n\r\nconst ActionKind = {\r\n  SET_STATE: 'SET_STATE',\r\n  SET_DATA: 'SET_DATA',\r\n  SET_PAGE: 'SET_PAGE',\r\n  SET_TOTAL_PAGE: 'SET_TOTAL_PAGE',\r\n  SET_TOTAL_ELEMENT: 'SET_TOTAL_ELEMENT',\r\n  SET_LOADING: 'SET_LOADING',\r\n  SET_PAGESIZE: 'SET_PAGESIZE',\r\n  SET_SORT: 'SET_SORT',\r\n  SET_SEARCH_TEXT: 'SET_SEARCH_TEXT',\r\n};\r\n\r\nexport const initialState = {\r\n  data: [],\r\n  currentPage: 1,\r\n  totalPage: 1,\r\n  totalElement: 0,\r\n  pageSize: 10,\r\n  loading: false,\r\n  searchText: '',\r\n  sort: [\r\n    {\r\n      field: '',\r\n      order: '',\r\n    },\r\n  ],\r\n};\r\n\r\nconst store = React.createContext({\r\n  state: initialState,\r\n  setState: () => null,\r\n  setPage: () => null,\r\n  setTotalPage: () => null,\r\n  setData: () => null,\r\n  setTotalElement: () => null,\r\n  setLoading: () => null,\r\n  setPageSize: () => null,\r\n});\r\n\r\nconst { Provider } = store;\r\n\r\nconst TableProvider = ({ children, initState }) => {\r\n  const [state, dispatch] = useReducer(\r\n    (state, action) => {\r\n      switch (action.type) {\r\n        case ActionKind.SET_STATE:\r\n          return {\r\n            ...state,\r\n            ...action.payload,\r\n          };\r\n        case ActionKind.SET_DATA:\r\n          return {\r\n            ...state,\r\n            data: action.payload.data,\r\n          };\r\n        case ActionKind.SET_PAGE:\r\n          return {\r\n            ...state,\r\n            currentPage: action.payload.currentPage,\r\n          };\r\n        case ActionKind.SET_TOTAL_PAGE:\r\n          return {\r\n            ...state,\r\n            totalPage: action.payload.totalPage,\r\n          };\r\n        case ActionKind.SET_TOTAL_ELEMENT:\r\n          return {\r\n            ...state,\r\n            totalElement: action.payload.totalElement,\r\n          };\r\n        case ActionKind.SET_LOADING:\r\n          return {\r\n            ...state,\r\n            loading: action.payload.loading,\r\n          };\r\n        case ActionKind.SET_PAGESIZE:\r\n          return {\r\n            ...state,\r\n            pageSize: action.payload.pageSize,\r\n          };\r\n        case ActionKind.SET_SEARCH_TEXT:\r\n          return {\r\n            ...state,\r\n            searchText: action.payload.searchText,\r\n          };\r\n        case ActionKind.SET_SORT:\r\n          return {\r\n            ...state,\r\n            sort: action.payload.sort,\r\n          };\r\n        default:\r\n          return { ...state };\r\n      }\r\n    },\r\n    { ...initialState, ...initState },\r\n  );\r\n\r\n  const setState = useCallback((state) => {\r\n    dispatch({\r\n      type: ActionKind.SET_STATE,\r\n      payload: state,\r\n    });\r\n  }, []);\r\n\r\n  const setPage = useCallback((page) => {\r\n    dispatch({\r\n      type: ActionKind.SET_PAGE,\r\n      payload: {\r\n        currentPage: page,\r\n      },\r\n    });\r\n  }, []);\r\n\r\n  const setData = useCallback((data) => {\r\n    dispatch({\r\n      type: ActionKind.SET_DATA,\r\n      payload: {\r\n        data: data,\r\n      },\r\n    });\r\n  }, []);\r\n\r\n  const setTotalPage = useCallback((total) => {\r\n    dispatch({\r\n      type: ActionKind.SET_TOTAL_PAGE,\r\n      payload: {\r\n        totalPage: total,\r\n      },\r\n    });\r\n  }, []);\r\n\r\n  const setLoading = useCallback((val) => {\r\n    dispatch({\r\n      type: ActionKind.SET_LOADING,\r\n      payload: {\r\n        loading: val,\r\n      },\r\n    });\r\n  }, []);\r\n\r\n  const setTotalElement = useCallback((total) => {\r\n    dispatch({\r\n      type: ActionKind.SET_TOTAL_ELEMENT,\r\n      payload: {\r\n        totalElement: total,\r\n      },\r\n    });\r\n  }, []);\r\n\r\n  const setPageSize = useCallback((size) => {\r\n    dispatch({\r\n      type: ActionKind.SET_PAGESIZE,\r\n      payload: {\r\n        pageSize: size,\r\n      },\r\n    });\r\n  }, []);\r\n  const setSearchText = useCallback((searchText) => {\r\n    dispatch({\r\n      type: ActionKind.SET_SEARCH_TEXT,\r\n      payload: {\r\n        searchText: searchText,\r\n      },\r\n    });\r\n  }, []);\r\n  const setSort = useCallback((sort) => {\r\n    dispatch({\r\n      type: ActionKind.SET_SORT,\r\n      payload: {\r\n        sort: sort,\r\n      },\r\n    });\r\n  }, []);\r\n\r\n  return (\r\n    <Provider\r\n      value={{\r\n        state,\r\n        setState,\r\n        setPage,\r\n        setTotalPage,\r\n        setData,\r\n        setLoading,\r\n        setTotalElement,\r\n        setPageSize,\r\n        setSearchText,\r\n        setSort,\r\n      }}\r\n    >\r\n      {children}\r\n    </Provider>\r\n  );\r\n};\r\n\r\nexport default TableProvider;\r\n\r\n// HOC to wrap component with TableProvider\r\nexport function withTable(WrappedComponent, initState = initialState) {\r\n  const ComponentWithTableProvider = (props) => (\r\n    <TableProvider initState={initState}>\r\n      <WrappedComponent {...props} />\r\n    </TableProvider>\r\n  );\r\n  return ComponentWithTableProvider;\r\n}\r\n\r\nexport const useTable = () => useContext(store);\r\n","import React, { useEffect, useCallback, useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Table } from 'antd';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport clsx from 'classnames';\r\nimport { isArray } from 'lodash';\r\n\r\nimport * as api from 'config/axios';\r\nimport * as actions from 'redux/global/actions';\r\nimport reducer from './controllers/reducer';\r\n// import saga from './controllers/saga';\r\nimport * as gridViewActions from './controllers/actions';\r\nimport { useInjectReducer } from 'utils/common/injectedReducers';\r\n// import { useInjectSaga } from 'utils/common/injectSaga';\r\nimport { useTable, withTable } from 'hooks/useTable';\r\n\r\nimport './Grid.less';\r\nimport { formatCurrency } from 'utils/format';\r\n\r\nconst key = 'tableView';\r\n\r\nconst Grid = ({\r\n  className = '',\r\n  columns,\r\n  data,\r\n  expandedRowRender,\r\n  handleGetDetailSelections,\r\n  handleGetSelections,\r\n  hasRowSelected = true,\r\n  isHidePagination,\r\n  rowKey = 'id',\r\n  shouldSaveToStore = true,\r\n  shouldShowTotal = true,\r\n  urlEndpoint,\r\n  pageSize,\r\n  ...rest\r\n}) => {\r\n  useInjectReducer({ key, reducer });\r\n  // useInjectSaga({ key, saga });\r\n\r\n  const dispatch = useDispatch();\r\n  const searchText = useSelector((state) => state.global.searchText);\r\n  const readGrid = useSelector((state) => state.global.refreshGrid);\r\n  const filters = useSelector((state) => state.global.filters);\r\n\r\n  const [idsSelection, setIdsSelection] = useState([]);\r\n  const { state, setState, setLoading, setData } = useTable();\r\n  const [totalAmount, setTotalAmount] = useState('');\r\n\r\n  const resetState = () => {\r\n    dispatch(actions.refreshGrid(false));\r\n  };\r\n\r\n  const getSortItem = (sort) => {\r\n    let sorted = [];\r\n    sort.map((item) => {\r\n      if (item?.field) {\r\n        sorted.push({\r\n          fieldName: item.field,\r\n          isAscending: item.order === 'ascend',\r\n        });\r\n      }\r\n    });\r\n\r\n    return sorted;\r\n  };\r\n\r\n  const fetchData = useCallback(() => {\r\n    if (!urlEndpoint) return;\r\n    setLoading(true);\r\n\r\n    const params = {\r\n      pageSize: state.pageSize,\r\n      pageIndex: state.currentPage - 1,\r\n      searchText: state.searchText,\r\n      sort: getSortItem(state.sort),\r\n      fieldId: filters?.fields,\r\n      filter: [],\r\n    };\r\n\r\n    api\r\n      .sendGet(urlEndpoint, params)\r\n      .then((results) => {\r\n        if (results && results?.isSuccess) {\r\n          const data = results?.data || {};\r\n          setState({\r\n            data: data?.records,\r\n            currentPage: params?.pageIndex || 1,\r\n            totalElement: data?.total || 0,\r\n            loading: false,\r\n          });\r\n          setTotalAmount(results?.data?.totalAmount);\r\n        } else {\r\n          setState({\r\n            data: [],\r\n            totalElement: 0,\r\n          });\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        // eslint-disable-next-line no-console\r\n        console.log('err: ', err);\r\n      })\r\n      .finally(() => {\r\n        setLoading(false);\r\n      });\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [state.pageSize, state.sort, state.searchText, urlEndpoint, filters?.fields]);\r\n\r\n  useEffect(() => {\r\n    fetchData();\r\n  }, [dispatch, fetchData]);\r\n\r\n  useEffect(() => {\r\n    console.log('filtersfilters', filters);\r\n  }, [filters]);\r\n\r\n  useEffect(() => {\r\n    if (urlEndpoint) {\r\n      setState({\r\n        searchText: searchText,\r\n        currentPage: 1,\r\n      });\r\n    }\r\n  }, [searchText, setState, urlEndpoint]);\r\n\r\n  useEffect(() => {\r\n    if (readGrid) {\r\n      fetchData();\r\n      resetState();\r\n    }\r\n\r\n    return () => {\r\n      setIdsSelection([]);\r\n      dispatch(gridViewActions.setItemIdSelections([]));\r\n      dispatch(gridViewActions.setItemDetailSelections([]));\r\n    };\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [readGrid]);\r\n\r\n  useEffect(() => {\r\n    if (data && isArray(data)) {\r\n      setData(data);\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [JSON.stringify(data)]);\r\n\r\n  const onChange = (pagination, filters, sorter) => {\r\n    setState({\r\n      currentPage: pagination.current,\r\n      pageSize: pagination.pageSize,\r\n      sort: sorter ? [sorter] : [],\r\n    });\r\n  };\r\n\r\n  const rowSelection = {\r\n    selectedRowKeys: idsSelection,\r\n    onChange: (selectedRowKeys, selectedRows) => {\r\n      setIdsSelection(selectedRowKeys);\r\n      // handleCallback\r\n      handleGetSelections && handleGetSelections(selectedRowKeys);\r\n      handleGetDetailSelections && handleGetDetailSelections(selectedRows);\r\n\r\n      // save to redux gridView\r\n      if (shouldSaveToStore) {\r\n        dispatch(gridViewActions.setItemIdSelections(selectedRowKeys));\r\n        dispatch(gridViewActions.setItemDetailSelections(selectedRows));\r\n      }\r\n    },\r\n  };\r\n\r\n  const summary = () => (\r\n    <Table.Summary.Row>\r\n      {columns.map((x, index) => (\r\n        <>\r\n          <Table.Summary.Cell>{index === rest?.summaryNumberCol ? formatCurrency(totalAmount) : ''}</Table.Summary.Cell>\r\n        </>\r\n      ))}\r\n      <Table.Summary.Cell></Table.Summary.Cell>\r\n    </Table.Summary.Row>\r\n  );\r\n\r\n  return (\r\n    <div className={clsx('grid', className && className)}>\r\n      <Table\r\n        columns={columns}\r\n        dataSource={state.data}\r\n        onChange={onChange}\r\n        bordered\r\n        pagination={\r\n          isHidePagination\r\n            ? false\r\n            : {\r\n              defaultPageSize: pageSize ? pageSize : state.pageSize,\r\n              showSizeChanger: true,\r\n              pageSizeOptions: ['5', '10', '20', '50'],\r\n              total: state.totalElement,\r\n              showTotal: shouldShowTotal ? () => `Có ${state.totalElement} dữ liệu` : null,\r\n            }\r\n        }\r\n        loading={state.loading}\r\n        expandable={{\r\n          expandedRowRender,\r\n        }}\r\n        rowKey={rowKey}\r\n        rowSelection={hasRowSelected ? rowSelection : null}\r\n        scroll={{ x: '100%' }}\r\n        {...rest}\r\n        summary={(state.data.length > 0 && !!rest.summaryNumberCol) ? summary : () => { }}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nGrid.propTypes = {\r\n  className: PropTypes.string,\r\n  columns: PropTypes.array,\r\n  data: PropTypes.array,\r\n  expandedRowRender: PropTypes.any,\r\n  handleGetDetailSelections: PropTypes.func,\r\n  handleGetSelections: PropTypes.func,\r\n  hasRowSelected: PropTypes.bool,\r\n  isHidePagination: PropTypes.bool,\r\n  rowKey: PropTypes.string,\r\n  shouldSaveToStore: PropTypes.bool,\r\n  shouldShowTotal: PropTypes.bool,\r\n  urlEndpoint: PropTypes.oneOfType([PropTypes.string]),\r\n};\r\n\r\nexport default withTable(Grid);\r\n","import { conformsTo, isFunction, isObject } from 'lodash';\r\nimport invariant from 'invariant';\r\n\r\n/**\r\n * Validate the shape of redux store\r\n */\r\nexport default function checkStore(store) {\r\n  const shape = {\r\n    dispatch: isFunction,\r\n    subscribe: isFunction,\r\n    getState: isFunction,\r\n    replaceReducer: isFunction,\r\n    runSaga: isFunction,\r\n    injectedReducers: isObject,\r\n    injectedSagas: isObject,\r\n  };\r\n  invariant(conformsTo(store, shape), '(app/utils...) injectors: Expected a valid redux store');\r\n}\r\n","import invariant from 'invariant';\r\nimport { isEmpty, isFunction, isString } from 'lodash';\r\n\r\nimport checkStore from './checkStore';\r\nimport createReducer from '../../reducers';\r\n\r\nexport function injectReducerFactory(store, isValid) {\r\n  return function injectReducer(key, reducer) {\r\n    if (!isValid) checkStore(store);\r\n\r\n    invariant(\r\n      isString(key) && !isEmpty(key) && isFunction(reducer),\r\n      '(app/utils...) injectReducer: Expected `reducer` to be a reducer function',\r\n    );\r\n\r\n    // Check `store.injectedReducers[key] === reducer` for hot reloading when a key is the same but a reducer is different\r\n    if (Reflect.has(store.injectedReducers, key) && store.injectedReducers[key] === reducer) return;\r\n\r\n    store.injectedReducers[key] = reducer; // eslint-disable-line no-param-reassign\r\n    store.replaceReducer(createReducer(store.injectedReducers));\r\n  };\r\n}\r\n\r\nexport default function getInjectors(store) {\r\n  checkStore(store);\r\n\r\n  return {\r\n    injectReducer: injectReducerFactory(store, true),\r\n  };\r\n}\r\n","import React from 'react';\r\nimport hoistNonReactStatics from 'hoist-non-react-statics';\r\nimport { ReactReduxContext } from 'react-redux';\r\n\r\nimport getInjectors from './reducerInjectors';\r\n\r\n/**\r\n * Dynamically injects a reducer\r\n *\r\n * @param {string} key A key of the reducer\r\n * @param {function} reducer A reducer that will be injected\r\n *\r\n */\r\nexport default ({ key, reducer }) =>\r\n  (WrappedComponent) => {\r\n    class ReducerInjector extends React.Component {\r\n      static WrappedComponent = WrappedComponent;\r\n\r\n      static contextType = ReactReduxContext;\r\n\r\n      static displayName = `withReducer(${WrappedComponent.displayName || WrappedComponent.name || 'Component'})`;\r\n\r\n      constructor(props, context) {\r\n        super(props, context);\r\n\r\n        getInjectors(context.store).injectReducer(key, reducer);\r\n      }\r\n\r\n      render() {\r\n        return <WrappedComponent {...this.props} />;\r\n      }\r\n    }\r\n\r\n    return hoistNonReactStatics(ReducerInjector, WrappedComponent);\r\n  };\r\n\r\nconst useInjectReducer = ({ key, reducer }) => {\r\n  const context = React.useContext(ReactReduxContext);\r\n  React.useEffect(() => {\r\n    getInjectors(context.store).injectReducer(key, reducer);\r\n  }, [context.store, key, reducer]);\r\n};\r\n\r\nexport { useInjectReducer };\r\n","import * as api from '../../config/axios';\r\n\r\nexport const urlEndpointCustomer = '/api/customers/';\r\nexport const urlEndpointTableCustomer= '/api/customers';\r\n\r\nexport const getCustomerById = (id) => api.sendGet(urlEndpointCustomer + id);\r\n\r\nexport const getCustomers = (data) => api.sendGet(urlEndpointCustomer, data);\r\n\r\nexport const createCustomer = (payload) =>\r\n  api.sendPost(urlEndpointCustomer, {\r\n    id: payload.id,\r\n    input: payload,\r\n  });\r\n\r\nexport const updateCustomer = (payload) => api.sendPost(urlEndpointCustomer, payload);\r\n\r\nexport const deleteCustomers = (payload) => api.sendDelete(urlEndpointCustomer, { data: { ids: payload } });\r\n\r\nexport const getCustomerDropdown = () => api.sendGet(urlEndpointCustomer + 'dropdown');\r\n","/** @format */\r\n\r\nimport * as api from '../../config/axios';\r\nexport const urlEndpointField = '/api/fields/';\r\nexport const urlEndpointTableField = '/api/fields';\r\n\r\nexport const getFieldById = (id) => api.sendGet(urlEndpointField + id);\r\n\r\nexport const getFields = (data) => api.sendGet(urlEndpointField, data);\r\n\r\nexport const createFields = (payload) =>\r\n  api.sendPost(urlEndpointField, {\r\n    id: payload.id,\r\n    input: payload,\r\n  });\r\n\r\nexport const updateFields = (payload) => api.sendPost(urlEndpointField, payload);\r\n\r\nexport const deleteFields = (payload) =>\r\n  api.sendDelete(urlEndpointField, {\r\n    data: { ids: payload },\r\n  });\r\n\r\n  export const getFieldsDropDowns = () => api.sendGet(urlEndpointField + 'dropdown', '');\r\n","import * as React from 'react';\r\nimport { Controller } from 'react-hook-form';\r\nimport './input.less';\r\nimport _ from 'lodash';\r\nimport NumberFormat from 'react-number-format';\r\nimport { DatePicker, Form, Input, Typography } from 'antd';\r\nimport moment from 'moment';\r\nimport { formatDDMMYYYY, today } from 'utils/formatDate';\r\nimport { formatCurrency } from 'utils/format';\r\n\r\nconst { TextArea } = Input;\r\n\r\nconst InputCustom = (props) => {\r\n  let classErrors = props.className;\r\n  const renderErrorMessage = () => {\r\n    if (props.errors) {\r\n      let exists = Object.keys(props.errors).includes(props.name);\r\n\r\n      let mesError = props.errors[props.name]?.message;\r\n      classErrors = _.isEmpty(mesError) ? props.className : `${props.className} is-invalid`;\r\n\r\n      if (exists) {\r\n        return <span className=\"error-message invalid-feedback\">{props.errors[props.name]?.message} {props?.label?.toLowerCase()}</span>;\r\n      }\r\n    }\r\n    return <></>;\r\n  };\r\n\r\n  const renderLabel = () => {\r\n    return (\r\n      <>\r\n        {props?.label !== '' && (\r\n          <Typography.Text>\r\n            {props.isRequired && !props.isShowText && <span className=\"is-required\" >* </span>}\r\n            {`${props.label} :`}\r\n          </Typography.Text>\r\n        )}\r\n      </>\r\n    );\r\n  };\r\n\r\n  const renderContentDetailMode = (value) => {\r\n    if (!value) return \"\"\r\n    if (props.formatInput) {\r\n      return formatCurrency(value)\r\n    }\r\n    if (props.type === \"date\") {\r\n      return formatDDMMYYYY(value)\r\n    }\r\n    return value\r\n  }\r\n\r\n  const renderInputChild = (field) => {\r\n    if (props.isShowText) {\r\n      return <p className='text-mode-detail'>{renderContentDetailMode(field?.value)}</p>\r\n    }\r\n    if (props.formatInput) {\r\n      return (\r\n        <NumberFormat\r\n          customInput={Input}\r\n          className={`${classErrors}`}\r\n          {...props}\r\n          prefix={props.prefix}\r\n          defaultValue={field.value}\r\n          thousandSeparator={'.'}\r\n          decimalSeparator={','}\r\n          value={field.value}\r\n          onValueChange={(values) => {\r\n            field.onChange(values.value);\r\n          }}\r\n        />\r\n      );\r\n    }\r\n    if (props.type === 'textarea') {\r\n      return (\r\n        <TextArea\r\n          disabled={props.disabled}\r\n          label={props.label}\r\n          type={props.type}\r\n          className={classErrors}\r\n          {...props}\r\n          {...field}\r\n          defaultValue={field.value}\r\n          value={field.value}\r\n          onChange={(e) => {\r\n            field.onChange(e.target.value);\r\n            if (props?.onChange !== undefined) {\r\n              props.onChange(e);\r\n            }\r\n          }}\r\n        />\r\n      );\r\n    }\r\n    if (props.type === 'date') {\r\n      return (\r\n        // <DatePicker placeholder=\"Chọn ngày\" format={formatDDMMYYYY} defaultValue={today()} />\r\n        <DatePicker\r\n          format={formatDDMMYYYY}\r\n          disabled={props.disabled}\r\n          className={`input-custom ${classErrors}`}\r\n          placeholder=''\r\n          {...props}\r\n          {...field}\r\n          defaultValue={today()}\r\n          value={field.value !== \"\" ? moment(field.value) : today()}\r\n          onChange={(date, dateString) => {\r\n            field.onChange(date);\r\n            if (props?.onChange !== undefined) {\r\n              props.onChange(date);\r\n            }\r\n          }\r\n          }\r\n        />\r\n      );\r\n    }\r\n\r\n    return (\r\n      <Input\r\n        disabled={props.disabled}\r\n        label={props.label}\r\n        type={props.type}\r\n        className={`input-custom ${classErrors}`}\r\n        {...props}\r\n        {...field}\r\n        defaultValue={field.value}\r\n        value={field.value}\r\n        onChange={(e) => {\r\n          field.onChange(e.target.value);\r\n          if (props?.onChange !== undefined) {\r\n            props.onChange(e);\r\n          }\r\n        }}\r\n      />\r\n    );\r\n  };\r\n\r\n  const renderInput = () => {\r\n    return (\r\n      <>\r\n        <Form.Item style={{ width: props.isTitleInline ? 'calc(100% - 150px)' : '100%' }}>\r\n          <Controller\r\n            id={props.id}\r\n            name={props.name}\r\n            defaultValue={props.defaultValue}\r\n            control={props.control}\r\n            render={({ field }) => renderInputChild(field)}\r\n          />\r\n          <div className='ant-form-item-explain-error'>{renderErrorMessage()}</div>\r\n          {/* <div className=\"ant-form-item-explain-error\" style=\"\">{renderErrorMessage()}</div> */}\r\n        </Form.Item>\r\n      </>\r\n    );\r\n  };\r\n\r\n  const renderLayoutTitleInline = () => {\r\n    if (props.isTitleInline) {\r\n      return (\r\n        <>\r\n          <Input.Group compact>\r\n            <div style={{ width: '150px' }}>{renderLabel()}</div>\r\n            {renderInput()}\r\n          </Input.Group>\r\n        </>\r\n      );\r\n    }\r\n    return (\r\n      <>\r\n        {renderLabel()}\r\n        {renderInput()}\r\n        {/* {renderErrorMessage()} */}\r\n      </>\r\n    );\r\n  };\r\n\r\n  return <>{renderLayoutTitleInline()}</>;\r\n};\r\n\r\nexport default InputCustom;\r\n","export const valRequired = (yup) => {\r\n\treturn yup.string().required(\"Vui lòng nhập\");\r\n};\r\n\r\nexport const valPhone = (yup) => {\r\n\tconst phoneRegExp =\r\n\t\t/^((\\\\+[1-9]{1,4}[ \\\\-]*)|(\\\\([0-9]{2,3}\\\\)[ \\\\-]*)|([0-9]{2,4})[ \\\\-]*)*?[0-9]{3,4}?[ \\\\-]*[0-9]{3,4}?$/;\r\n\treturn yup\r\n\t\t.string()\r\n\t\t.matches(phoneRegExp, \"Số điện thoại không hợp lệ\")\r\n\t\t.required(\"Không được để trống\");\r\n};\r\n","import React, { useState } from 'react';\r\n\r\nimport Select from 'react-select';\r\nimport { Controller } from 'react-hook-form';\r\nimport './input.less';\r\nimport _ from 'lodash';\r\nimport { Input, Typography } from 'antd';\r\n\r\nconst SelectSearch = (props) => {\r\n  let classErrors = props.className;\r\n  const [values, setValues] = useState([])\r\n\r\n  const renderErrorMessage = () => {\r\n    if (props.errors) {\r\n      let exists = Object.keys(props.errors).includes(props.name);\r\n      let mesError = props.errors[props.name]?.message;\r\n      classErrors = _.isEmpty(mesError) ? `${props.className} basic-single` : `${props.className} is-invalid`;\r\n\r\n      if (exists) {\r\n        return (\r\n          <span className=\"error-message invalid-feedback\">\r\n            {props.errors[props.name]?.message} {props?.label?.toLowerCase()}\r\n          </span>\r\n        );\r\n      }\r\n    }\r\n    return <></>;\r\n  };\r\n\r\n  const customStyles = {\r\n    control: (provided, state) => ({\r\n      ...provided,\r\n      borderColor: '#d9d9d9',\r\n      minHeight: (props.isMulti && values?.length > 2) ? 'none' : '32px',\r\n      height: (props.isMulti && values?.length > 2) ? 'none' : '32px',\r\n      minWidth: '204px',\r\n      boxShadow: state.isFocused ? null : null,\r\n    }),\r\n\r\n    valueContainer: (provided, state) => ({\r\n      ...provided,\r\n      height: (props.isMulti && values?.length > 2) ? 'none' : '30.297px',\r\n      padding: '0 6px',\r\n    }),\r\n\r\n    input: (provided, state) => ({\r\n      ...provided,\r\n      margin: '0px',\r\n    }),\r\n    indicatorSeparator: (state) => ({\r\n      display: 'none',\r\n    }),\r\n    indicatorsContainer: (provided, state) => ({\r\n      ...provided,\r\n      height: (props.isMulti && values?.length > 2) ? 'none' : '30px',\r\n    }),\r\n  };\r\n\r\n  const renderLabel = () => (\r\n    <>\r\n      {props?.label !== '' && (\r\n        <Typography.Text>\r\n          {props.isRequired && !props.isShowText && <span className=\"is-required\">* </span>}\r\n          {`${props.label} :`}\r\n        </Typography.Text>\r\n      )}\r\n    </>\r\n  );\r\n\r\n  const getValueByOption = (value) => {\r\n    let result = ''\r\n    if (!props.isMulti) {\r\n\r\n      if (_.isEmpty(props?.options)) {\r\n        result = ''\r\n      } else {\r\n        let option = props?.options.find((c) => c.value === value)\r\n        result = option ? option : ''\r\n      }\r\n    }\r\n\r\n\r\n    if (props.isMulti && value?.length > 0) {\r\n      if (_.isEmpty(props?.options)) {\r\n        result = []\r\n      } else {\r\n        let option = props.options.filter((c) => value.map(x => x.value).includes(c.value))\r\n        result = option ? option : []\r\n      }\r\n    }\r\n\r\n    return result\r\n\r\n  }\r\n\r\n  const renderInputOfText = (onChange, value, ref, name) => {\r\n    setValues(value)\r\n    if (props.isShowText) {\r\n      return (\r\n        <span className=\"ant-typography\">\r\n          <strong>\r\n            {\r\n              // have truong hop value la 0\r\n              props.options && value ? props.options.find((x) => x.value == value)?.label : ''\r\n            }\r\n          </strong>\r\n        </span>\r\n      );\r\n    }\r\n    return (\r\n      <Select\r\n        isMulti={props.isMulti}\r\n        name=\"colors\"\r\n        options={props?.options}\r\n        className={`select-custom ${classErrors}`}\r\n        styles={customStyles}\r\n        defaultValue={props.defaultValue}\r\n        placeholder=\"\"\r\n        isDisabled={props.isDisabled}\r\n        value={getValueByOption(value)}\r\n        onChange={(val) => {\r\n          if (props.isMulti) {\r\n            onChange(val);\r\n            if (props.onChange) {\r\n              props.onChange(val);\r\n            }\r\n          } else {\r\n            onChange(val.value);\r\n            if (props.onChange) {\r\n              props.onChange(val.value);\r\n            }\r\n          }\r\n\r\n        }}\r\n      />\r\n    );\r\n  };\r\n\r\n  const renderInput = () => (\r\n    <>\r\n      <div style={{ width: props.isTitleInline ? 'calc(100% - 150px)' : '100%' }}>\r\n        <Controller\r\n          control={props.control}\r\n          id={props.id}\r\n          name={props.name}\r\n          defaultValue={props.defaultValue}\r\n          render={({ field: { onChange, value, ref, name } }) => renderInputOfText(onChange, value, ref, name)}\r\n        />\r\n\r\n        <div className=\"ant-form-item-explain-error\">{renderErrorMessage()}</div>\r\n      </div>\r\n    </>\r\n  );\r\n  const renderLayoutTitleInline = () => {\r\n    if (props.isTitleInline) {\r\n      return (\r\n        <>\r\n          <Input.Group compact>\r\n            <div style={{ width: '150px' }}>{renderLabel()}</div>\r\n            {renderInput()}\r\n          </Input.Group>\r\n        </>\r\n      );\r\n    }\r\n    return (\r\n      <>\r\n        {renderLabel()}\r\n        {renderInput()}\r\n      </>\r\n    );\r\n  };\r\n\r\n  return <div style={{ paddingBottom: '20px' }}>{renderLayoutTitleInline()}</div>;\r\n};\r\n\r\nexport default SelectSearch;\r\n","/* eslint-disable react/prop-types */\r\nimport { Button, Col, Form, Input, Row, Modal, Select } from 'antd';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { getFieldsDropDowns } from 'services/fields/';\r\n\r\nconst Filter = (props) => {\r\n  const {  isOpen, handleClosed, title, onApplyFilter } = props;\r\n  const [form] = Form.useForm();\r\n  const [fields, setFields] = useState([]);\r\n\r\n  const onReset = () => {\r\n    form.resetFields();\r\n  };\r\n\r\n  const onFinish = (values) => {\r\n    onApplyFilter(values)\r\n    handleClosed();\r\n  };\r\n\r\n  useEffect(() => {\r\n    getFields();\r\n  }, []);\r\n\r\n  const getFields = () => {\r\n    getFieldsDropDowns().then(res => {\r\n      setFields(res?.data || []);\r\n    });\r\n   \r\n  };\r\n\r\n  const renderFormFilter = () => {\r\n    return (\r\n      <Form\r\n        id=\"filterForm\"\r\n        labelCol={{ span: 14 }}\r\n        wrapperCol={{ span: 23 }}\r\n        form={form}\r\n        layout=\"vertical\"\r\n        onFinish={onFinish}\r\n      >\r\n      <Row>\r\n        <Col span={24}>\r\n          <Row>\r\n            <Col span={24}>\r\n            <Form.Item\r\n                label=\"Lĩnh Vực\"\r\n                name=\"fields\"\r\n              >\r\n                 <Select>\r\n                    {fields &&\r\n                      fields.map((item) => (\r\n                        <Select.Option key={item.id} value={item.id}>\r\n                          {item.name}\r\n                        </Select.Option>\r\n                      ))}\r\n                  </Select>\r\n              </Form.Item>\r\n            </Col>\r\n         \r\n          </Row>\r\n        </Col>\r\n      </Row>\r\n    </Form>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <Modal\r\n      title={title}\r\n      open={isOpen}\r\n      onCancel={handleClosed}\r\n      width={500}\r\n      footer={[\r\n        <Button type=\"link\" form=\"filterForm\" key=\"back\" onClick={onReset}>\r\n          Bộ lọc mặc định\r\n        </Button>,\r\n        <Button form=\"filterForm\" key=\"submit\" type=\"primary\" htmlType=\"submit\">\r\n          Lọc\r\n        </Button>,\r\n      ]}\r\n    >\r\n\r\n     {renderFormFilter()}\r\n    </Modal>\r\n  );\r\n};\r\n\r\nFilter.propTypes = {};\r\n\r\nexport default Filter;\r\n","import * as api from '../../config/axios';\r\nexport const urlEndpointDealers = '/api/dealers/';\r\nexport const urlEndpointTableDealers = '/api/dealers';\r\nexport const urlEndpointTableDealersResult = '/api/dealers/dealersResult';\r\nexport const getDealersById = (id) => api.sendGet(urlEndpointDealers + id);\r\n\r\nexport const getTechnicalById = (id) => api.sendGet('/api/technical-requirement/' + id);\r\n\r\nexport const getDealerss = (data) => api.sendGet(urlEndpointDealers, data);\r\n\r\nexport const createDealers = (payload) =>\r\n  api.sendPost(urlEndpointDealers, {\r\n    id: payload.id,\r\n    input: payload,\r\n  });\r\n\r\nexport const updateDealers = (payload) => api.sendPost(urlEndpointDealers, payload);\r\n\r\nexport const deleteDealers = (payload) =>\r\n  api.sendDelete(urlEndpointDealers, {\r\n    data: { ids: payload },\r\n  });\r\n\r\n// export const dropdownDealerss = () => api.sendGet(urlEndpointDealers + 'dropdown', '');\r\n","export const MODE = {\r\n    CREATE: 1,\r\n    EDIT: 2,\r\n    DETAIL: 3\r\n}","export const getToDay = () => {\r\n  return new Date().toISOString().substring(0, 10)\r\n};","export const listResult = [\r\n    { value: 0, label: \"Đang thực hiện\", color: \"info\" },\r\n    { value: 1, label: \"Thành Công\", color: \"success\" },\r\n    { value: 2, label: \"Thất bại\", color: \"error\" }\r\n]\r\n\r\nexport const listResultTask = [\r\n    { value: 0, label: \"Chờ tiếp nhận\", color: \"warning\" },\r\n    { value: 1, label: \"Đang thực hiện\", color: \"info\" },\r\n    { value: 2, label: \"Từ chối\", color: \"error\" },\r\n    { value: 3, label: \"Hoàn thành\", color: \"success\" },\r\n    { value: 4, label: \"Thêm mới\", color: \"success\" }\r\n]\r\n\r\nexport const STATUS_TASK = {\r\n    CHO_TIEP_NHAN: 0,\r\n    DANG_THUC_HIEN: 1,\r\n    TU_CHOI: 2,\r\n    HOAN_THANH: 3,\r\n    THEM_MOI: 4\r\n}","import React from 'react';\r\nimport \"./status.less\"\r\n\r\nconst Status = (props) => {\r\n  const { text, color, bgColor, keys = 'success' } = props;\r\n  const listEnum =\r\n  {\r\n    success: {\r\n      color: \"green\",\r\n      backgroundColor: \"#b7eb8f\"\r\n    },\r\n    error: {\r\n      color: \"#f55442\",\r\n      backgroundColor: \"#ffccc7\"\r\n    },\r\n    info: {\r\n      color: \"#1890ff\",\r\n      backgroundColor: \"#91caff\",\r\n    },\r\n    warning: {\r\n      color: \"#f56a00\",\r\n      backgroundColor: \"#fccca7\",\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className='status-color-alert' style={{ color: listEnum[keys].color, backgroundColor: listEnum[keys].backgroundColor }}>\r\n      {text}\r\n    </div>\r\n\r\n  );\r\n};\r\n\r\nexport default Status;\r\n"],"sourceRoot":""}