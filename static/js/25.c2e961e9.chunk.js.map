{"version":3,"sources":["services/customer-requirement/index.js","pages/customer-requirement/index.js","common/components/Buttons/PrimaryButton.js","common/components/Buttons/DangerButton.js","common/components/Buttons/DefaultButton.js","common/components/Buttons/ButtonCancel.js","common/components/Buttons/ButtonDelete.js","common/components/Buttons/ButtonEdit.js","utils/format.js","utils/formatDate.js","components/Grid/controllers/reducer.js","components/Grid/controllers/constants.js","../node_modules/invariant/browser.js","common/components/Buttons/ButtonToolTip.js","utils/utils.js","components/Layout/PageWrapper.js","components/Grid/controllers/selectors.js","pages/home/header-page/index.js","components/Grid/controllers/actions.js","hooks/useTable.js","components/Grid/Grid.js","utils/common/checkStore.js","utils/common/reducerInjectors.js","utils/common/injectedReducers.js","services/customer/index.js","services/fields/index.js","pages/home/components/filter/filterCommon.js"],"names":["getCustomerReqById","id","api","TextArea","CustomerRequirement","useState","isLoading","setIsLoading","title","setTitle","dispatch","useDispatch","isOpen","setIsopen","useForm","form","customer","setCustomer","contactPeoples","setContactPeople","fileList","setFileList","filter","setFilter","readGrid","refresh","actions","columns","dataIndex","minWidth","render","values","recore","Text","formatDDMMYYYY","width","_","disabled","isAccessed","PER","YEU_CAU_KHACH_HANG_SUA","onClick","onClickOpenModal","handleCancel","resetFields","handleCreateCustomerRequirement","payload","input","result","isSuccess","message","success","SAVE_SUCCESS","error","handleDeleteCustomerRequirement","data","ids","then","res","DELETE_SUCCESS","catch","DELETE_ERROR","finally","record","setFieldsValue","requestDate","getDateFormat","useEffect","getCustomers","getCustomerDropdown","response","upFile","beforeUpload","file","YEU_CAU_KHACH_HANG_XEM","onCreate","handleDelete","confirm","icon","ExclamationCircleOutlined","content","okText","cancelText","onOk","confirmLoading","isFilter","onFilter","isShowActionAdd","YEU_CAU_KHACH_HANG_THEM","isShowActionDelete","YEU_CAU_KHACH_HANG_XOA","handleClosed","onApplyFilter","className","PageWrapper","Grid","urlEndpoint","open","onCancel","footer","key","type","htmlType","loading","layout","labelCol","span","wrapperCol","onFinish","updateValue","customerId","peopleRepresentId","phone","trim","position","address","projectName","sourceBudget","capital","descriptionRequest","dataRefer","Item","hidden","label","name","rules","required","allowClear","onChange","e","val","getCustomerById","x","map","item","Option","placeholder","format","defaultValue","today","rows","UploadOutlined","PrimaryButton","props","size","DangerButton","danger","DefaultButton","ButtonCancel","ButtonDelete","rest","DeleteOutlined","ButtonEdit","EditOutlined","formatCurrency","number","Number","isNaN","Intl","NumberFormat","style","currency","replaceAll","formatCurrencyInput","numberString","formatDateYMD","date","myDate","moment","isMoment","d","isValid","formatMMDDYYYY","DateTimeToDate","dateString","Date","toISOString","split","initialState","idSelections","detailSelections","gridViewReducer","state","action","produce","draft","types","SET_ITEM_ID_SELECTIONS","SET_ITEM_DETAIL_SELECTIONS","module","exports","condition","a","b","c","f","undefined","Error","args","argIndex","replace","framesToPop","ButtonTooltip","wrap","tip","color","children","mapToSelectOption","value","permissionsAction","permissionsList","JSON","parse","localStorage","getItem","permissions","length","includes","classnames","selectGridView","tableView","Search","HeaderPage","labelPrimaryBtn","onPressPrimaryBtn","isHideAction","itemSelections","useSelector","createSelector","globalState","justify","align","Title","level","flex","textAlign","display","flexWrap","gap","justifyContent","onSearch","text","updateSearch","enterButton","FilterOutlined","PlusCircleOutlined","BarsOutlined","setItemIdSelections","items","setItemDetailSelections","ActionKind","currentPage","totalPage","totalElement","pageSize","searchText","sort","field","order","store","React","createContext","setState","setPage","setTotalPage","setData","setTotalElement","setLoading","setPageSize","Provider","TableProvider","initState","useReducer","useCallback","page","total","setSearchText","setSort","withTable","WrappedComponent","ComponentWithTableProvider","expandedRowRender","handleGetDetailSelections","handleGetSelections","hasRowSelected","isHidePagination","rowKey","shouldSaveToStore","shouldShowTotal","useInjectReducer","reducer","global","refreshGrid","filters","idsSelection","setIdsSelection","useContext","totalAmount","setTotalAmount","getSortItem","sorted","push","fieldName","isAscending","fetchData","params","pageIndex","fieldId","fields","results","records","err","console","log","gridViewActions","isArray","stringify","rowSelection","selectedRowKeys","selectedRows","clsx","dataSource","pagination","sorter","current","bordered","defaultPageSize","showSizeChanger","pageSizeOptions","showTotal","expandable","scroll","summary","summaryNumberCol","Summary","Row","index","Cell","checkStore","shape","isFunction","subscribe","getState","replaceReducer","runSaga","injectedReducers","isObject","injectedSagas","invariant","conformsTo","injectReducerFactory","isString","isEmpty","Reflect","has","createReducer","getInjectors","injectReducer","context","ReactReduxContext","urlEndpointTableCustomer","createCustomer","updateCustomer","deleteCustomers","urlEndpointCustomer","getFieldsDropDowns","urlEndpointField","Filter","setFields","getFields"],"mappings":"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","file":"static/js/25.c2e961e9.chunk.js","sourcesContent":["/** @format */\r\n\r\nimport * as api from '../../config/axios';\r\nexport const urlEndpointCustomerRequirement = '/api/orders/';\r\nexport const urlEndpointTableCustomerRequirement = '/api/orders';\r\n\r\nexport const getCustomerReqById = (id) => api.sendGet(urlEndpointCustomerRequirement + id);\r\n\r\nexport const getCustomersReq = (data) => api.sendGet(urlEndpointCustomerRequirement, data);\r\n\r\nexport const createCustomerReq = (payload) =>\r\n  api.sendPost(urlEndpointCustomerRequirement, {\r\n    id: payload.id,\r\n    input: payload,\r\n  });\r\n\r\nexport const updateCustomerReq = (payload) => api.sendPost(urlEndpointCustomerRequirement, payload);\r\n\r\nexport const deleteCustomersReq = (payload) =>\r\n  api.sendDelete(urlEndpointCustomerRequirement, {\r\n    data: { ids: payload },\r\n  });\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Button, Modal, Form, Input, message, Select, Col, Row, Upload, Typography, DatePicker } from 'antd';\r\nimport { ExclamationCircleOutlined } from '@ant-design/icons';\r\nimport { useDispatch } from 'react-redux';\r\nimport { UploadOutlined } from '@ant-design/icons';\r\n\r\nimport { ButtonEdit } from 'common/components/Buttons';\r\nimport Grid from 'components/Grid';\r\nimport HeaderPage from 'pages/home/header-page';\r\nimport PageWrapper from 'components/Layout/PageWrapper';\r\n\r\nimport { DELETE_ERROR, DELETE_SUCCESS, SAVE_SUCCESS } from 'utils/common/messageContants';\r\nimport { urlEndpointTableCustomerRequirement } from 'services/customer-requirement';\r\nimport { createCustomerReq, deleteCustomersReq, getCustomerReqById } from 'services/customer-requirement';\r\nimport { getCustomerDropdown, getCustomerById } from 'services/customer/index';\r\nimport * as actions from 'redux/global/actions';\r\nimport './style.less';\r\nimport Filter from 'pages/home/components/filter/filterCommon';\r\nimport { formatDDMMYYYY, today, getDateFormat } from 'utils/formatDate';\r\nimport { isAccessed } from 'utils/utils';\r\nimport { PER } from 'common/enum';\r\n\r\nconst { TextArea } = Input;\r\nconst CustomerRequirement = () => {\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [title, setTitle] = useState('');\r\n  const dispatch = useDispatch();\r\n  const [isOpen, setIsopen] = useState(false);\r\n  const [form] = Form.useForm();\r\n  const [customer, setCustomer] = useState([]);\r\n  const [contactPeoples, setContactPeople] = useState([]);\r\n  const [fileList, setFileList] = useState([]);\r\n  const [filter, setFilter] = useState({\r\n    isOpen: false,\r\n  });\r\n\r\n  const readGrid = (refresh) => {\r\n    dispatch(actions.refreshGrid(refresh));\r\n  };\r\n\r\n  const columns = [\r\n    {\r\n      title: 'Khách hàng',\r\n      dataIndex: ['customer', 'name'],\r\n      minWidth: '300px',\r\n    },\r\n    {\r\n      title: 'Ngày yêu cầu',\r\n      dataIndex: 'requestDate',\r\n      minWidth: '300px',\r\n      render: (values, recore) => <Typography.Text>{values && formatDDMMYYYY(values)}</Typography.Text>,\r\n    },\r\n    {\r\n      title: 'Nội dung yêu cầu',\r\n      dataIndex: 'descriptionRequest',\r\n      minWidth: '300px',\r\n    },\r\n    {\r\n      title: 'Dự toán kinh phí',\r\n      dataIndex: 'sourceBudget',\r\n      minWidth: '200px',\r\n    },\r\n    {\r\n      title: 'Nguồn vốn',\r\n      dataIndex: 'capital',\r\n      minWidth: '200px',\r\n    },\r\n    {\r\n      title: '',\r\n      dataIndex: 'action',\r\n      width: '30px',\r\n      render: (_, values) => <ButtonEdit disabled={!isAccessed(PER.YEU_CAU_KHACH_HANG_SUA)} onClick={() => onClickOpenModal(values, 'Chỉnh sửa yêu cầu khách hàng')} />,\r\n    },\r\n  ];\r\n\r\n  const handleCancel = () => {\r\n    form.resetFields();\r\n    setIsopen(false);\r\n  };\r\n\r\n  const finishAction = () => {\r\n    handleCancel();\r\n    readGrid(true);\r\n  };\r\n\r\n  const onFinish = (values) => {\r\n    // Remove spaces on first or last string\r\n    let updateValue = {\r\n      customerId: values?.customerId,\r\n      peopleRepresentId: values?.peopleRepresentId,\r\n      phone: values?.phone?.trim(),\r\n      position: values?.position?.trim(),\r\n      address: values?.address?.trim(),\r\n      projectName: values?.projectName?.trim(),\r\n      sourceBudget: values?.sourceBudget?.trim(),\r\n      capital: values?.capital?.trim(),\r\n      descriptionRequest: values?.descriptionRequest?.trim(),\r\n      dataRefer: values?.dataRefer?.trim(),\r\n      requestDate: values?.requestDate,\r\n    };\r\n    if (values.id) {\r\n      updateValue = { ...updateValue, id: values?.id };\r\n      handleCreateCustomerRequirement(updateValue);\r\n    } else {\r\n      handleCreateCustomerRequirement(updateValue);\r\n    }\r\n  };\r\n\r\n  const handleCreateCustomerRequirement = async (values) => {\r\n    setIsLoading(true);\r\n    const result = await createCustomerReq(values);\r\n    if (result && result.isSuccess) {\r\n      finishAction();\r\n      message.success(SAVE_SUCCESS);\r\n    } else {\r\n      message.error(result.message);\r\n    }\r\n    setIsLoading(false);\r\n  };\r\n\r\n  const handleDeleteCustomerRequirement = (values) => {\r\n    setIsLoading(true);\r\n\r\n    deleteCustomersReq(values)\r\n      .then((res) => {\r\n        if (res.isSuccess) {\r\n          message.success(DELETE_SUCCESS);\r\n          readGrid(true);\r\n        } else {\r\n          message.error(res.message);\r\n        }\r\n      })\r\n      .catch(() => {\r\n        message.error(DELETE_ERROR);\r\n      })\r\n      .finally(() => {\r\n        setIsLoading(true);\r\n      });\r\n  };\r\n\r\n  const onClickOpenModal = (record = {}, title) => {\r\n    if (record?.id) {\r\n      getCustomerReqById(record?.id)\r\n        .then((res) => {\r\n          if (res.isSuccess) {\r\n            setTitle(title);\r\n            setIsopen(true);\r\n            setContactPeople(res.data.customer.contactPeoples);\r\n            form.setFieldsValue({ ...res.data, requestDate: getDateFormat(res?.data?.requestDate) });\r\n          }\r\n        })\r\n        .finally(() => {\r\n          setIsLoading(false);\r\n        });\r\n    } else {\r\n      setTitle(title);\r\n      setIsopen(true);\r\n    }\r\n  };\r\n\r\n  const onClickDelete = (values) => {\r\n    Modal.confirm({\r\n      title: 'Xác Nhận',\r\n      icon: <ExclamationCircleOutlined />,\r\n      content: 'Bạn có chắc chắn muốn xóa dòng dữ liệu đã chọn?',\r\n      okText: 'Xác Nhận',\r\n      cancelText: 'Hủy',\r\n      onOk: () => handleDeleteCustomerRequirement(values),\r\n      confirmLoading: isLoading,\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    getCustomers();\r\n  }, [isOpen]);\r\n\r\n  const getCustomers = async () => {\r\n    const response = await getCustomerDropdown();\r\n    setCustomer(response?.data || []);\r\n  };\r\n\r\n  const onChangeCustomer = (val) => {\r\n    getCustomerById(val).then((x) => {\r\n      setContactPeople(x.data.contactPeoples);\r\n      form.setFieldsValue({ phone: x.data.phone, address: x.data.address, position: x.data.position });\r\n    });\r\n  };\r\n\r\n  const upFile = {\r\n    beforeUpload: (file) => {\r\n      setFileList([...fileList, file]);\r\n      return false;\r\n    },\r\n    fileList,\r\n  };\r\n\r\n  const renderFilter = () => (\r\n    <Filter\r\n      isOpen={filter.isOpen}\r\n      title={'Lọc yêu cầu khách hàng'}\r\n      handleClosed={() => setFilter({ isOpen: false })}\r\n      onApplyFilter={(values) => {\r\n        dispatch(actions.filters(values));\r\n      }}\r\n    />\r\n  );\r\n\r\n  return (\r\n    <>\r\n      {isAccessed(PER.YEU_CAU_KHACH_HANG_XEM) && (\r\n        <div>\r\n          <HeaderPage\r\n            title=\"YÊU CẦU KHÁCH HÀNG\"\r\n            actions=\"default\"\r\n            onCreate={() => onClickOpenModal({}, 'Thêm mới yêu cầu khách hàng')}\r\n            handleDelete={onClickDelete}\r\n            isFilter\r\n            onFilter={() => setFilter({ isOpen: true })}\r\n            isShowActionAdd={isAccessed(PER.YEU_CAU_KHACH_HANG_THEM)}\r\n            isShowActionDelete={isAccessed(PER.YEU_CAU_KHACH_HANG_XOA)}\r\n          />\r\n          {renderFilter()}\r\n          <div className=\"main__application\">\r\n            <PageWrapper>\r\n              <Grid urlEndpoint={urlEndpointTableCustomerRequirement} columns={columns} />\r\n            </PageWrapper>\r\n          </div>\r\n          <Modal\r\n            title={title}\r\n            open={isOpen}\r\n            form={form}\r\n            width={800}\r\n            onCancel={handleCancel}\r\n            footer={[\r\n              <Button form=\"myForm\" key=\"back\" onClick={handleCancel}>\r\n                Hủy\r\n              </Button>,\r\n              <Button form=\"myForm\" key=\"submit\" type=\"primary\" htmlType=\"submit\" loading={isLoading}>\r\n                Lưu\r\n              </Button>,\r\n            ]}\r\n          >\r\n            <Form\r\n              id=\"myForm\"\r\n              layout=\"vertical\"\r\n              form={form}\r\n              labelCol={{ span: 14 }}\r\n              wrapperCol={{ span: 23 }}\r\n              onFinish={onFinish}\r\n            >\r\n              <Row>\r\n                <Col span={12}>\r\n                  <Form.Item hidden={true} label=\"id\" name=\"id\" />\r\n                  <Form.Item\r\n                    label=\"Khách hàng\"\r\n                    name=\"customerId\"\r\n                    rules={[{ required: true, message: 'Khách hàng không được bỏ trống!' }]}\r\n                  >\r\n                    <Select allowClear onChange={(e) => onChangeCustomer(e)}>\r\n                      {customer &&\r\n                        customer.map((item) => (\r\n                          <Select.Option key={item.id} values={item.id}>\r\n                            {item.name}\r\n                          </Select.Option>\r\n                        ))}\r\n                    </Select>\r\n                  </Form.Item>\r\n                </Col>\r\n                <Col span={12}>\r\n                  <Form.Item\r\n                    label=\"Người đại diện\"\r\n                    name=\"peopleRepresentId\"\r\n                    rules={[{ required: true, message: 'Người đại diện không được bỏ trống!' }]}\r\n                  >\r\n                    <Select allowClear>\r\n                      {contactPeoples &&\r\n                        contactPeoples.map((item) => (\r\n                          <Select.Option key={item.id} values={item.id}>\r\n                            {item.name}\r\n                          </Select.Option>\r\n                        ))}\r\n                    </Select>\r\n                  </Form.Item>\r\n                </Col>\r\n              </Row>\r\n              <Row>\r\n                <Col span={12}>\r\n                  <Form.Item label=\"Số điện thoại\" name=\"phone\">\r\n                    <Input />\r\n                  </Form.Item>\r\n                </Col>\r\n                <Col span={12}>\r\n                  <Form.Item label=\"Chức vụ\" name=\"position\">\r\n                    <Input />\r\n                  </Form.Item>\r\n                </Col>\r\n              </Row>\r\n              <Row>\r\n                <Col span={24} className=\"custom-width\">\r\n                  <Form.Item label=\"Địa chỉ\" name=\"address\">\r\n                    <Input />\r\n                  </Form.Item>\r\n                </Col>\r\n              </Row>\r\n              <Row>\r\n                <Col span={12}>\r\n                  <Form.Item label=\"Ngày yêu cầu\" name=\"requestDate\">\r\n                    <DatePicker placeholder=\"Chọn ngày\" format={formatDDMMYYYY} defaultValue={today()} />\r\n                  </Form.Item>\r\n                </Col>\r\n              </Row>\r\n              <Row>\r\n                <Col span={24} className=\"custom-width\">\r\n                  <Form.Item\r\n                    label=\"Tên dự án\"\r\n                    name=\"projectName\"\r\n                    rules={[{ required: true, message: 'Tên dự án không được bỏ trống!' }]}\r\n                  >\r\n                    <Input />\r\n                  </Form.Item>\r\n                </Col>\r\n              </Row>\r\n              <Row>\r\n                <Col span={12}>\r\n                  <Form.Item label=\"Dự toán kinh phí\" name=\"sourceBudget\">\r\n                    <Input />\r\n                  </Form.Item>\r\n                </Col>\r\n                <Col span={12}>\r\n                  <Form.Item label=\"Nguồn Vốn\" name=\"capital\">\r\n                    <Input />\r\n                  </Form.Item>\r\n                </Col>\r\n              </Row>\r\n              <Row>\r\n                <Col span={24} className=\"custom-width\">\r\n                  <Form.Item label=\"Nội dung yêu cầu\" name=\"descriptionRequest\">\r\n                    <TextArea rows={2} />\r\n                  </Form.Item>\r\n                </Col>\r\n              </Row>\r\n              <Row>\r\n                <Form.Item>\r\n                  <Upload {...upFile}>\r\n                    <Button icon={<UploadOutlined />}>File đính kèm</Button>\r\n                  </Upload>\r\n                </Form.Item>\r\n              </Row>\r\n              <Row>\r\n                <Col span={24} className=\"custom-width\">\r\n                  <Form.Item label=\"Dữ liệu tham khảo\" name=\"dataRefer\">\r\n                    <TextArea rows={2} />\r\n                  </Form.Item>\r\n                </Col>\r\n              </Row>\r\n            </Form>\r\n          </Modal>\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default CustomerRequirement;\r\n","import React from 'react';\r\nimport { Button } from 'antd';\r\nfunction PrimaryButton(props) {\r\n  return <Button type=\"primary\" size=\"small\" {...props} />;\r\n}\r\n\r\nPrimaryButton.propTypes = {};\r\n\r\nexport default PrimaryButton;\r\n","import React from 'react';\r\nimport { Button } from 'antd';\r\nfunction DangerButton(props) {\r\n  return <Button danger size=\"small\" {...props} />;\r\n}\r\n\r\nDangerButton.propTypes = {};\r\n\r\nexport default DangerButton;\r\n","import React from 'react';\r\nimport { Button } from 'antd';\r\nfunction DefaultButton(props) {\r\n  return <Button type=\"default\" size=\"small\" {...props} />;\r\n}\r\n\r\nDefaultButton.propTypes = {};\r\n\r\nexport default DefaultButton;\r\n","import React from 'react';\r\nimport DefaultButton from './PrimaryButton';\r\nimport { StopOutlined } from '@ant-design/icons';\r\n\r\nfunction ButtonCancel({ title = 'Thêm mới', ...rest }) {\r\n  return (\r\n    <DefaultButton icon={<StopOutlined />} {...rest}>\r\n      {title}\r\n    </DefaultButton>\r\n  );\r\n}\r\n\r\nButtonCancel.propTypes = {};\r\n\r\nexport default ButtonCancel;\r\n","import React from 'react';\r\nimport DangerButton from './DangerButton';\r\nimport { DeleteOutlined } from '@ant-design/icons';\r\n\r\nfunction ButtonDelete({ title = '', ...rest }) {\r\n  return (\r\n    <DangerButton icon={<DeleteOutlined />} {...rest}>\r\n      {title}\r\n    </DangerButton>\r\n  );\r\n}\r\n\r\nButtonDelete.propTypes = {};\r\n\r\nexport default ButtonDelete;\r\n","import React from 'react';\r\nimport { EditOutlined } from '@ant-design/icons';\r\nimport DefaultButton from './DefaultButton';\r\n\r\nfunction ButtonEdit({ title = '', ...rest }) {\r\n  return (\r\n    <DefaultButton icon={<EditOutlined />} {...rest}>\r\n      {title}\r\n    </DefaultButton>\r\n  );\r\n}\r\n\r\nButtonEdit.propTypes = {};\r\n\r\nexport default ButtonEdit;\r\n","import moment from \"moment\";\r\n\r\nexport const formatCurrency = (number) => {\r\n  if (Number.isNaN(number) || !number || number === null) {\r\n    number = 0;\r\n  }\r\n  let vnd = new Intl.NumberFormat('vi-VN', {\r\n    style: 'currency',\r\n    currency: 'VND',\r\n  });\r\n  return vnd.format(number).replaceAll('₫', '');\r\n};\r\n\r\nexport const formatCurrencyInput = (numberString) => {\r\n  let number = numberString.replaceAll('.', '');\r\n  return Number(number);\r\n};\r\n\r\nexport const formatDateYMD = (date) => {\r\n  let myDate = moment(date);\r\n  return moment.isMoment(myDate) ? myDate?.format('YYYY-MM-DD') : myDate\r\n}\r\n","import moment from 'moment';\r\n\r\nexport const formatMDY = (data) => (data ? window.moment.utc(data).local().format('MM/DD/YYYY') : '');\r\n\r\nexport const customFormat = (data, format) => {\r\n  const date = window.moment.utc(data).local();\r\n  return date.isValid() ? date.format(format) : '';\r\n};\r\n\r\nexport const getDateFormat = (date) => {\r\n  const d = moment(date);\r\n  return date && d.isValid() ? d : '';\r\n};\r\n\r\nexport const startDMY = (data, type) => moment(data).startOf(type).toString();\r\n\r\nexport const endDMY = (data, type) => moment(data).endOf(type).toString();\r\n\r\nexport const formatMDYWithParam = (param) => (param && param.value ? formatMDY(param.value) : '');\r\nexport const formatMMDDYYYY = (data) => (data ? moment(data).format('MM/DD/YYYY') : '');\r\nexport const formatDDMMYYYY = (data) => (data ? moment(data).format('DD/MM/YYYY') : '');\r\n\r\nexport const formatTime = (data) => (data ? moment(data).format('HH:mm A') : '');\r\n\r\nexport const formatFullTime = (data) => (data ? moment(data).format('MM/DD/YYYY hh:mm A') : '');\r\n\r\nexport const exportToChatTime = (isoDate) => {\r\n  if (!isoDate) return;\r\n  const diff = moment(isoDate).diff(new Date(), 'hours');\r\n\r\n  let result;\r\n\r\n  if (-diff < 10) {\r\n    result = window.moment(isoDate).fromNow();\r\n  }\r\n\r\n  if (-diff >= 10) {\r\n    result = window.moment(isoDate).calendar();\r\n  }\r\n\r\n  return result;\r\n};\r\n\r\nexport const formattedFullTime = (data) => moment(data).format('YYYY-MM-DDTHH:mm:ss[Z]');\r\n\r\nexport const startISOTime = (data, typeView) => moment(data).startOf(typeView).toISOString();\r\n\r\nexport const endISOTime = (data, typeView) => moment(data).endOf(typeView).toISOString();\r\n\r\nexport const convertToISOTime = (data) => moment(data).toISOString();\r\n\r\nexport const getPreviousDays = (number) => moment().subtract(number, 'days');\r\nexport const getPrevious30Days = () => getPreviousDays(30);\r\n\r\nexport const today = () => moment();\r\n\r\n\r\nexport const DateTimeToDate = (dateString) => {\r\n  if (!dateString) return null\r\n\r\n  const date = new Date(dateString);\r\n  const formattedDate = date.toISOString().split('T')[0];\r\n  return formattedDate\r\n}\r\n\r\n","import produce from 'immer';\r\nimport * as types from './constants';\r\n\r\n// initial state\r\nexport const initialState = {\r\n  idSelections: [],\r\n  detailSelections: [],\r\n};\r\n\r\nconst gridViewReducer = (state = initialState, action) =>\r\n  produce(state, (draft) => {\r\n    switch (action.type) {\r\n      case types.SET_ITEM_ID_SELECTIONS:\r\n        draft.idSelections = action.payload;\r\n        break;\r\n      case types.SET_ITEM_DETAIL_SELECTIONS:\r\n        draft.detailSelections = action.payload;\r\n        break;\r\n    }\r\n  });\r\n\r\nexport default gridViewReducer;\r\n","export const SET_ITEM_ID_SELECTIONS = 'SET_ITEM_ID_SELECTIONS';\r\nexport const SET_ITEM_DETAIL_SELECTIONS = 'SET_ITEM_DETAIL_SELECTIONS';\r\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\n/**\n * Use invariant() to assert state which your program assumes to be true.\n *\n * Provide sprintf-style format (only %s is supported) and arguments\n * to provide information about what broke and what you were\n * expecting.\n *\n * The invariant message will be stripped in production, but the invariant\n * will remain to ensure logic does not differ in production.\n */\n\nvar invariant = function(condition, format, a, b, c, d, e, f) {\n  if (process.env.NODE_ENV !== 'production') {\n    if (format === undefined) {\n      throw new Error('invariant requires an error message argument');\n    }\n  }\n\n  if (!condition) {\n    var error;\n    if (format === undefined) {\n      error = new Error(\n        'Minified exception occurred; use the non-minified dev environment ' +\n        'for the full error message and additional helpful warnings.'\n      );\n    } else {\n      var args = [a, b, c, d, e, f];\n      var argIndex = 0;\n      error = new Error(\n        format.replace(/%s/g, function() { return args[argIndex++]; })\n      );\n      error.name = 'Invariant Violation';\n    }\n\n    error.framesToPop = 1; // we don't care about invariant's own frame\n    throw error;\n  }\n};\n\nmodule.exports = invariant;\n","import { Button, Divider, Space, Tooltip } from 'antd';\r\nimport React from 'react';\r\nconst ButtonTooltip = (props) => (\r\n  <>\r\n    <Space wrap>\r\n      <Tooltip title={props?.tip} color=\"blue\" key=\"blue\">\r\n        {props.children}\r\n      </Tooltip>\r\n    </Space>\r\n  </>\r\n);\r\nexport default ButtonTooltip;\r\n\r\n\r\n\r\n\r\n// import React from 'react';\r\n// import { Button } from 'antd';\r\n\r\n// function ButtonToolTip(props) {\r\n//   return <Button type=\"primary\" size=\"small\" {...props} />;\r\n// }\r\n\r\n// ButtonToolTip.propTypes = {};\r\n\r\n// export default ButtonToolTip;\r\n","export const mapToSelectOption = (data) => {\r\n  const options = data.map((x) => {\r\n    return {\r\n      value: x.id,\r\n      label: x.name,\r\n    };\r\n  });\r\n  return options\r\n};\r\n\r\nexport const isAccessed = (permissionsAction) => {\r\n  if (!permissionsAction) return\r\n\r\n  const userInfo = JSON.parse(localStorage.getItem('userInfo'))\r\n  const permissionsList = userInfo.permissions\r\n  if (permissionsList && permissionsList.length > 0) {\r\n    return permissionsList.includes(permissionsAction)\r\n  }\r\n\r\n  return false\r\n}\r\n","import React from 'react';\r\nimport classnames from 'classnames';\r\n\r\nimport './PageWrapper.less';\r\n\r\nfunction PageWrapper({ className, children, ...rest }) {\r\n  return (\r\n    <div className={classnames('section-wrapper', className)} {...rest}>\r\n      {children}\r\n    </div>\r\n  );\r\n}\r\n\r\nPageWrapper.propTypes = {};\r\n\r\nexport default PageWrapper;\r\n","import { createSelector } from 'reselect';\r\nimport { initialState } from './reducer';\r\n\r\nconst selectGridView = (state) => (state && state.tableView) || initialState;\r\n\r\nconst selectGridIdSelections = () => createSelector(selectGridView, (globalState) => globalState.idSelections);\r\n\r\nconst selectGridDetailSelections = () => createSelector(selectGridView, (globalState) => globalState.detailSelections);\r\n\r\nexport { selectGridView, selectGridIdSelections, selectGridDetailSelections };\r\n","import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Row, Col, Input, Button, Typography } from 'antd';\r\nimport { PlusCircleOutlined, BarsOutlined, FilterOutlined } from '@ant-design/icons';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { ButtonDelete, PrimaryButton } from 'common/components/Buttons';\r\n\r\nimport * as gridViewSelectors from 'components/Grid/controllers/selectors';\r\nimport { updateSearch } from 'redux/global/actions';\r\nimport './header.less';\r\n\r\nconst { Search } = Input;\r\n\r\nconst HeaderPage = ({\r\n  title = '',\r\n  actions = 'default',\r\n  onCreate,\r\n  handleDelete,\r\n  labelPrimaryBtn = \"\",\r\n  onPressPrimaryBtn = () => { },\r\n  isFilter = false,\r\n  onFilter,\r\n  isHideAction = false,\r\n  isShowActionDelete = true,\r\n  isShowActionAdd = true,\r\n}) => {\r\n  const dispatch = useDispatch();\r\n  const itemSelections = useSelector(gridViewSelectors.selectGridIdSelections());\r\n\r\n  const onSearch = (text) => {\r\n    dispatch(updateSearch(text));\r\n  };\r\n\r\n\r\n  return (\r\n    <div className=\"header-page\">\r\n      <Row className=\"wrapper\" justify=\"space-around\" align=\"center\">\r\n        <Col className=\"header-page__title\">\r\n          <Typography.Title level={3}>{title}</Typography.Title>\r\n        </Col>\r\n        <Col flex={1} style={{ textAlign: 'right' }}>\r\n          {actions === 'default' ? (\r\n            <Row\r\n              style={{\r\n                display: 'flex',\r\n                flexWrap: 'nowrap',\r\n                gap: '16px',\r\n                justifyContent: 'end',\r\n              }}\r\n            >\r\n              <Search className=\"header-page__search\" placeholder=\"Tìm kiếm...\" onSearch={onSearch} enterButton />\r\n              {isFilter &&\r\n                (<Button type=\"primary\" onClick={() => onFilter()} icon={<FilterOutlined />}>\r\n                </Button>)\r\n              }\r\n              {isHideAction === false && (\r\n                <>\r\n                  {isShowActionAdd && (\r\n                    <Button type=\"primary\" onClick={() => onCreate()} icon={<PlusCircleOutlined />}>\r\n                      Thêm mới\r\n                    </Button>\r\n                  )}\r\n                  {!!labelPrimaryBtn && <PrimaryButton size=\"medium\" icon={<BarsOutlined />} onClick={onPressPrimaryBtn}>\r\n                    {labelPrimaryBtn}\r\n                  </PrimaryButton>}\r\n                  {isShowActionDelete && (\r\n                    <ButtonDelete\r\n                      size=\"medium\"\r\n                      onClick={() => handleDelete && handleDelete(itemSelections)}\r\n                      disabled={!itemSelections.length}\r\n                    >\r\n                      Xóa\r\n                    </ButtonDelete>\r\n                  )}\r\n                </>\r\n              )}\r\n            </Row>\r\n          ) : typeof actions === 'function' ? (\r\n            actions()\r\n          ) : null}\r\n        </Col>\r\n      </Row>\r\n    </div>\r\n  );\r\n};\r\n\r\nHeaderPage.propTypes = {\r\n  title: PropTypes.string,\r\n  actions: PropTypes.oneOfType([PropTypes.string, PropTypes.func, PropTypes.bool]),\r\n  onCreate: PropTypes.func,\r\n  handleDelete: PropTypes.func,\r\n  labelPrimaryBtn: PropTypes.string,\r\n  onPressPrimaryBtn: PropTypes.func,\r\n};\r\n\r\nexport default HeaderPage;\r\n","import * as types from './constants';\r\n\r\nexport function setItemIdSelections(items) {\r\n  return {\r\n    type: types.SET_ITEM_ID_SELECTIONS,\r\n    payload: items,\r\n  };\r\n}\r\nexport function setItemDetailSelections(items) {\r\n  return {\r\n    type: types.SET_ITEM_DETAIL_SELECTIONS,\r\n    payload: items,\r\n  };\r\n}\r\n","import React, { useContext, useReducer, useCallback } from 'react';\r\n\r\nconst ActionKind = {\r\n  SET_STATE: 'SET_STATE',\r\n  SET_DATA: 'SET_DATA',\r\n  SET_PAGE: 'SET_PAGE',\r\n  SET_TOTAL_PAGE: 'SET_TOTAL_PAGE',\r\n  SET_TOTAL_ELEMENT: 'SET_TOTAL_ELEMENT',\r\n  SET_LOADING: 'SET_LOADING',\r\n  SET_PAGESIZE: 'SET_PAGESIZE',\r\n  SET_SORT: 'SET_SORT',\r\n  SET_SEARCH_TEXT: 'SET_SEARCH_TEXT',\r\n};\r\n\r\nexport const initialState = {\r\n  data: [],\r\n  currentPage: 1,\r\n  totalPage: 1,\r\n  totalElement: 0,\r\n  pageSize: 10,\r\n  loading: false,\r\n  searchText: '',\r\n  sort: [\r\n    {\r\n      field: '',\r\n      order: '',\r\n    },\r\n  ],\r\n};\r\n\r\nconst store = React.createContext({\r\n  state: initialState,\r\n  setState: () => null,\r\n  setPage: () => null,\r\n  setTotalPage: () => null,\r\n  setData: () => null,\r\n  setTotalElement: () => null,\r\n  setLoading: () => null,\r\n  setPageSize: () => null,\r\n});\r\n\r\nconst { Provider } = store;\r\n\r\nconst TableProvider = ({ children, initState }) => {\r\n  const [state, dispatch] = useReducer(\r\n    (state, action) => {\r\n      switch (action.type) {\r\n        case ActionKind.SET_STATE:\r\n          return {\r\n            ...state,\r\n            ...action.payload,\r\n          };\r\n        case ActionKind.SET_DATA:\r\n          return {\r\n            ...state,\r\n            data: action.payload.data,\r\n          };\r\n        case ActionKind.SET_PAGE:\r\n          return {\r\n            ...state,\r\n            currentPage: action.payload.currentPage,\r\n          };\r\n        case ActionKind.SET_TOTAL_PAGE:\r\n          return {\r\n            ...state,\r\n            totalPage: action.payload.totalPage,\r\n          };\r\n        case ActionKind.SET_TOTAL_ELEMENT:\r\n          return {\r\n            ...state,\r\n            totalElement: action.payload.totalElement,\r\n          };\r\n        case ActionKind.SET_LOADING:\r\n          return {\r\n            ...state,\r\n            loading: action.payload.loading,\r\n          };\r\n        case ActionKind.SET_PAGESIZE:\r\n          return {\r\n            ...state,\r\n            pageSize: action.payload.pageSize,\r\n          };\r\n        case ActionKind.SET_SEARCH_TEXT:\r\n          return {\r\n            ...state,\r\n            searchText: action.payload.searchText,\r\n          };\r\n        case ActionKind.SET_SORT:\r\n          return {\r\n            ...state,\r\n            sort: action.payload.sort,\r\n          };\r\n        default:\r\n          return { ...state };\r\n      }\r\n    },\r\n    { ...initialState, ...initState },\r\n  );\r\n\r\n  const setState = useCallback((state) => {\r\n    dispatch({\r\n      type: ActionKind.SET_STATE,\r\n      payload: state,\r\n    });\r\n  }, []);\r\n\r\n  const setPage = useCallback((page) => {\r\n    dispatch({\r\n      type: ActionKind.SET_PAGE,\r\n      payload: {\r\n        currentPage: page,\r\n      },\r\n    });\r\n  }, []);\r\n\r\n  const setData = useCallback((data) => {\r\n    dispatch({\r\n      type: ActionKind.SET_DATA,\r\n      payload: {\r\n        data: data,\r\n      },\r\n    });\r\n  }, []);\r\n\r\n  const setTotalPage = useCallback((total) => {\r\n    dispatch({\r\n      type: ActionKind.SET_TOTAL_PAGE,\r\n      payload: {\r\n        totalPage: total,\r\n      },\r\n    });\r\n  }, []);\r\n\r\n  const setLoading = useCallback((val) => {\r\n    dispatch({\r\n      type: ActionKind.SET_LOADING,\r\n      payload: {\r\n        loading: val,\r\n      },\r\n    });\r\n  }, []);\r\n\r\n  const setTotalElement = useCallback((total) => {\r\n    dispatch({\r\n      type: ActionKind.SET_TOTAL_ELEMENT,\r\n      payload: {\r\n        totalElement: total,\r\n      },\r\n    });\r\n  }, []);\r\n\r\n  const setPageSize = useCallback((size) => {\r\n    dispatch({\r\n      type: ActionKind.SET_PAGESIZE,\r\n      payload: {\r\n        pageSize: size,\r\n      },\r\n    });\r\n  }, []);\r\n  const setSearchText = useCallback((searchText) => {\r\n    dispatch({\r\n      type: ActionKind.SET_SEARCH_TEXT,\r\n      payload: {\r\n        searchText: searchText,\r\n      },\r\n    });\r\n  }, []);\r\n  const setSort = useCallback((sort) => {\r\n    dispatch({\r\n      type: ActionKind.SET_SORT,\r\n      payload: {\r\n        sort: sort,\r\n      },\r\n    });\r\n  }, []);\r\n\r\n  return (\r\n    <Provider\r\n      value={{\r\n        state,\r\n        setState,\r\n        setPage,\r\n        setTotalPage,\r\n        setData,\r\n        setLoading,\r\n        setTotalElement,\r\n        setPageSize,\r\n        setSearchText,\r\n        setSort,\r\n      }}\r\n    >\r\n      {children}\r\n    </Provider>\r\n  );\r\n};\r\n\r\nexport default TableProvider;\r\n\r\n// HOC to wrap component with TableProvider\r\nexport function withTable(WrappedComponent, initState = initialState) {\r\n  const ComponentWithTableProvider = (props) => (\r\n    <TableProvider initState={initState}>\r\n      <WrappedComponent {...props} />\r\n    </TableProvider>\r\n  );\r\n  return ComponentWithTableProvider;\r\n}\r\n\r\nexport const useTable = () => useContext(store);\r\n","import React, { useEffect, useCallback, useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Table } from 'antd';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport clsx from 'classnames';\r\nimport { isArray } from 'lodash';\r\n\r\nimport * as api from 'config/axios';\r\nimport * as actions from 'redux/global/actions';\r\nimport reducer from './controllers/reducer';\r\n// import saga from './controllers/saga';\r\nimport * as gridViewActions from './controllers/actions';\r\nimport { useInjectReducer } from 'utils/common/injectedReducers';\r\n// import { useInjectSaga } from 'utils/common/injectSaga';\r\nimport { useTable, withTable } from 'hooks/useTable';\r\n\r\nimport './Grid.less';\r\nimport { formatCurrency } from 'utils/format';\r\n\r\nconst key = 'tableView';\r\n\r\nconst Grid = ({\r\n  className = '',\r\n  columns,\r\n  data,\r\n  expandedRowRender,\r\n  handleGetDetailSelections,\r\n  handleGetSelections,\r\n  hasRowSelected = true,\r\n  isHidePagination,\r\n  rowKey = 'id',\r\n  shouldSaveToStore = true,\r\n  shouldShowTotal = true,\r\n  urlEndpoint,\r\n  pageSize,\r\n  ...rest\r\n}) => {\r\n  useInjectReducer({ key, reducer });\r\n  // useInjectSaga({ key, saga });\r\n\r\n  const dispatch = useDispatch();\r\n  const searchText = useSelector((state) => state.global.searchText);\r\n  const readGrid = useSelector((state) => state.global.refreshGrid);\r\n  const filters = useSelector((state) => state.global.filters);\r\n\r\n  const [idsSelection, setIdsSelection] = useState([]);\r\n  const { state, setState, setLoading, setData } = useTable();\r\n  const [totalAmount, setTotalAmount] = useState('');\r\n\r\n  const resetState = () => {\r\n    dispatch(actions.refreshGrid(false));\r\n  };\r\n\r\n  const getSortItem = (sort) => {\r\n    let sorted = [];\r\n    sort.map((item) => {\r\n      if (item?.field) {\r\n        sorted.push({\r\n          fieldName: item.field,\r\n          isAscending: item.order === 'ascend',\r\n        });\r\n      }\r\n    });\r\n\r\n    return sorted;\r\n  };\r\n\r\n  const fetchData = useCallback(() => {\r\n    if (!urlEndpoint) return;\r\n    setLoading(true);\r\n\r\n    const params = {\r\n      pageSize: state.pageSize,\r\n      pageIndex: state.currentPage - 1,\r\n      searchText: state.searchText,\r\n      sort: getSortItem(state.sort),\r\n      fieldId: filters?.fields,\r\n      filter: [],\r\n    };\r\n\r\n    api\r\n      .sendGet(urlEndpoint, params)\r\n      .then((results) => {\r\n        if (results && results?.isSuccess) {\r\n          const data = results?.data || {};\r\n          setState({\r\n            data: data?.records,\r\n            currentPage: params?.pageIndex || 1,\r\n            totalElement: data?.total || 0,\r\n            loading: false,\r\n          });\r\n          setTotalAmount(results?.data?.totalAmount);\r\n        } else {\r\n          setState({\r\n            data: [],\r\n            totalElement: 0,\r\n          });\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        // eslint-disable-next-line no-console\r\n        console.log('err: ', err);\r\n      })\r\n      .finally(() => {\r\n        setLoading(false);\r\n      });\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [state.pageSize, state.sort, state.searchText, urlEndpoint, filters?.fields]);\r\n\r\n  useEffect(() => {\r\n    fetchData();\r\n  }, [dispatch, fetchData]);\r\n\r\n  useEffect(() => {\r\n    console.log('filtersfilters', filters);\r\n  }, [filters]);\r\n\r\n  useEffect(() => {\r\n    if (urlEndpoint) {\r\n      setState({\r\n        searchText: searchText,\r\n        currentPage: 1,\r\n      });\r\n    }\r\n  }, [searchText, setState, urlEndpoint]);\r\n\r\n  useEffect(() => {\r\n    if (readGrid) {\r\n      fetchData();\r\n      resetState();\r\n    }\r\n\r\n    return () => {\r\n      setIdsSelection([]);\r\n      dispatch(gridViewActions.setItemIdSelections([]));\r\n      dispatch(gridViewActions.setItemDetailSelections([]));\r\n    };\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [readGrid]);\r\n\r\n  useEffect(() => {\r\n    if (data && isArray(data)) {\r\n      setData(data);\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [JSON.stringify(data)]);\r\n\r\n  const onChange = (pagination, filters, sorter) => {\r\n    setState({\r\n      currentPage: pagination.current,\r\n      pageSize: pagination.pageSize,\r\n      sort: sorter ? [sorter] : [],\r\n    });\r\n  };\r\n\r\n  const rowSelection = {\r\n    selectedRowKeys: idsSelection,\r\n    onChange: (selectedRowKeys, selectedRows) => {\r\n      setIdsSelection(selectedRowKeys);\r\n      // handleCallback\r\n      handleGetSelections && handleGetSelections(selectedRowKeys);\r\n      handleGetDetailSelections && handleGetDetailSelections(selectedRows);\r\n\r\n      // save to redux gridView\r\n      if (shouldSaveToStore) {\r\n        dispatch(gridViewActions.setItemIdSelections(selectedRowKeys));\r\n        dispatch(gridViewActions.setItemDetailSelections(selectedRows));\r\n      }\r\n    },\r\n  };\r\n\r\n  const summary = () => (\r\n    <Table.Summary.Row>\r\n      {columns.map((x, index) => (\r\n        <>\r\n          <Table.Summary.Cell>{index === rest?.summaryNumberCol ? formatCurrency(totalAmount) : ''}</Table.Summary.Cell>\r\n        </>\r\n      ))}\r\n      <Table.Summary.Cell></Table.Summary.Cell>\r\n    </Table.Summary.Row>\r\n  );\r\n\r\n  return (\r\n    <div className={clsx('grid', className && className)}>\r\n      <Table\r\n        columns={columns}\r\n        dataSource={state.data}\r\n        onChange={onChange}\r\n        bordered\r\n        pagination={\r\n          isHidePagination\r\n            ? false\r\n            : {\r\n              defaultPageSize: pageSize ? pageSize : state.pageSize,\r\n              showSizeChanger: true,\r\n              pageSizeOptions: ['5', '10', '20', '50'],\r\n              total: state.totalElement,\r\n              showTotal: shouldShowTotal ? () => `Có ${state.totalElement} dữ liệu` : null,\r\n            }\r\n        }\r\n        loading={state.loading}\r\n        expandable={{\r\n          expandedRowRender,\r\n        }}\r\n        rowKey={rowKey}\r\n        rowSelection={hasRowSelected ? rowSelection : null}\r\n        scroll={{ x: '100%' }}\r\n        {...rest}\r\n        summary={(state.data.length > 0 && !!rest.summaryNumberCol) ? summary : () => { }}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nGrid.propTypes = {\r\n  className: PropTypes.string,\r\n  columns: PropTypes.array,\r\n  data: PropTypes.array,\r\n  expandedRowRender: PropTypes.any,\r\n  handleGetDetailSelections: PropTypes.func,\r\n  handleGetSelections: PropTypes.func,\r\n  hasRowSelected: PropTypes.bool,\r\n  isHidePagination: PropTypes.bool,\r\n  rowKey: PropTypes.string,\r\n  shouldSaveToStore: PropTypes.bool,\r\n  shouldShowTotal: PropTypes.bool,\r\n  urlEndpoint: PropTypes.oneOfType([PropTypes.string]),\r\n};\r\n\r\nexport default withTable(Grid);\r\n","import { conformsTo, isFunction, isObject } from 'lodash';\r\nimport invariant from 'invariant';\r\n\r\n/**\r\n * Validate the shape of redux store\r\n */\r\nexport default function checkStore(store) {\r\n  const shape = {\r\n    dispatch: isFunction,\r\n    subscribe: isFunction,\r\n    getState: isFunction,\r\n    replaceReducer: isFunction,\r\n    runSaga: isFunction,\r\n    injectedReducers: isObject,\r\n    injectedSagas: isObject,\r\n  };\r\n  invariant(conformsTo(store, shape), '(app/utils...) injectors: Expected a valid redux store');\r\n}\r\n","import invariant from 'invariant';\r\nimport { isEmpty, isFunction, isString } from 'lodash';\r\n\r\nimport checkStore from './checkStore';\r\nimport createReducer from '../../reducers';\r\n\r\nexport function injectReducerFactory(store, isValid) {\r\n  return function injectReducer(key, reducer) {\r\n    if (!isValid) checkStore(store);\r\n\r\n    invariant(\r\n      isString(key) && !isEmpty(key) && isFunction(reducer),\r\n      '(app/utils...) injectReducer: Expected `reducer` to be a reducer function',\r\n    );\r\n\r\n    // Check `store.injectedReducers[key] === reducer` for hot reloading when a key is the same but a reducer is different\r\n    if (Reflect.has(store.injectedReducers, key) && store.injectedReducers[key] === reducer) return;\r\n\r\n    store.injectedReducers[key] = reducer; // eslint-disable-line no-param-reassign\r\n    store.replaceReducer(createReducer(store.injectedReducers));\r\n  };\r\n}\r\n\r\nexport default function getInjectors(store) {\r\n  checkStore(store);\r\n\r\n  return {\r\n    injectReducer: injectReducerFactory(store, true),\r\n  };\r\n}\r\n","import React from 'react';\r\nimport hoistNonReactStatics from 'hoist-non-react-statics';\r\nimport { ReactReduxContext } from 'react-redux';\r\n\r\nimport getInjectors from './reducerInjectors';\r\n\r\n/**\r\n * Dynamically injects a reducer\r\n *\r\n * @param {string} key A key of the reducer\r\n * @param {function} reducer A reducer that will be injected\r\n *\r\n */\r\nexport default ({ key, reducer }) =>\r\n  (WrappedComponent) => {\r\n    class ReducerInjector extends React.Component {\r\n      static WrappedComponent = WrappedComponent;\r\n\r\n      static contextType = ReactReduxContext;\r\n\r\n      static displayName = `withReducer(${WrappedComponent.displayName || WrappedComponent.name || 'Component'})`;\r\n\r\n      constructor(props, context) {\r\n        super(props, context);\r\n\r\n        getInjectors(context.store).injectReducer(key, reducer);\r\n      }\r\n\r\n      render() {\r\n        return <WrappedComponent {...this.props} />;\r\n      }\r\n    }\r\n\r\n    return hoistNonReactStatics(ReducerInjector, WrappedComponent);\r\n  };\r\n\r\nconst useInjectReducer = ({ key, reducer }) => {\r\n  const context = React.useContext(ReactReduxContext);\r\n  React.useEffect(() => {\r\n    getInjectors(context.store).injectReducer(key, reducer);\r\n  }, [context.store, key, reducer]);\r\n};\r\n\r\nexport { useInjectReducer };\r\n","import * as api from '../../config/axios';\r\n\r\nexport const urlEndpointCustomer = '/api/customers/';\r\nexport const urlEndpointTableCustomer= '/api/customers';\r\n\r\nexport const getCustomerById = (id) => api.sendGet(urlEndpointCustomer + id);\r\n\r\nexport const getCustomers = (data) => api.sendGet(urlEndpointCustomer, data);\r\n\r\nexport const createCustomer = (payload) =>\r\n  api.sendPost(urlEndpointCustomer, {\r\n    id: payload.id,\r\n    input: payload,\r\n  });\r\n\r\nexport const updateCustomer = (payload) => api.sendPost(urlEndpointCustomer, payload);\r\n\r\nexport const deleteCustomers = (payload) => api.sendDelete(urlEndpointCustomer, { data: { ids: payload } });\r\n\r\nexport const getCustomerDropdown = () => api.sendGet(urlEndpointCustomer + 'dropdown');\r\n","/** @format */\r\n\r\nimport * as api from '../../config/axios';\r\nexport const urlEndpointField = '/api/fields/';\r\nexport const urlEndpointTableField = '/api/fields';\r\n\r\nexport const getFieldById = (id) => api.sendGet(urlEndpointField + id);\r\n\r\nexport const getFields = (data) => api.sendGet(urlEndpointField, data);\r\n\r\nexport const createFields = (payload) =>\r\n  api.sendPost(urlEndpointField, {\r\n    id: payload.id,\r\n    input: payload,\r\n  });\r\n\r\nexport const updateFields = (payload) => api.sendPost(urlEndpointField, payload);\r\n\r\nexport const deleteFields = (payload) =>\r\n  api.sendDelete(urlEndpointField, {\r\n    data: { ids: payload },\r\n  });\r\n\r\n  export const getFieldsDropDowns = () => api.sendGet(urlEndpointField + 'dropdown', '');\r\n","/* eslint-disable react/prop-types */\r\nimport { Button, Col, Form, Input, Row, Modal, Select } from 'antd';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { getFieldsDropDowns } from 'services/fields/';\r\n\r\nconst Filter = (props) => {\r\n  const {  isOpen, handleClosed, title, onApplyFilter } = props;\r\n  const [form] = Form.useForm();\r\n  const [fields, setFields] = useState([]);\r\n\r\n  const onReset = () => {\r\n    form.resetFields();\r\n  };\r\n\r\n  const onFinish = (values) => {\r\n    onApplyFilter(values)\r\n    handleClosed();\r\n  };\r\n\r\n  useEffect(() => {\r\n    getFields();\r\n  }, []);\r\n\r\n  const getFields = () => {\r\n    getFieldsDropDowns().then(res => {\r\n      setFields(res?.data || []);\r\n    });\r\n   \r\n  };\r\n\r\n  const renderFormFilter = () => {\r\n    return (\r\n      <Form\r\n        id=\"filterForm\"\r\n        labelCol={{ span: 14 }}\r\n        wrapperCol={{ span: 23 }}\r\n        form={form}\r\n        layout=\"vertical\"\r\n        onFinish={onFinish}\r\n      >\r\n      <Row>\r\n        <Col span={24}>\r\n          <Row>\r\n            <Col span={24}>\r\n            <Form.Item\r\n                label=\"Lĩnh Vực\"\r\n                name=\"fields\"\r\n              >\r\n                 <Select>\r\n                    {fields &&\r\n                      fields.map((item) => (\r\n                        <Select.Option key={item.id} value={item.id}>\r\n                          {item.name}\r\n                        </Select.Option>\r\n                      ))}\r\n                  </Select>\r\n              </Form.Item>\r\n            </Col>\r\n         \r\n          </Row>\r\n        </Col>\r\n      </Row>\r\n    </Form>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <Modal\r\n      title={title}\r\n      open={isOpen}\r\n      onCancel={handleClosed}\r\n      width={500}\r\n      footer={[\r\n        <Button type=\"link\" form=\"filterForm\" key=\"back\" onClick={onReset}>\r\n          Bộ lọc mặc định\r\n        </Button>,\r\n        <Button form=\"filterForm\" key=\"submit\" type=\"primary\" htmlType=\"submit\">\r\n          Lọc\r\n        </Button>,\r\n      ]}\r\n    >\r\n\r\n     {renderFormFilter()}\r\n    </Modal>\r\n  );\r\n};\r\n\r\nFilter.propTypes = {};\r\n\r\nexport default Filter;\r\n"],"sourceRoot":""}