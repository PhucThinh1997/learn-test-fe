{"version":3,"sources":["common/components/Buttons/PrimaryButton.js","common/components/Buttons/DangerButton.js","common/components/Buttons/DefaultButton.js","common/components/Buttons/ButtonCancel.js","common/components/Buttons/ButtonDelete.js","common/components/Buttons/ButtonEdit.js","utils/format.js","utils/formatDate.js","components/Grid/controllers/reducer.js","components/Grid/controllers/constants.js","../node_modules/invariant/browser.js","common/components/Buttons/ButtonToolTip.js","utils/utils.js","components/Layout/PageWrapper.js","components/Grid/controllers/selectors.js","pages/home/header-page/index.js","components/Grid/controllers/actions.js","hooks/useTable.js","components/Grid/Grid.js","utils/common/checkStore.js","utils/common/reducerInjectors.js","utils/common/injectedReducers.js","services/fields/index.js","pages/home/components/filter/filterCommon.js"],"names":["PrimaryButton","props","type","size","DangerButton","danger","DefaultButton","ButtonCancel","ButtonDelete","title","rest","icon","DeleteOutlined","ButtonEdit","EditOutlined","formatCurrency","number","Number","isNaN","Intl","NumberFormat","style","currency","format","replaceAll","formatCurrencyInput","numberString","formatDateYMD","date","myDate","moment","isMoment","getDateFormat","d","isValid","formatMMDDYYYY","data","formatDDMMYYYY","today","DateTimeToDate","dateString","Date","toISOString","split","initialState","idSelections","detailSelections","gridViewReducer","state","action","produce","draft","types","payload","SET_ITEM_ID_SELECTIONS","SET_ITEM_DETAIL_SELECTIONS","module","exports","condition","a","b","c","e","f","error","undefined","Error","args","argIndex","replace","name","framesToPop","ButtonTooltip","wrap","tip","color","key","children","mapToSelectOption","map","x","value","id","label","isAccessed","permissionsAction","permissionsList","JSON","parse","localStorage","getItem","permissions","length","includes","PageWrapper","className","classnames","selectGridView","tableView","Search","HeaderPage","actions","onCreate","handleDelete","labelPrimaryBtn","onPressPrimaryBtn","isFilter","onFilter","isHideAction","isShowActionDelete","isShowActionAdd","dispatch","useDispatch","itemSelections","useSelector","createSelector","globalState","justify","align","Title","level","flex","textAlign","display","flexWrap","gap","justifyContent","placeholder","onSearch","text","updateSearch","enterButton","onClick","FilterOutlined","PlusCircleOutlined","BarsOutlined","disabled","setItemIdSelections","items","setItemDetailSelections","ActionKind","currentPage","totalPage","totalElement","pageSize","loading","searchText","sort","field","order","store","React","createContext","setState","setPage","setTotalPage","setData","setTotalElement","setLoading","setPageSize","Provider","TableProvider","initState","useReducer","useCallback","page","total","val","setSearchText","setSort","withTable","WrappedComponent","ComponentWithTableProvider","columns","expandedRowRender","handleGetDetailSelections","handleGetSelections","hasRowSelected","isHidePagination","rowKey","shouldSaveToStore","shouldShowTotal","urlEndpoint","useInjectReducer","reducer","global","readGrid","refreshGrid","filters","useState","idsSelection","setIdsSelection","useContext","totalAmount","setTotalAmount","getSortItem","sorted","item","push","fieldName","isAscending","fetchData","params","pageIndex","fieldId","fields","filter","api","then","results","isSuccess","records","catch","err","console","log","finally","useEffect","gridViewActions","isArray","stringify","rowSelection","selectedRowKeys","onChange","selectedRows","clsx","dataSource","pagination","sorter","current","bordered","defaultPageSize","showSizeChanger","pageSizeOptions","showTotal","expandable","scroll","summary","summaryNumberCol","Summary","Row","index","Cell","checkStore","shape","isFunction","subscribe","getState","replaceReducer","runSaga","injectedReducers","isObject","injectedSagas","invariant","conformsTo","injectReducerFactory","isString","isEmpty","Reflect","has","createReducer","getInjectors","injectReducer","context","ReactReduxContext","getFieldsDropDowns","urlEndpointField","Filter","isOpen","handleClosed","onApplyFilter","useForm","form","setFields","onFinish","values","getFields","res","open","onCancel","width","footer","resetFields","htmlType","labelCol","span","wrapperCol","layout","Item","Option"],"mappings":"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","file":"static/js/5.7bc565d6.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Button } from 'antd';\r\nfunction PrimaryButton(props) {\r\n  return <Button type=\"primary\" size=\"small\" {...props} />;\r\n}\r\n\r\nPrimaryButton.propTypes = {};\r\n\r\nexport default PrimaryButton;\r\n","import React from 'react';\r\nimport { Button } from 'antd';\r\nfunction DangerButton(props) {\r\n  return <Button danger size=\"small\" {...props} />;\r\n}\r\n\r\nDangerButton.propTypes = {};\r\n\r\nexport default DangerButton;\r\n","import React from 'react';\r\nimport { Button } from 'antd';\r\nfunction DefaultButton(props) {\r\n  return <Button type=\"default\" size=\"small\" {...props} />;\r\n}\r\n\r\nDefaultButton.propTypes = {};\r\n\r\nexport default DefaultButton;\r\n","import React from 'react';\r\nimport DefaultButton from './PrimaryButton';\r\nimport { StopOutlined } from '@ant-design/icons';\r\n\r\nfunction ButtonCancel({ title = 'Thêm mới', ...rest }) {\r\n  return (\r\n    <DefaultButton icon={<StopOutlined />} {...rest}>\r\n      {title}\r\n    </DefaultButton>\r\n  );\r\n}\r\n\r\nButtonCancel.propTypes = {};\r\n\r\nexport default ButtonCancel;\r\n","import React from 'react';\r\nimport DangerButton from './DangerButton';\r\nimport { DeleteOutlined } from '@ant-design/icons';\r\n\r\nfunction ButtonDelete({ title = '', ...rest }) {\r\n  return (\r\n    <DangerButton icon={<DeleteOutlined />} {...rest}>\r\n      {title}\r\n    </DangerButton>\r\n  );\r\n}\r\n\r\nButtonDelete.propTypes = {};\r\n\r\nexport default ButtonDelete;\r\n","import React from 'react';\r\nimport { EditOutlined } from '@ant-design/icons';\r\nimport DefaultButton from './DefaultButton';\r\n\r\nfunction ButtonEdit({ title = '', ...rest }) {\r\n  return (\r\n    <DefaultButton icon={<EditOutlined />} {...rest}>\r\n      {title}\r\n    </DefaultButton>\r\n  );\r\n}\r\n\r\nButtonEdit.propTypes = {};\r\n\r\nexport default ButtonEdit;\r\n","import moment from \"moment\";\r\n\r\nexport const formatCurrency = (number) => {\r\n  if (Number.isNaN(number) || !number || number === null) {\r\n    number = 0;\r\n  }\r\n  let vnd = new Intl.NumberFormat('vi-VN', {\r\n    style: 'currency',\r\n    currency: 'VND',\r\n  });\r\n  return vnd.format(number).replaceAll('₫', '');\r\n};\r\n\r\nexport const formatCurrencyInput = (numberString) => {\r\n  let number = numberString.replaceAll('.', '');\r\n  return Number(number);\r\n};\r\n\r\nexport const formatDateYMD = (date) => {\r\n  let myDate = moment(date);\r\n  return moment.isMoment(myDate) ? myDate?.format('YYYY-MM-DD') : myDate\r\n}\r\n","import moment from 'moment';\r\n\r\nexport const formatMDY = (data) => (data ? window.moment.utc(data).local().format('MM/DD/YYYY') : '');\r\n\r\nexport const customFormat = (data, format) => {\r\n  const date = window.moment.utc(data).local();\r\n  return date.isValid() ? date.format(format) : '';\r\n};\r\n\r\nexport const getDateFormat = (date) => {\r\n  const d = moment(date);\r\n  return date && d.isValid() ? d : '';\r\n};\r\n\r\nexport const startDMY = (data, type) => moment(data).startOf(type).toString();\r\n\r\nexport const endDMY = (data, type) => moment(data).endOf(type).toString();\r\n\r\nexport const formatMDYWithParam = (param) => (param && param.value ? formatMDY(param.value) : '');\r\nexport const formatMMDDYYYY = (data) => (data ? moment(data).format('MM/DD/YYYY') : '');\r\nexport const formatDDMMYYYY = (data) => (data ? moment(data).format('DD/MM/YYYY') : '');\r\n\r\nexport const formatTime = (data) => (data ? moment(data).format('HH:mm A') : '');\r\n\r\nexport const formatFullTime = (data) => (data ? moment(data).format('MM/DD/YYYY hh:mm A') : '');\r\n\r\nexport const exportToChatTime = (isoDate) => {\r\n  if (!isoDate) return;\r\n  const diff = moment(isoDate).diff(new Date(), 'hours');\r\n\r\n  let result;\r\n\r\n  if (-diff < 10) {\r\n    result = window.moment(isoDate).fromNow();\r\n  }\r\n\r\n  if (-diff >= 10) {\r\n    result = window.moment(isoDate).calendar();\r\n  }\r\n\r\n  return result;\r\n};\r\n\r\nexport const formattedFullTime = (data) => moment(data).format('YYYY-MM-DDTHH:mm:ss[Z]');\r\n\r\nexport const startISOTime = (data, typeView) => moment(data).startOf(typeView).toISOString();\r\n\r\nexport const endISOTime = (data, typeView) => moment(data).endOf(typeView).toISOString();\r\n\r\nexport const convertToISOTime = (data) => moment(data).toISOString();\r\n\r\nexport const getPreviousDays = (number) => moment().subtract(number, 'days');\r\nexport const getPrevious30Days = () => getPreviousDays(30);\r\n\r\nexport const today = () => moment();\r\n\r\n\r\nexport const DateTimeToDate = (dateString) => {\r\n  if (!dateString) return null\r\n\r\n  const date = new Date(dateString);\r\n  const formattedDate = date.toISOString().split('T')[0];\r\n  return formattedDate\r\n}\r\n\r\n","import produce from 'immer';\r\nimport * as types from './constants';\r\n\r\n// initial state\r\nexport const initialState = {\r\n  idSelections: [],\r\n  detailSelections: [],\r\n};\r\n\r\nconst gridViewReducer = (state = initialState, action) =>\r\n  produce(state, (draft) => {\r\n    switch (action.type) {\r\n      case types.SET_ITEM_ID_SELECTIONS:\r\n        draft.idSelections = action.payload;\r\n        break;\r\n      case types.SET_ITEM_DETAIL_SELECTIONS:\r\n        draft.detailSelections = action.payload;\r\n        break;\r\n    }\r\n  });\r\n\r\nexport default gridViewReducer;\r\n","export const SET_ITEM_ID_SELECTIONS = 'SET_ITEM_ID_SELECTIONS';\r\nexport const SET_ITEM_DETAIL_SELECTIONS = 'SET_ITEM_DETAIL_SELECTIONS';\r\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\n/**\n * Use invariant() to assert state which your program assumes to be true.\n *\n * Provide sprintf-style format (only %s is supported) and arguments\n * to provide information about what broke and what you were\n * expecting.\n *\n * The invariant message will be stripped in production, but the invariant\n * will remain to ensure logic does not differ in production.\n */\n\nvar invariant = function(condition, format, a, b, c, d, e, f) {\n  if (process.env.NODE_ENV !== 'production') {\n    if (format === undefined) {\n      throw new Error('invariant requires an error message argument');\n    }\n  }\n\n  if (!condition) {\n    var error;\n    if (format === undefined) {\n      error = new Error(\n        'Minified exception occurred; use the non-minified dev environment ' +\n        'for the full error message and additional helpful warnings.'\n      );\n    } else {\n      var args = [a, b, c, d, e, f];\n      var argIndex = 0;\n      error = new Error(\n        format.replace(/%s/g, function() { return args[argIndex++]; })\n      );\n      error.name = 'Invariant Violation';\n    }\n\n    error.framesToPop = 1; // we don't care about invariant's own frame\n    throw error;\n  }\n};\n\nmodule.exports = invariant;\n","import { Button, Divider, Space, Tooltip } from 'antd';\r\nimport React from 'react';\r\nconst ButtonTooltip = (props) => (\r\n  <>\r\n    <Space wrap>\r\n      <Tooltip title={props?.tip} color=\"blue\" key=\"blue\">\r\n        {props.children}\r\n      </Tooltip>\r\n    </Space>\r\n  </>\r\n);\r\nexport default ButtonTooltip;\r\n\r\n\r\n\r\n\r\n// import React from 'react';\r\n// import { Button } from 'antd';\r\n\r\n// function ButtonToolTip(props) {\r\n//   return <Button type=\"primary\" size=\"small\" {...props} />;\r\n// }\r\n\r\n// ButtonToolTip.propTypes = {};\r\n\r\n// export default ButtonToolTip;\r\n","export const mapToSelectOption = (data) => {\r\n  const options = data.map((x) => {\r\n    return {\r\n      value: x.id,\r\n      label: x.name,\r\n    };\r\n  });\r\n  return options\r\n};\r\n\r\nexport const isAccessed = (permissionsAction) => {\r\n  if (!permissionsAction) return\r\n\r\n  const userInfo = JSON.parse(localStorage.getItem('userInfo'))\r\n  const permissionsList = userInfo.permissions\r\n  if (permissionsList && permissionsList.length > 0) {\r\n    return permissionsList.includes(permissionsAction)\r\n  }\r\n\r\n  return false\r\n}\r\n","import React from 'react';\r\nimport classnames from 'classnames';\r\n\r\nimport './PageWrapper.less';\r\n\r\nfunction PageWrapper({ className, children, ...rest }) {\r\n  return (\r\n    <div className={classnames('section-wrapper', className)} {...rest}>\r\n      {children}\r\n    </div>\r\n  );\r\n}\r\n\r\nPageWrapper.propTypes = {};\r\n\r\nexport default PageWrapper;\r\n","import { createSelector } from 'reselect';\r\nimport { initialState } from './reducer';\r\n\r\nconst selectGridView = (state) => (state && state.tableView) || initialState;\r\n\r\nconst selectGridIdSelections = () => createSelector(selectGridView, (globalState) => globalState.idSelections);\r\n\r\nconst selectGridDetailSelections = () => createSelector(selectGridView, (globalState) => globalState.detailSelections);\r\n\r\nexport { selectGridView, selectGridIdSelections, selectGridDetailSelections };\r\n","import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Row, Col, Input, Button, Typography } from 'antd';\r\nimport { PlusCircleOutlined, BarsOutlined, FilterOutlined } from '@ant-design/icons';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { ButtonDelete, PrimaryButton } from 'common/components/Buttons';\r\n\r\nimport * as gridViewSelectors from 'components/Grid/controllers/selectors';\r\nimport { updateSearch } from 'redux/global/actions';\r\nimport './header.less';\r\n\r\nconst { Search } = Input;\r\n\r\nconst HeaderPage = ({\r\n  title = '',\r\n  actions = 'default',\r\n  onCreate,\r\n  handleDelete,\r\n  labelPrimaryBtn = \"\",\r\n  onPressPrimaryBtn = () => { },\r\n  isFilter = false,\r\n  onFilter,\r\n  isHideAction = false,\r\n  isShowActionDelete = true,\r\n  isShowActionAdd = true,\r\n}) => {\r\n  const dispatch = useDispatch();\r\n  const itemSelections = useSelector(gridViewSelectors.selectGridIdSelections());\r\n\r\n  const onSearch = (text) => {\r\n    dispatch(updateSearch(text));\r\n  };\r\n\r\n\r\n  return (\r\n    <div className=\"header-page\">\r\n      <Row className=\"wrapper\" justify=\"space-around\" align=\"center\">\r\n        <Col className=\"header-page__title\">\r\n          <Typography.Title level={3}>{title}</Typography.Title>\r\n        </Col>\r\n        <Col flex={1} style={{ textAlign: 'right' }}>\r\n          {actions === 'default' ? (\r\n            <Row\r\n              style={{\r\n                display: 'flex',\r\n                flexWrap: 'nowrap',\r\n                gap: '16px',\r\n                justifyContent: 'end',\r\n              }}\r\n            >\r\n              <Search className=\"header-page__search\" placeholder=\"Tìm kiếm...\" onSearch={onSearch} enterButton />\r\n              {isFilter &&\r\n                (<Button type=\"primary\" onClick={() => onFilter()} icon={<FilterOutlined />}>\r\n                </Button>)\r\n              }\r\n              {isHideAction === false && (\r\n                <>\r\n                  {isShowActionAdd && (\r\n                    <Button type=\"primary\" onClick={() => onCreate()} icon={<PlusCircleOutlined />}>\r\n                      Thêm mới\r\n                    </Button>\r\n                  )}\r\n                  {!!labelPrimaryBtn && <PrimaryButton size=\"medium\" icon={<BarsOutlined />} onClick={onPressPrimaryBtn}>\r\n                    {labelPrimaryBtn}\r\n                  </PrimaryButton>}\r\n                  {isShowActionDelete && (\r\n                    <ButtonDelete\r\n                      size=\"medium\"\r\n                      onClick={() => handleDelete && handleDelete(itemSelections)}\r\n                      disabled={!itemSelections.length}\r\n                    >\r\n                      Xóa\r\n                    </ButtonDelete>\r\n                  )}\r\n                </>\r\n              )}\r\n            </Row>\r\n          ) : typeof actions === 'function' ? (\r\n            actions()\r\n          ) : null}\r\n        </Col>\r\n      </Row>\r\n    </div>\r\n  );\r\n};\r\n\r\nHeaderPage.propTypes = {\r\n  title: PropTypes.string,\r\n  actions: PropTypes.oneOfType([PropTypes.string, PropTypes.func, PropTypes.bool]),\r\n  onCreate: PropTypes.func,\r\n  handleDelete: PropTypes.func,\r\n  labelPrimaryBtn: PropTypes.string,\r\n  onPressPrimaryBtn: PropTypes.func,\r\n};\r\n\r\nexport default HeaderPage;\r\n","import * as types from './constants';\r\n\r\nexport function setItemIdSelections(items) {\r\n  return {\r\n    type: types.SET_ITEM_ID_SELECTIONS,\r\n    payload: items,\r\n  };\r\n}\r\nexport function setItemDetailSelections(items) {\r\n  return {\r\n    type: types.SET_ITEM_DETAIL_SELECTIONS,\r\n    payload: items,\r\n  };\r\n}\r\n","import React, { useContext, useReducer, useCallback } from 'react';\r\n\r\nconst ActionKind = {\r\n  SET_STATE: 'SET_STATE',\r\n  SET_DATA: 'SET_DATA',\r\n  SET_PAGE: 'SET_PAGE',\r\n  SET_TOTAL_PAGE: 'SET_TOTAL_PAGE',\r\n  SET_TOTAL_ELEMENT: 'SET_TOTAL_ELEMENT',\r\n  SET_LOADING: 'SET_LOADING',\r\n  SET_PAGESIZE: 'SET_PAGESIZE',\r\n  SET_SORT: 'SET_SORT',\r\n  SET_SEARCH_TEXT: 'SET_SEARCH_TEXT',\r\n};\r\n\r\nexport const initialState = {\r\n  data: [],\r\n  currentPage: 1,\r\n  totalPage: 1,\r\n  totalElement: 0,\r\n  pageSize: 10,\r\n  loading: false,\r\n  searchText: '',\r\n  sort: [\r\n    {\r\n      field: '',\r\n      order: '',\r\n    },\r\n  ],\r\n};\r\n\r\nconst store = React.createContext({\r\n  state: initialState,\r\n  setState: () => null,\r\n  setPage: () => null,\r\n  setTotalPage: () => null,\r\n  setData: () => null,\r\n  setTotalElement: () => null,\r\n  setLoading: () => null,\r\n  setPageSize: () => null,\r\n});\r\n\r\nconst { Provider } = store;\r\n\r\nconst TableProvider = ({ children, initState }) => {\r\n  const [state, dispatch] = useReducer(\r\n    (state, action) => {\r\n      switch (action.type) {\r\n        case ActionKind.SET_STATE:\r\n          return {\r\n            ...state,\r\n            ...action.payload,\r\n          };\r\n        case ActionKind.SET_DATA:\r\n          return {\r\n            ...state,\r\n            data: action.payload.data,\r\n          };\r\n        case ActionKind.SET_PAGE:\r\n          return {\r\n            ...state,\r\n            currentPage: action.payload.currentPage,\r\n          };\r\n        case ActionKind.SET_TOTAL_PAGE:\r\n          return {\r\n            ...state,\r\n            totalPage: action.payload.totalPage,\r\n          };\r\n        case ActionKind.SET_TOTAL_ELEMENT:\r\n          return {\r\n            ...state,\r\n            totalElement: action.payload.totalElement,\r\n          };\r\n        case ActionKind.SET_LOADING:\r\n          return {\r\n            ...state,\r\n            loading: action.payload.loading,\r\n          };\r\n        case ActionKind.SET_PAGESIZE:\r\n          return {\r\n            ...state,\r\n            pageSize: action.payload.pageSize,\r\n          };\r\n        case ActionKind.SET_SEARCH_TEXT:\r\n          return {\r\n            ...state,\r\n            searchText: action.payload.searchText,\r\n          };\r\n        case ActionKind.SET_SORT:\r\n          return {\r\n            ...state,\r\n            sort: action.payload.sort,\r\n          };\r\n        default:\r\n          return { ...state };\r\n      }\r\n    },\r\n    { ...initialState, ...initState },\r\n  );\r\n\r\n  const setState = useCallback((state) => {\r\n    dispatch({\r\n      type: ActionKind.SET_STATE,\r\n      payload: state,\r\n    });\r\n  }, []);\r\n\r\n  const setPage = useCallback((page) => {\r\n    dispatch({\r\n      type: ActionKind.SET_PAGE,\r\n      payload: {\r\n        currentPage: page,\r\n      },\r\n    });\r\n  }, []);\r\n\r\n  const setData = useCallback((data) => {\r\n    dispatch({\r\n      type: ActionKind.SET_DATA,\r\n      payload: {\r\n        data: data,\r\n      },\r\n    });\r\n  }, []);\r\n\r\n  const setTotalPage = useCallback((total) => {\r\n    dispatch({\r\n      type: ActionKind.SET_TOTAL_PAGE,\r\n      payload: {\r\n        totalPage: total,\r\n      },\r\n    });\r\n  }, []);\r\n\r\n  const setLoading = useCallback((val) => {\r\n    dispatch({\r\n      type: ActionKind.SET_LOADING,\r\n      payload: {\r\n        loading: val,\r\n      },\r\n    });\r\n  }, []);\r\n\r\n  const setTotalElement = useCallback((total) => {\r\n    dispatch({\r\n      type: ActionKind.SET_TOTAL_ELEMENT,\r\n      payload: {\r\n        totalElement: total,\r\n      },\r\n    });\r\n  }, []);\r\n\r\n  const setPageSize = useCallback((size) => {\r\n    dispatch({\r\n      type: ActionKind.SET_PAGESIZE,\r\n      payload: {\r\n        pageSize: size,\r\n      },\r\n    });\r\n  }, []);\r\n  const setSearchText = useCallback((searchText) => {\r\n    dispatch({\r\n      type: ActionKind.SET_SEARCH_TEXT,\r\n      payload: {\r\n        searchText: searchText,\r\n      },\r\n    });\r\n  }, []);\r\n  const setSort = useCallback((sort) => {\r\n    dispatch({\r\n      type: ActionKind.SET_SORT,\r\n      payload: {\r\n        sort: sort,\r\n      },\r\n    });\r\n  }, []);\r\n\r\n  return (\r\n    <Provider\r\n      value={{\r\n        state,\r\n        setState,\r\n        setPage,\r\n        setTotalPage,\r\n        setData,\r\n        setLoading,\r\n        setTotalElement,\r\n        setPageSize,\r\n        setSearchText,\r\n        setSort,\r\n      }}\r\n    >\r\n      {children}\r\n    </Provider>\r\n  );\r\n};\r\n\r\nexport default TableProvider;\r\n\r\n// HOC to wrap component with TableProvider\r\nexport function withTable(WrappedComponent, initState = initialState) {\r\n  const ComponentWithTableProvider = (props) => (\r\n    <TableProvider initState={initState}>\r\n      <WrappedComponent {...props} />\r\n    </TableProvider>\r\n  );\r\n  return ComponentWithTableProvider;\r\n}\r\n\r\nexport const useTable = () => useContext(store);\r\n","import React, { useEffect, useCallback, useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Table } from 'antd';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport clsx from 'classnames';\r\nimport { isArray } from 'lodash';\r\n\r\nimport * as api from 'config/axios';\r\nimport * as actions from 'redux/global/actions';\r\nimport reducer from './controllers/reducer';\r\n// import saga from './controllers/saga';\r\nimport * as gridViewActions from './controllers/actions';\r\nimport { useInjectReducer } from 'utils/common/injectedReducers';\r\n// import { useInjectSaga } from 'utils/common/injectSaga';\r\nimport { useTable, withTable } from 'hooks/useTable';\r\n\r\nimport './Grid.less';\r\nimport { formatCurrency } from 'utils/format';\r\n\r\nconst key = 'tableView';\r\n\r\nconst Grid = ({\r\n  className = '',\r\n  columns,\r\n  data,\r\n  expandedRowRender,\r\n  handleGetDetailSelections,\r\n  handleGetSelections,\r\n  hasRowSelected = true,\r\n  isHidePagination,\r\n  rowKey = 'id',\r\n  shouldSaveToStore = true,\r\n  shouldShowTotal = true,\r\n  urlEndpoint,\r\n  pageSize,\r\n  ...rest\r\n}) => {\r\n  useInjectReducer({ key, reducer });\r\n  // useInjectSaga({ key, saga });\r\n\r\n  const dispatch = useDispatch();\r\n  const searchText = useSelector((state) => state.global.searchText);\r\n  const readGrid = useSelector((state) => state.global.refreshGrid);\r\n  const filters = useSelector((state) => state.global.filters);\r\n\r\n  const [idsSelection, setIdsSelection] = useState([]);\r\n  const { state, setState, setLoading, setData } = useTable();\r\n  const [totalAmount, setTotalAmount] = useState('');\r\n\r\n  const resetState = () => {\r\n    dispatch(actions.refreshGrid(false));\r\n  };\r\n\r\n  const getSortItem = (sort) => {\r\n    let sorted = [];\r\n    sort.map((item) => {\r\n      if (item?.field) {\r\n        sorted.push({\r\n          fieldName: item.field,\r\n          isAscending: item.order === 'ascend',\r\n        });\r\n      }\r\n    });\r\n\r\n    return sorted;\r\n  };\r\n\r\n  const fetchData = useCallback(() => {\r\n    if (!urlEndpoint) return;\r\n    setLoading(true);\r\n\r\n    const params = {\r\n      pageSize: state.pageSize,\r\n      pageIndex: state.currentPage - 1,\r\n      searchText: state.searchText,\r\n      sort: getSortItem(state.sort),\r\n      fieldId: filters?.fields,\r\n      filter: [],\r\n    };\r\n\r\n    api\r\n      .sendGet(urlEndpoint, params)\r\n      .then((results) => {\r\n        if (results && results?.isSuccess) {\r\n          const data = results?.data || {};\r\n          setState({\r\n            data: data?.records,\r\n            currentPage: params?.pageIndex || 1,\r\n            totalElement: data?.total || 0,\r\n            loading: false,\r\n          });\r\n          setTotalAmount(results?.data?.totalAmount);\r\n        } else {\r\n          setState({\r\n            data: [],\r\n            totalElement: 0,\r\n          });\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        // eslint-disable-next-line no-console\r\n        console.log('err: ', err);\r\n      })\r\n      .finally(() => {\r\n        setLoading(false);\r\n      });\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [state.pageSize, state.sort, state.searchText, urlEndpoint, filters?.fields]);\r\n\r\n  useEffect(() => {\r\n    fetchData();\r\n  }, [dispatch, fetchData]);\r\n\r\n  useEffect(() => {\r\n    console.log('filtersfilters', filters);\r\n  }, [filters]);\r\n\r\n  useEffect(() => {\r\n    if (urlEndpoint) {\r\n      setState({\r\n        searchText: searchText,\r\n        currentPage: 1,\r\n      });\r\n    }\r\n  }, [searchText, setState, urlEndpoint]);\r\n\r\n  useEffect(() => {\r\n    if (readGrid) {\r\n      fetchData();\r\n      resetState();\r\n    }\r\n\r\n    return () => {\r\n      setIdsSelection([]);\r\n      dispatch(gridViewActions.setItemIdSelections([]));\r\n      dispatch(gridViewActions.setItemDetailSelections([]));\r\n    };\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [readGrid]);\r\n\r\n  useEffect(() => {\r\n    if (data && isArray(data)) {\r\n      setData(data);\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [JSON.stringify(data)]);\r\n\r\n  const onChange = (pagination, filters, sorter) => {\r\n    setState({\r\n      currentPage: pagination.current,\r\n      pageSize: pagination.pageSize,\r\n      sort: sorter ? [sorter] : [],\r\n    });\r\n  };\r\n\r\n  const rowSelection = {\r\n    selectedRowKeys: idsSelection,\r\n    onChange: (selectedRowKeys, selectedRows) => {\r\n      setIdsSelection(selectedRowKeys);\r\n      // handleCallback\r\n      handleGetSelections && handleGetSelections(selectedRowKeys);\r\n      handleGetDetailSelections && handleGetDetailSelections(selectedRows);\r\n\r\n      // save to redux gridView\r\n      if (shouldSaveToStore) {\r\n        dispatch(gridViewActions.setItemIdSelections(selectedRowKeys));\r\n        dispatch(gridViewActions.setItemDetailSelections(selectedRows));\r\n      }\r\n    },\r\n  };\r\n\r\n  const summary = () => (\r\n    <Table.Summary.Row>\r\n      {columns.map((x, index) => (\r\n        <>\r\n          <Table.Summary.Cell>{index === rest?.summaryNumberCol ? formatCurrency(totalAmount) : ''}</Table.Summary.Cell>\r\n        </>\r\n      ))}\r\n      <Table.Summary.Cell></Table.Summary.Cell>\r\n    </Table.Summary.Row>\r\n  );\r\n\r\n  return (\r\n    <div className={clsx('grid', className && className)}>\r\n      <Table\r\n        columns={columns}\r\n        dataSource={state.data}\r\n        onChange={onChange}\r\n        bordered\r\n        pagination={\r\n          isHidePagination\r\n            ? false\r\n            : {\r\n              defaultPageSize: pageSize ? pageSize : state.pageSize,\r\n              showSizeChanger: true,\r\n              pageSizeOptions: ['5', '10', '20', '50'],\r\n              total: state.totalElement,\r\n              showTotal: shouldShowTotal ? () => `Có ${state.totalElement} dữ liệu` : null,\r\n            }\r\n        }\r\n        loading={state.loading}\r\n        expandable={{\r\n          expandedRowRender,\r\n        }}\r\n        rowKey={rowKey}\r\n        rowSelection={hasRowSelected ? rowSelection : null}\r\n        scroll={{ x: '100%' }}\r\n        {...rest}\r\n        summary={(state.data.length > 0 && !!rest.summaryNumberCol) ? summary : () => { }}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nGrid.propTypes = {\r\n  className: PropTypes.string,\r\n  columns: PropTypes.array,\r\n  data: PropTypes.array,\r\n  expandedRowRender: PropTypes.any,\r\n  handleGetDetailSelections: PropTypes.func,\r\n  handleGetSelections: PropTypes.func,\r\n  hasRowSelected: PropTypes.bool,\r\n  isHidePagination: PropTypes.bool,\r\n  rowKey: PropTypes.string,\r\n  shouldSaveToStore: PropTypes.bool,\r\n  shouldShowTotal: PropTypes.bool,\r\n  urlEndpoint: PropTypes.oneOfType([PropTypes.string]),\r\n};\r\n\r\nexport default withTable(Grid);\r\n","import { conformsTo, isFunction, isObject } from 'lodash';\r\nimport invariant from 'invariant';\r\n\r\n/**\r\n * Validate the shape of redux store\r\n */\r\nexport default function checkStore(store) {\r\n  const shape = {\r\n    dispatch: isFunction,\r\n    subscribe: isFunction,\r\n    getState: isFunction,\r\n    replaceReducer: isFunction,\r\n    runSaga: isFunction,\r\n    injectedReducers: isObject,\r\n    injectedSagas: isObject,\r\n  };\r\n  invariant(conformsTo(store, shape), '(app/utils...) injectors: Expected a valid redux store');\r\n}\r\n","import invariant from 'invariant';\r\nimport { isEmpty, isFunction, isString } from 'lodash';\r\n\r\nimport checkStore from './checkStore';\r\nimport createReducer from '../../reducers';\r\n\r\nexport function injectReducerFactory(store, isValid) {\r\n  return function injectReducer(key, reducer) {\r\n    if (!isValid) checkStore(store);\r\n\r\n    invariant(\r\n      isString(key) && !isEmpty(key) && isFunction(reducer),\r\n      '(app/utils...) injectReducer: Expected `reducer` to be a reducer function',\r\n    );\r\n\r\n    // Check `store.injectedReducers[key] === reducer` for hot reloading when a key is the same but a reducer is different\r\n    if (Reflect.has(store.injectedReducers, key) && store.injectedReducers[key] === reducer) return;\r\n\r\n    store.injectedReducers[key] = reducer; // eslint-disable-line no-param-reassign\r\n    store.replaceReducer(createReducer(store.injectedReducers));\r\n  };\r\n}\r\n\r\nexport default function getInjectors(store) {\r\n  checkStore(store);\r\n\r\n  return {\r\n    injectReducer: injectReducerFactory(store, true),\r\n  };\r\n}\r\n","import React from 'react';\r\nimport hoistNonReactStatics from 'hoist-non-react-statics';\r\nimport { ReactReduxContext } from 'react-redux';\r\n\r\nimport getInjectors from './reducerInjectors';\r\n\r\n/**\r\n * Dynamically injects a reducer\r\n *\r\n * @param {string} key A key of the reducer\r\n * @param {function} reducer A reducer that will be injected\r\n *\r\n */\r\nexport default ({ key, reducer }) =>\r\n  (WrappedComponent) => {\r\n    class ReducerInjector extends React.Component {\r\n      static WrappedComponent = WrappedComponent;\r\n\r\n      static contextType = ReactReduxContext;\r\n\r\n      static displayName = `withReducer(${WrappedComponent.displayName || WrappedComponent.name || 'Component'})`;\r\n\r\n      constructor(props, context) {\r\n        super(props, context);\r\n\r\n        getInjectors(context.store).injectReducer(key, reducer);\r\n      }\r\n\r\n      render() {\r\n        return <WrappedComponent {...this.props} />;\r\n      }\r\n    }\r\n\r\n    return hoistNonReactStatics(ReducerInjector, WrappedComponent);\r\n  };\r\n\r\nconst useInjectReducer = ({ key, reducer }) => {\r\n  const context = React.useContext(ReactReduxContext);\r\n  React.useEffect(() => {\r\n    getInjectors(context.store).injectReducer(key, reducer);\r\n  }, [context.store, key, reducer]);\r\n};\r\n\r\nexport { useInjectReducer };\r\n","/** @format */\r\n\r\nimport * as api from '../../config/axios';\r\nexport const urlEndpointField = '/api/fields/';\r\nexport const urlEndpointTableField = '/api/fields';\r\n\r\nexport const getFieldById = (id) => api.sendGet(urlEndpointField + id);\r\n\r\nexport const getFields = (data) => api.sendGet(urlEndpointField, data);\r\n\r\nexport const createFields = (payload) =>\r\n  api.sendPost(urlEndpointField, {\r\n    id: payload.id,\r\n    input: payload,\r\n  });\r\n\r\nexport const updateFields = (payload) => api.sendPost(urlEndpointField, payload);\r\n\r\nexport const deleteFields = (payload) =>\r\n  api.sendDelete(urlEndpointField, {\r\n    data: { ids: payload },\r\n  });\r\n\r\n  export const getFieldsDropDowns = () => api.sendGet(urlEndpointField + 'dropdown', '');\r\n","/* eslint-disable react/prop-types */\r\nimport { Button, Col, Form, Input, Row, Modal, Select } from 'antd';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { getFieldsDropDowns } from 'services/fields/';\r\n\r\nconst Filter = (props) => {\r\n  const {  isOpen, handleClosed, title, onApplyFilter } = props;\r\n  const [form] = Form.useForm();\r\n  const [fields, setFields] = useState([]);\r\n\r\n  const onReset = () => {\r\n    form.resetFields();\r\n  };\r\n\r\n  const onFinish = (values) => {\r\n    onApplyFilter(values)\r\n    handleClosed();\r\n  };\r\n\r\n  useEffect(() => {\r\n    getFields();\r\n  }, []);\r\n\r\n  const getFields = () => {\r\n    getFieldsDropDowns().then(res => {\r\n      setFields(res?.data || []);\r\n    });\r\n   \r\n  };\r\n\r\n  const renderFormFilter = () => {\r\n    return (\r\n      <Form\r\n        id=\"filterForm\"\r\n        labelCol={{ span: 14 }}\r\n        wrapperCol={{ span: 23 }}\r\n        form={form}\r\n        layout=\"vertical\"\r\n        onFinish={onFinish}\r\n      >\r\n      <Row>\r\n        <Col span={24}>\r\n          <Row>\r\n            <Col span={24}>\r\n            <Form.Item\r\n                label=\"Lĩnh Vực\"\r\n                name=\"fields\"\r\n              >\r\n                 <Select>\r\n                    {fields &&\r\n                      fields.map((item) => (\r\n                        <Select.Option key={item.id} value={item.id}>\r\n                          {item.name}\r\n                        </Select.Option>\r\n                      ))}\r\n                  </Select>\r\n              </Form.Item>\r\n            </Col>\r\n         \r\n          </Row>\r\n        </Col>\r\n      </Row>\r\n    </Form>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <Modal\r\n      title={title}\r\n      open={isOpen}\r\n      onCancel={handleClosed}\r\n      width={500}\r\n      footer={[\r\n        <Button type=\"link\" form=\"filterForm\" key=\"back\" onClick={onReset}>\r\n          Bộ lọc mặc định\r\n        </Button>,\r\n        <Button form=\"filterForm\" key=\"submit\" type=\"primary\" htmlType=\"submit\">\r\n          Lọc\r\n        </Button>,\r\n      ]}\r\n    >\r\n\r\n     {renderFormFilter()}\r\n    </Modal>\r\n  );\r\n};\r\n\r\nFilter.propTypes = {};\r\n\r\nexport default Filter;\r\n"],"sourceRoot":""}