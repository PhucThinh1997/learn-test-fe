{"version":3,"sources":["pages/technical-business/technicalBusinessRequest/createAndUpdate.js","pages/technical-business/technicalBusinessRequest/assignPopup.js","pages/technical-business/technicalBusinessRequest/technicalBusinessRequest.js","pages/technical-business/technicalBusinessRequest/index.js","common/components/Buttons/PrimaryButton.js","common/components/Buttons/DangerButton.js","common/components/Buttons/DefaultButton.js","common/components/Buttons/ButtonCancel.js","common/components/Buttons/ButtonDelete.js","common/components/Buttons/ButtonEdit.js","utils/format.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","utils/formatDate.js","components/Grid/controllers/reducer.js","components/Grid/controllers/constants.js","../node_modules/invariant/browser.js","common/components/Buttons/ButtonToolTip.js","utils/utils.js","components/Layout/PageWrapper.js","components/Grid/controllers/selectors.js","pages/home/header-page/index.js","components/Grid/controllers/actions.js","hooks/useTable.js","components/Grid/Grid.js","utils/common/checkStore.js","utils/common/reducerInjectors.js","utils/common/injectedReducers.js","services/customer/index.js","services/employee/index.js","../node_modules/antd/es/input-number/style/index.js","components/input/inputCustom.js","utils/validate/validateUtils.js","../node_modules/@ant-design/icons-svg/es/asn/UpOutlined.js","../node_modules/@ant-design/icons/es/icons/UpOutlined.js","../node_modules/rc-input-number/es/utils/supportUtil.js","../node_modules/rc-input-number/es/utils/numberUtil.js","../node_modules/rc-input-number/es/utils/MiniDecimal.js","../node_modules/rc-input-number/es/StepHandler.js","../node_modules/rc-input-number/es/InputNumber.js","../node_modules/rc-input-number/es/hooks/useCursor.js","../node_modules/rc-input-number/es/hooks/useFrame.js","../node_modules/rc-input-number/es/index.js","../node_modules/antd/es/input-number/index.js","components/input/selectSearch.js","services/dealers/dealers.service.js","services/technicalBusiness/requestService.js","constants/mode.cost.js","utils/dateUtils.js","pages/dealers/enum.js","common/components/status/Status.js","pages/technical-business/context/technicalBusinessRequest.js","services/contact-person/index.js","pages/technical-business/technicalBusinessRequest/technicalBusinessRequestPopup.js","pages/technical-business/technicalBusinessRequest/EmployeeAssign.js"],"names":["CreateAndUpdate","props","id","isOpen","onClose","form","reloadTable","schema","yup","shape","type","valRequired","customerId","contactPersonId","requirementDate","plannedStartDate","contentRequirement","useForm","mode","resolver","yupResolver","control","handleSubmit","setValue","errors","watch","formState","useState","MODE","DETAIL","CREATE","setMode","customerOptions","setCustomerOptions","personContactOptions","setPersonContactOptions","technicalRequirementTasks","setTechnicalRequirementTasks","empOptions","setEmpOptions","infoCustomers","setInfoCustomers","createTechnical","request","createTechnicalBusiness","then","res","isSuccess","handleCancel","getContactPersonById","getContactPersonByCustomerId","data","options","mapToSelectOption","useEffect","getCustomerDDL","getEmployeesByPermissions","permissionCodes","enums","YEU_CAU_KI_THUAT_NHAN_YEU_CAU","getCustomerDropdown","option","EDIT","defaultValueInModeCreate","getTechnicalById","Object","keys","forEach","key","technical","map","x","nameEmpMain","employee","name","empSupport","employeeSupporters","m","label","contentAssign","contentWork","state","getToDay","title","getTitle","open","width","onCancel","className","footer","onSubmit","Number","formatDateYMD","span","onClick","isTitleInline","isShowText","onChange","isRequired","cus","find","phone","position","TitleInline","rows","EmployeeAssign","originData","rowKey","hideButton","htmlType","AssignPopup","idRequest","empMainId","reset","employeeOptions","setEmployeeOptions","employeeSupportOptions","setEmployeeSupportOptions","listAssignEmp","setListAssignEmp","test","idReq","setIdReq","isDelete","reject","rejectRemarks","length","clearAll","getEmployeeDDL","QUAN_LY_CONG_VIEC_XEM","empOption","cloneEmployeeOptions","_","cloneDeep","filter","value","startDate","dueDate","STATUS_TASK","THEM_MOI","assignEmp","push","isMulti","defaultValue","isDisabled","handleChangeData","newData","disabled","listAssign","employeeId","employeeSupporterIds","toString","technicalRequirementId","note","role","DateTimeToDate","closedDate","completedNote","completedDate","technicalReportFileId","inputs","console","log","assignTaskTechnicalBusinesss","saveOnServer","TechnicalBusinessRequest","setId","setIsOpen","isOpenAssign","setIsOpenAssign","setIdRequest","dispatch","useDispatch","columns","dataIndex","render","recore","customer","formatDDMMYYYY","BLANK_VALUE","values","record","style","textAlign","tip","icon","BarsOutlined","onClickDetail","isAccessed","readGrid","refresh","actions","YEU_CAU_KI_THUAT_XEM","onCreate","handleDelete","confirm","ExclamationCircleOutlined","content","okText","cancelText","onOk","deleteTechnicalBusinesss","isShowActionAdd","YEU_CAU_KI_THUAT_THEM","PageWrapper","Grid","urlEndpoint","urlEndpointTableTechnicalBusiness","TechnicalBusinessRequestIndex","PrimaryButton","size","DangerButton","danger","DefaultButton","ButtonCancel","ButtonDelete","rest","DeleteOutlined","ButtonEdit","EditOutlined","formatCurrency","number","isNaN","Intl","NumberFormat","currency","format","replaceAll","formatCurrencyInput","numberString","date","myDate","moment","isMoment","_toConsumableArray","arr","Array","isArray","arrayLikeToArray","iter","Symbol","iterator","from","unsupportedIterableToArray","TypeError","getDateFormat","d","isValid","formatMMDDYYYY","today","dateString","Date","toISOString","split","initialState","idSelections","detailSelections","gridViewReducer","action","produce","draft","types","payload","SET_ITEM_ID_SELECTIONS","SET_ITEM_DETAIL_SELECTIONS","module","exports","condition","a","b","c","e","f","error","undefined","Error","args","argIndex","replace","framesToPop","ButtonTooltip","wrap","color","children","permissionsAction","permissionsList","JSON","parse","localStorage","getItem","permissions","includes","classnames","selectGridView","tableView","Search","HeaderPage","labelPrimaryBtn","onPressPrimaryBtn","isFilter","onFilter","isHideAction","isShowActionDelete","itemSelections","useSelector","createSelector","globalState","justify","align","Title","level","flex","display","flexWrap","gap","justifyContent","placeholder","onSearch","text","updateSearch","enterButton","FilterOutlined","PlusCircleOutlined","setItemIdSelections","items","setItemDetailSelections","ActionKind","currentPage","totalPage","totalElement","pageSize","loading","searchText","sort","field","order","store","React","createContext","setState","setPage","setTotalPage","setData","setTotalElement","setLoading","setPageSize","Provider","TableProvider","initState","useReducer","useCallback","page","total","val","setSearchText","setSort","withTable","WrappedComponent","ComponentWithTableProvider","expandedRowRender","handleGetDetailSelections","handleGetSelections","hasRowSelected","isHidePagination","shouldSaveToStore","shouldShowTotal","useInjectReducer","reducer","global","refreshGrid","filters","idsSelection","setIdsSelection","useContext","totalAmount","setTotalAmount","getSortItem","sorted","item","fieldName","isAscending","fetchData","params","pageIndex","fieldId","fields","api","results","records","catch","err","finally","gridViewActions","stringify","rowSelection","selectedRowKeys","selectedRows","clsx","dataSource","pagination","sorter","current","bordered","defaultPageSize","showSizeChanger","pageSizeOptions","showTotal","expandable","scroll","summary","summaryNumberCol","Summary","Row","index","Cell","checkStore","isFunction","subscribe","getState","replaceReducer","runSaga","injectedReducers","isObject","injectedSagas","invariant","conformsTo","injectReducerFactory","isString","isEmpty","Reflect","has","createReducer","getInjectors","injectReducer","context","ReactReduxContext","urlEndpointTableCustomer","getCustomerById","createCustomer","input","updateCustomer","deleteCustomers","ids","urlEndpointCustomer","urlEndpointTableEmployee","getEmployeeById","getEmployeeDropDown","urlEndpointEmployee","createEmployee","updateEmployee","deleteEmployees","TextArea","InputCustom","classErrors","renderLabel","Text","renderInputChild","formatInput","customInput","prefix","thousandSeparator","decimalSeparator","onValueChange","target","renderInput","Item","exists","mesError","message","toLowerCase","renderErrorMessage","Group","compact","string","required","valPhone","matches","UpOutlined","ref","AntdIcon","_objectSpread","UpOutlinedSvg","displayName","supportBigInt","BigInt","trimNumber","numStr","str","trim","negative","startsWith","slice","concat","trimStr","splitNumber","integerStr","decimalStr","negativeStr","fullStr","isE","String","getNumberPrecision","precision","indexOf","decimalMatch","match","validateNumber","num2str","MAX_SAFE_INTEGER","MIN_SAFE_INTEGER","toFixed","num","getDecupleSteps","step","stepStr","NumberDecimal","_classCallCheck","this","origin","empty","_createClass","toNumber","isInvalidate","maxPrecision","Math","max","add","negate","safe","arguments","BigIntDecimal","integer","decimal","decimalLen","nan","mergedValue","trimRet","numbers","padStart","decimalLength","getMark","getIntegerStr","getDecimalStr","padEnd","clone","offset","maxDecimalLength","_trimNumber","alignDecimal","hydrateValueStr","NaN","getMiniDecimal","separatorStr","cutOnly","_trimNumber2","precisionDecimalStr","numberWithoutDecimal","advancedNum","advancedDecimal","repeat","StepHandler","_ref","prefixCls","upNode","downNode","upDisabled","downDisabled","onStep","stepTimeoutRef","onStepRef","onStepMouseDown","up","preventDefault","setTimeout","loopStep","onStopStep","clearTimeout","isMobile","handlerClassName","upClassName","classNames","_defineProperty","downClassName","sharedHandlerProps","unselectable","onMouseUp","onMouseLeave","_extends","onMouseDown","_excluded","getDecimalValue","stringMode","decimalValue","getDecimalIfValidate","InputNumber","_classNames","_props$prefixCls","min","_props$step","readOnly","upHandler","downHandler","keyboard","_props$controls","controls","parser","formatter","onInput","onPressEnter","inputProps","_objectWithoutProperties","inputClassName","inputRef","_React$useState","_React$useState2","_slicedToArray","focus","setFocus","userTypingRef","compositionRef","shiftKeyRef","_React$useState3","_React$useState4","setDecimalValue","getPrecision","userTyping","mergedParser","parsedStr","inputValueRef","mergedFormatter","mergedPrecision","_React$useState5","initValue","_typeof","_React$useState6","inputValue","setInternalInputValue","setInputValue","newValue","maxDecimal","minDecimal","lessEquals","_useCursor","focused","selectionRef","useRef","start","selectionStart","end","selectionEnd","beforeTxt","substring","afterTxt","_selectionRef$current","startPos","endsWith","beforeLastChar","newIndex","setSelectionRange","warning","useCursor","_useCursor2","recordCursor","restoreCursor","getRangeValue","isInRange","triggerValueUpdate","newDecimal","updateValue","isRangeValidate","equals","onNextPromise","idRef","cleanUp","raf","cancel","callback","useFrame","collectInputValue","inputStr","finalDecimal","nextInputStr","onInternalStep","_inputRef$current","stepDecimal","updatedValue","flushInputValue","parsedValue","formatValue","useLayoutUpdateEffect","currentParsedValue","onFocus","onBlur","onKeyDown","event","which","shiftKey","KeyCode","ENTER","UP","DOWN","onKeyUp","onCompositionStart","onCompositionEnd","autoComplete","composeRef","__rest","s","t","p","prototype","hasOwnProperty","call","getOwnPropertySymbols","i","propertyIsEnumerable","_React$useContext","ConfigContext","getPrefixCls","direction","SizeContext","customizeSize","customDisabled","customizePrefixCls","addonBefore","addonAfter","_props$bordered","customStatus","status","others","upIcon","downIcon","DownOutlined","controlsTemp","_useContext","FormItemInputContext","hasFeedback","contextStatus","isFormItemInput","feedbackIcon","mergedStatus","getMergedStatus","mergeSize","DisabledContext","mergedDisabled","inputNumberClass","getStatusClassNames","element","RcInputNumber","_classNames2","affixWrapperCls","cloneElement","_a","_classNames4","wrapperClassName","addonClassName","addonBeforeNode","addonAfterNode","mergedWrapperClassName","mergedGroupClassName","NoFormStyle","override","SelectSearch","setValues","customStyles","provided","borderColor","minHeight","height","minWidth","boxShadow","isFocused","valueContainer","padding","margin","indicatorSeparator","indicatorsContainer","getValueByOption","result","styles","renderInputOfText","paddingBottom","urlEndpointTableDealers","urlEndpointTableDealersResult","getDealersById","createDealers","deleteDealers","getTechnicalBusinessById","listResult","listResultTask","CHO_TIEP_NHAN","DANG_THUC_HIEN","TU_CHOI","HOAN_THANH","Status","bgColor","listEnum","success","backgroundColor","info","searchCriteria","SEARCH_CRITERIA","ALL","TechnicalBusinessRequestContext","TechnicalBusinessRequestProvider","isUpdate","setIsUpdate","isCreate","setIsCreate","personSelected","setPersonSelected","formPhanCong","supportPersonIdsOrigin","setSupportPersonIdsOrigin","isPhanCong","setIsPhanCong","getOptions","setDefaultOption","customerOption","fielValue","getFieldValue","setFieldValue","resetFields","innitData","setFieldsValue","valueConfig","updatePersonContactList","handleEdit","handleClosePopup","convertDateValue","dataClone","techAssign","technicalRequirementAssignments","techDate","handlePhanCong","SAVE_SUCCESS","SAVE_ERROR","setValueDefaut","dataDefault","dataCurrent","getFieldsValue","DELETE_SUCCESS","DELETE_ERROR","innitDataPhanCong","supportPersonIds","getDataById","LableCustom","strong","TechnicalBusinessRequestComponon","formItemLayout","labelCol","wrapperCol","textAreaItemLayout","configRule","requirementPersonId","labelAlign","layout","onFinish","gutter","lg","rules","onDeselect","ssss","hidden","disabledDate","whiteSpace","formInstance","editingKey","isAdding","isEditing","editable","empSupports","splice","onDeleteRecord","columnsWithEdit","col","onCell","inputType","editing","rowLength","components","body","cell","EditableCell","isDeleted","rowClassName","y","marginBottom","restProps","inputNode"],"mappings":"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","file":"static/js/20.f0dde847.chunk.js","sourcesContent":["/* eslint-disable react/prop-types */\r\nimport React, { useEffect, useState, useContext } from 'react';\r\nimport { Button, Modal, Row, Col } from 'antd';\r\nimport { formatDateYMD } from 'utils/format';\r\nimport _ from 'lodash';\r\nimport { yupResolver } from '@hookform/resolvers/yup';\r\nimport { useForm } from 'react-hook-form';\r\nimport * as yup from 'yup';\r\nimport InputCustom from 'components/input/inputCustom';\r\nimport \"./index.less\"\r\nimport SelectSearch from 'components/input/selectSearch';\r\nimport { createtech, getTechnicalById } from 'services/dealers/dealers.service';\r\nimport { MODE } from 'constants/mode.cost';\r\nimport { getToDay } from 'utils/dateUtils';\r\nimport { valRequired } from 'utils/validate/validateUtils';\r\nimport { TechnicalBusinessRequestContext } from '../context/technicalBusinessRequest';\r\nimport { formatDDMMYYYY, today, getDateFormat } from 'utils/formatDate';\r\nimport * as enums from 'common/enum';\r\nimport { createTechnicalBusiness, getReceiverDropdown, getTechnicalBusinessById } from 'services/technicalBusiness/requestService';\r\nimport { getCustomerDropdown } from 'services/customer';\r\nimport { getContactPersonByCustomerId } from 'services/contact-person';\r\nimport { mapToSelectOption } from 'utils/utils';\r\nimport EmployeeAssign from './EmployeeAssign';\r\nimport { getEmployeeDropDown, getEmployeesByPermissions } from 'services/employee';\r\n\r\nconst CreateAndUpdate = (props) => {\r\n  const { id, isOpen, onClose, form, reloadTable } = props;\r\n  const schema = yup.object().shape({\r\n    type: valRequired(yup),\r\n    customerId: valRequired(yup),\r\n    contactPersonId: valRequired(yup),\r\n    requirementDate: valRequired(yup),\r\n    plannedStartDate: valRequired(yup),\r\n    contentRequirement: valRequired(yup),\r\n  });\r\n  const {\r\n    control,\r\n    handleSubmit,\r\n    setValue,\r\n    watch,\r\n    formState: { errors },\r\n  } = useForm({ mode: 'onChange', resolver: yupResolver(schema) });\r\n  const [mode, setMode] = useState(id ? MODE.DETAIL : MODE.CREATE)\r\n  const [customerOptions, setCustomerOptions] = useState([])\r\n  const [personContactOptions, setPersonContactOptions] = useState([])\r\n  const [technicalRequirementTasks, setTechnicalRequirementTasks] = useState([])\r\n  const [empOptions, setEmpOptions] = useState([])\r\n  const [infoCustomers, setInfoCustomers] = useState([])\r\n\r\n  const onSubmit = (data) => {\r\n    let request = {\r\n      ...data,\r\n      type: Number(data.type),\r\n      plannedStartDate: formatDateYMD(data.plannedStartDate),\r\n      requirementDate: formatDateYMD(data.requirementDate)\r\n    };\r\n    // if mode edit then add id edit\r\n    if (id) {\r\n      request.id = id\r\n    }\r\n    createTechnical(request)\r\n  }\r\n\r\n  const createTechnical = (request) => {\r\n    createTechnicalBusiness(request).then((res) => {\r\n      if (res.isSuccess) {\r\n        onClose();\r\n        reloadTable()\r\n      }\r\n      return;\r\n    })\r\n  };\r\n\r\n  const handleCancel = () => {\r\n    onClose();\r\n  };\r\n\r\n  const onLoad = () => {\r\n\r\n    getTechnicalById(id).then((res) => {\r\n      Object.keys(res.data).forEach(key => {\r\n        setValue(key, res.data[key])\r\n      })\r\n      getContactPersonById(res.data.customerId)\r\n      let technical = res.data.technicalRequirementTasks.map(x => {\r\n        return {\r\n          nameEmpMain: x.employee?.name,\r\n          empSupport: x.employeeSupporters.map(m => { return { label: m } }),\r\n          contentAssign: x.contentWork,\r\n          state: x.state\r\n        }\r\n      })\r\n      setTechnicalRequirementTasks(technical)\r\n\r\n    })\r\n\r\n  }\r\n\r\n  const onChangeCustomerPerson = (id) => {\r\n    let cus = infoCustomers.find(x => x.id === id)\r\n    setValue('customerPhone', cus.phone)\r\n    setValue('contactPersonPosition', cus.position)\r\n    // setValue('position', cus.position)\r\n  }\r\n\r\n  const onChangeCustomer = (customerId) => {\r\n    getContactPersonById(customerId)\r\n  };\r\n\r\n  const getContactPersonById = (customerId) => {\r\n\r\n    getContactPersonByCustomerId(customerId).then((res) => {\r\n      setInfoCustomers(res.data)\r\n      const options = mapToSelectOption(res.data)\r\n      setPersonContactOptions(options);\r\n    });\r\n  }\r\n\r\n  const getEmpOptions = () => {\r\n\r\n    // Lay all truong phong ky thuat\r\n    getEmployeesByPermissions({ permissionCodes: enums.PER.YEU_CAU_KI_THUAT_NHAN_YEU_CAU }).then((res) => {\r\n      const options = mapToSelectOption(res.data)\r\n      setEmpOptions(options);\r\n    });\r\n\r\n  }\r\n\r\n  useEffect(() => {\r\n    getCustomerDDL()\r\n    getEmpOptions()\r\n  }, []);\r\n\r\n  const getCustomerDDL = () => {\r\n    getCustomerDropdown().then((res) => {\r\n      const option = mapToSelectOption(res.data)\r\n      setCustomerOptions(option);\r\n    });\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (id && (mode === MODE.EDIT || mode === MODE.DETAIL)) {\r\n      onLoad()\r\n      setMode(MODE.DETAIL)\r\n    } else {\r\n      defaultValueInModeCreate()\r\n    }\r\n  }, [id])\r\n\r\n  const defaultValueInModeCreate = () => {\r\n    setValue('plannedStartDate', getToDay());\r\n    setValue('requirementDate', getToDay());\r\n  }\r\n\r\n  const getTitle = () => {\r\n    let title = \"Chi tiết yêu cầu Khách hàng\";\r\n\r\n    if (mode === MODE.CREATE) {\r\n      title = \"Tạo yêu cầu Khách hàng \"\r\n    }\r\n    if (mode === MODE.EDIT) {\r\n      title = \"Chỉnh sửa yêu cầu Khách hàng\"\r\n    }\r\n\r\n    return title;\r\n  }\r\n\r\n\r\n  return (\r\n    <>\r\n      <Modal\r\n        title={getTitle()}\r\n        open={isOpen}\r\n        form={form}\r\n        width={900}\r\n        onCancel={handleCancel}\r\n        className=\"modal-tech\"\r\n        footer={null}\r\n      >\r\n        <form className=\"form-tech\" onSubmit={handleSubmit(onSubmit)}>\r\n          {mode !== MODE.CREATE && (\r\n            <Row>\r\n              <Col span={24} className=\"btn-edit\">\r\n                <Button type=\"primary\" onClick={() => setMode(mode === MODE.EDIT ? MODE.DETAIL : MODE.EDIT)} >\r\n                  {mode === MODE.EDIT ? 'Chi tiết' : 'Chỉnh sửa'}\r\n                </Button>\r\n              </Col>\r\n            </Row>\r\n          )}\r\n          <Row>\r\n            <Col className='col-input' span={12}>\r\n              <SelectSearch\r\n                isTitleInline={mode === MODE.DETAIL}\r\n                isShowText={mode === MODE.DETAIL}\r\n                label=\"Tên Khách hàng\"\r\n                control={control}\r\n                name=\"customerId\"\r\n                options={customerOptions}\r\n                onChange={onChangeCustomer}\r\n                isRequired\r\n                errors={errors}\r\n              />\r\n            </Col>\r\n            <Col className='col-input' span={12}>\r\n              <SelectSearch\r\n                isTitleInline={mode === MODE.DETAIL}\r\n                isShowText={mode === MODE.DETAIL}\r\n                label=\"Người liên hệ\"\r\n                control={control}\r\n                // name=\"requirementPersonId\"\r\n                name=\"contactPersonId\"\r\n                options={personContactOptions}\r\n                onChange={onChangeCustomerPerson}\r\n                isRequired\r\n                errors={errors}\r\n              />\r\n            </Col>\r\n          </Row>\r\n          <Row>\r\n            <Col className='col-input' span={12}>\r\n              <InputCustom\r\n                isTitleInline={mode === MODE.DETAIL}\r\n                isShowText={mode === MODE.DETAIL}\r\n                label=\"Ngày yêu cầu\"\r\n                control={control}\r\n                type=\"date\"\r\n                name=\"requirementDate\"\r\n                isRequired\r\n                errors={errors}\r\n              />\r\n            </Col>\r\n            <Col className='col-input' span={12}>\r\n              <InputCustom\r\n                isTitleInline={mode === MODE.DETAIL}\r\n                isShowText={mode === MODE.DETAIL}\r\n                label=\"Chức vụ\"\r\n                control={control}\r\n                type=\"text\"\r\n                name=\"contactPersonPosition\"\r\n                errors={errors}\r\n              />\r\n            </Col>\r\n            <Col className='col-input' span={24}>\r\n              <InputCustom\r\n                isTitleInline={mode === MODE.DETAIL}\r\n                isShowText={mode === MODE.DETAIL}\r\n                label=\"Địa chỉ\"\r\n                control={control}\r\n                type=\"text\"\r\n                name=\"customerAddress\"\r\n                errors={errors}\r\n              />\r\n            </Col>\r\n          </Row>\r\n          <Row>\r\n            <Col className='col-input' span={12}>\r\n              <SelectSearch\r\n                isTitleInline={mode === MODE.DETAIL}\r\n                isShowText={mode === MODE.DETAIL}\r\n                label=\"Người nhận yêu cầu\"\r\n                control={control}\r\n                name=\"requestRecipientId\"\r\n                options={empOptions}\r\n                isRequired\r\n                errors={errors}\r\n              />\r\n            </Col>\r\n            <Col className='col-input' span={12}>\r\n              <SelectSearch\r\n                isTitleInline={mode === MODE.DETAIL}\r\n                isShowText={mode === MODE.DETAIL}\r\n                label=\"Loại\"\r\n                control={control}\r\n                name=\"type\"\r\n                isRequired\r\n                options={enums.listResultType}\r\n                errors={errors}\r\n              />\r\n            </Col>\r\n          </Row>\r\n          <Row>\r\n            <Col className='col-input' span={12}>\r\n              <InputCustom\r\n                isTitleInline={mode === MODE.DETAIL}\r\n                isShowText={mode === MODE.DETAIL}\r\n                label=\"Chọn ngày\"\r\n                control={control}\r\n                type=\"date\"\r\n                name=\"plannedStartDate\"\r\n                isRequired\r\n                errors={errors}\r\n              />\r\n            </Col>\r\n            <Col className='col-input' span={12}>\r\n              <InputCustom\r\n                isTitleInline={mode === MODE.DETAIL}\r\n                isShowText={mode === MODE.DETAIL}\r\n                label=\"Điện thoại\"\r\n                control={control}\r\n                type=\"text\"\r\n                name=\"customerPhone\"\r\n                isRequired\r\n                errors={errors}\r\n              />\r\n            </Col>\r\n            <Col className='col-input' span={24}>\r\n              <InputCustom\r\n                TitleInline={mode === MODE.DETAIL}\r\n                isShowText={mode === MODE.DETAIL}\r\n                label=\"Nội dung yêu cầu\"\r\n                control={control}\r\n                type=\"textarea\"\r\n                rows={3}\r\n                name=\"contentRequirement\"\r\n                isRequired\r\n                errors={errors}\r\n              />\r\n            </Col>\r\n            {mode === MODE.DETAIL && (\r\n              <Col className='col-input' span={24}>\r\n                <EmployeeAssign\r\n                  originData={technicalRequirementTasks}\r\n                  rowKey=\"id\"\r\n                  hideButton\r\n                />\r\n              </Col>\r\n            )}\r\n          </Row>\r\n\r\n          <div className=\"my-modal-footer\">\r\n            <Button key=\"back\" onClick={handleCancel}>\r\n              Hủy\r\n            </Button>\r\n            {mode !== MODE.DETAIL && (\r\n              <Button key=\"submit\" type=\"primary\" htmlType=\"submit\">\r\n                Lưu\r\n              </Button>\r\n            )}\r\n          </div>\r\n        </form>\r\n      </Modal >\r\n    </>\r\n  );\r\n};\r\n\r\nCreateAndUpdate.propTypes = {};\r\nexport default CreateAndUpdate;\r\n","/* eslint-disable react/prop-types */\r\nimport React, { useEffect, useState, useContext } from 'react';\r\nimport { Button, Modal, Row, Col, Form } from 'antd';\r\nimport { formatDateYMD } from 'utils/format';\r\nimport _ from 'lodash';\r\nimport { yupResolver } from '@hookform/resolvers/yup';\r\nimport { useForm } from 'react-hook-form';\r\nimport * as yup from 'yup';\r\nimport InputCustom from 'components/input/inputCustom';\r\nimport \"./index.less\"\r\nimport SelectSearch from 'components/input/selectSearch';\r\nimport { createtech, getTechnicalById } from 'services/dealers/dealers.service';\r\nimport { MODE } from 'constants/mode.cost';\r\nimport { getToDay } from 'utils/dateUtils';\r\nimport { valRequired } from 'utils/validate/validateUtils';\r\nimport { TechnicalBusinessRequestContext } from '../context/technicalBusinessRequest';\r\nimport { formatDDMMYYYY, today, getDateFormat, DateTimeToDate } from 'utils/formatDate';\r\nimport * as enums from 'common/enum';\r\nimport { assignTaskTechnicalBusinesss, createTechnicalBusiness, getTechnicalBusinessById } from 'services/technicalBusiness/requestService';\r\nimport { getCustomerDropdown } from 'services/customer';\r\nimport { getContactPersonByCustomerId } from 'services/contact-person';\r\nimport { mapToSelectOption } from 'utils/utils';\r\nimport { getEmployeeDropDown, getEmployeesByPermissions } from 'services/employee';\r\nimport EmployeeAssign from './EmployeeAssign';\r\nimport { STATUS_TASK } from 'pages/dealers/enum';\r\n\r\nconst AssignPopup = (props) => {\r\n  const { idRequest, isOpen, onClose, reloadTable, technicalRequirementTasks } = props;\r\n  const [form] = Form.useForm();\r\n  const schema = yup.object().shape({\r\n    empMainId: valRequired(yup),\r\n    contentAssign: valRequired(yup)\r\n  });\r\n  const {\r\n    control,\r\n    handleSubmit,\r\n    setValue,\r\n    watch,\r\n    reset,\r\n    formState: { errors },\r\n  } = useForm({ mode: 'onChange', resolver: yupResolver(schema) });\r\n  const [mode, setMode] = useState(MODE.EDIT)\r\n  const [customerOptions, setCustomerOptions] = useState([])\r\n  const [personContactOptions, setPersonContactOptions] = useState([])\r\n  const [employeeOptions, setEmployeeOptions] = useState([])\r\n  const [employeeSupportOptions, setEmployeeSupportOptions] = useState([])\r\n  const [listAssignEmp, setListAssignEmp] = useState([])\r\n  const [test, setTest] = useState({})\r\n  const [idReq, setIdReq] = useState(null)\r\n\r\n  useEffect(() => {\r\n    getTechnicalById(idRequest).then((res) => {\r\n      setIdReq(res.data.id)\r\n      let technical = res.data.technicalRequirementTasks.map(x => {\r\n        return {\r\n          ...x,\r\n          nameEmpMain: x.employee?.name,\r\n          empSupport: x.employeeSupporters.map(m => { return { label: m } }),\r\n          contentAssign: x.contentWork,\r\n          isDelete: false,\r\n          state: x.state,\r\n          reject: x.rejectRemarks\r\n        }\r\n      })\r\n      if (technical.length > 0) {\r\n        setListAssignEmp(technical)\r\n      }\r\n    })\r\n\r\n\r\n  }, [idRequest])\r\n\r\n  const onSubmit = (data) => {\r\n    let request = {\r\n      ...data,\r\n      type: Number(data.type),\r\n      startDate: formatDateYMD(data.startDate),\r\n      dueDate: formatDateYMD(data.dueDate),\r\n      nameEmpMain: employeeOptions.find(x => x.value === data.empMainId).label,\r\n      isDelete: true,\r\n      state: STATUS_TASK.THEM_MOI\r\n    };\r\n\r\n    let assignEmp = _.cloneDeep(listAssignEmp)\r\n    assignEmp.push(request)\r\n    setListAssignEmp(assignEmp)\r\n    clearAll()\r\n  }\r\n\r\n  const clearAll = () => {\r\n    reset()\r\n    setValue('empMainId', '');\r\n    setValue('empSupport', '');\r\n    setValue('contentAssign', '');\r\n    defaultValueInModeCreate()\r\n  }\r\n\r\n  const handleCancel = () => {\r\n    onClose();\r\n  };\r\n\r\n  const saveOnServer = () => {\r\n    let listAssign = listAssignEmp.map(x => {\r\n      if (x.isDelete) {\r\n        return {\r\n          employeeId: x.empMainId,\r\n          employeeSupporterIds: x.empSupport.map(x => x.value).toString(),\r\n          dueDate: x.dueDate,\r\n          startDate: x.startDate,\r\n          contentWork: x.contentAssign\r\n        }\r\n      } else {\r\n        return {\r\n          id: x.id,\r\n          technicalRequirementId: x.technicalRequirementId,\r\n          employeeId: x.empMainId,\r\n          employeeSupporterIds: x.empSupport.map(x => x.value).toString(),\r\n          state: x.state,\r\n          rejectRemarks: x.rejectRemarks,\r\n          note: x.note,\r\n          role: x.role,\r\n          plannedStartDate: DateTimeToDate(x.plannedStartDate),\r\n          startDate: DateTimeToDate(x.startDate),\r\n          dueDate: DateTimeToDate(x.dueDate),\r\n          closedDate: DateTimeToDate(x.closedDate),\r\n          contentWork: x.contentAssign,\r\n          completedNote: x.completedNote,\r\n          completedDate: DateTimeToDate(x.completedDate),\r\n          technicalReportFileId: x.technicalReportFileId\r\n        }\r\n      }\r\n\r\n    })\r\n    // call API save all\r\n    let request = {\r\n      technicalRequirementId: idRequest,\r\n      inputs: listAssign\r\n    }\r\n    // if mode edit then add id edit\r\n    if (listAssignEmp.filter(x => !x.isDelete).length > 0) {\r\n      request.id = idReq\r\n    }\r\n\r\n    console.log(request)\r\n    assignTaskTechnicalBusinesss(request).then((res) => {\r\n      onClose();\r\n      reloadTable()\r\n    })\r\n  }\r\n\r\n  const onChangeCustomer = (customerId) => {\r\n    getContactPersonById(customerId)\r\n  };\r\n\r\n  const getContactPersonById = (customerId) => {\r\n    getContactPersonByCustomerId(customerId).then((res) => {\r\n      const options = mapToSelectOption(res.data)\r\n      setPersonContactOptions(options);\r\n    });\r\n  }\r\n\r\n  useEffect(() => {\r\n    getEmployeeDDL()\r\n  }, []);\r\n\r\n  const getEmployeeDDL = () => {\r\n    // lay tat ca nhan vien ky thuat bao gom ca truong phong\r\n    getEmployeesByPermissions({ permissionCodes: enums.PER.QUAN_LY_CONG_VIEC_XEM }).then((res) => {\r\n      const empOption = mapToSelectOption(res.data)\r\n      setEmployeeOptions(empOption);\r\n    });\r\n  }\r\n\r\n  useEffect(() => {\r\n\r\n    defaultValueInModeCreate()\r\n  }, [idRequest])\r\n\r\n  const defaultValueInModeCreate = () => {\r\n    setValue('startDate', getToDay());\r\n    setValue('dueDate', getToDay());\r\n  }\r\n\r\n  const getTitle = () => {\r\n    let title = \"Chi tiết yêu cầu Khách hàng\";\r\n\r\n    if (mode === MODE.CREATE) {\r\n      title = \"Tạo yêu cầu Khách hàng \"\r\n    }\r\n    if (mode === MODE.EDIT) {\r\n      title = \"Phân công\"\r\n    }\r\n\r\n    return title;\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (employeeSupportOptions.length === 0) {\r\n      let empMainId = watch('empMainId')\r\n      let cloneEmployeeOptions = _.cloneDeep(employeeOptions);\r\n      if (empMainId) {\r\n        setEmployeeSupportOptions(cloneEmployeeOptions.filter(x => x.value != empMainId))\r\n      }\r\n\r\n    }\r\n  }, [employeeSupportOptions]);\r\n\r\n\r\n  return (\r\n    <>\r\n      <Modal\r\n        title={getTitle()}\r\n        open={isOpen}\r\n        form={form}\r\n        width={1100}\r\n        onCancel={handleCancel}\r\n        className=\"modal-tech\"\r\n        footer={null}\r\n      >\r\n        <form className=\"form-tech\" onSubmit={handleSubmit(onSubmit)}>\r\n          <Row>\r\n            <Col span={24} className=\"btn-edit\">\r\n              <Button key=\"submit\" type=\"primary\" htmlType=\"submit\" >\r\n                Thêm\r\n              </Button>\r\n              {/* <Button onClick={() => { clearAll() }} >\r\n                clearAll\r\n              </Button> */}\r\n            </Col>\r\n          </Row>\r\n          <Row>\r\n            <Col className='col-input' span={12}>\r\n              <SelectSearch\r\n                isTitleInline={mode === MODE.DETAIL}\r\n                isShowText={mode === MODE.DETAIL}\r\n                label=\"Người chịu trách nhiệm chính\"\r\n                control={control}\r\n                name=\"empMainId\"\r\n\r\n                options={employeeOptions}\r\n                isRequired\r\n                errors={errors}\r\n                onChange={(id) => {\r\n                  setEmployeeSupportOptions([])\r\n\r\n                }}\r\n              />\r\n            </Col>\r\n            <Col className='col-input' span={12}>\r\n              <SelectSearch\r\n                isMulti\r\n                isTitleInline={mode === MODE.DETAIL}\r\n                isShowText={mode === MODE.DETAIL}\r\n                label=\"Người hổ trợ\"\r\n                defaultValue={test}\r\n                control={control}\r\n                name=\"empSupport\"\r\n                options={employeeSupportOptions}\r\n                errors={errors}\r\n                isDisabled={!(employeeSupportOptions.length > 0)}\r\n              />\r\n            </Col>\r\n          </Row>\r\n          <Row>\r\n            <Col className='col-input' span={12}>\r\n              <InputCustom\r\n                isTitleInline={mode === MODE.DETAIL}\r\n                isShowText={mode === MODE.DETAIL}\r\n                label=\"Ngày thực hiện\"\r\n                control={control}\r\n                type=\"date\"\r\n                name=\"startDate\"\r\n              />\r\n            </Col>\r\n            <Col className='col-input' span={12}>\r\n              <InputCustom\r\n                isTitleInline={mode === MODE.DETAIL}\r\n                isShowText={mode === MODE.DETAIL}\r\n                label=\"Ngày kết thúc\"\r\n                control={control}\r\n                type=\"date\"\r\n                name=\"dueDate\"\r\n              />\r\n            </Col>\r\n          </Row>\r\n          <Row>\r\n            <Col className='col-input' span={24}>\r\n              <InputCustom\r\n                TitleInline={mode === MODE.DETAIL}\r\n                isShowText={mode === MODE.DETAIL}\r\n                label=\"Nội dung công việc\"\r\n                control={control}\r\n                type=\"textarea\"\r\n                rows={3}\r\n                name=\"contentAssign\"\r\n                isRequired\r\n                errors={errors}\r\n              />\r\n            </Col>\r\n          </Row>\r\n          <Row>\r\n            <Col className='col-input' span={24}>\r\n              <EmployeeAssign\r\n                originData={listAssignEmp}\r\n                rowKey=\"id\"\r\n                handleChangeData={(newData) => { setListAssignEmp(newData) }}\r\n              />\r\n            </Col>\r\n          </Row>\r\n\r\n          <div className=\"my-modal-footer\">\r\n            <Button key=\"back\" onClick={handleCancel}>\r\n              Hủy\r\n            </Button>\r\n            {mode !== MODE.DETAIL && (\r\n              <Button disabled={listAssignEmp.filter(x => x.isDelete).length <= 0} type=\"primary\" onClick={() => saveOnServer()}>\r\n                Lưu\r\n              </Button>\r\n            )}\r\n          </div>\r\n        </form>\r\n      </Modal >\r\n    </>\r\n  );\r\n};\r\n\r\nAssignPopup.propTypes = {};\r\nexport default AssignPopup;\r\n","import React, { useContext, useEffect, useState } from 'react';\r\n\r\nimport { BLANK_VALUE, SEARCH_CRITERIA } from 'static/Constants';\r\nimport { BarsOutlined, ExclamationCircleOutlined } from '@ant-design/icons';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { PrimaryButton } from 'common/components/Buttons';\r\nimport Grid from 'components/Grid';\r\nimport HeaderPage from 'pages/home/header-page';\r\nimport PageWrapper from 'components/Layout/PageWrapper';\r\nimport { useDispatch } from 'react-redux';\r\nimport { PhanCong } from './technicalBusinessRequestPopup';\r\nimport { deleteTechnicalBusinesss, urlEndpointTableTechnicalBusiness } from 'services/technicalBusiness/requestService';\r\nimport { formatDDMMYYYY, today } from 'utils/formatDate';\r\nimport * as enums from 'common/enum';\r\nimport { Form, Modal } from 'antd';\r\nimport CreateAndUpdate from './createAndUpdate';\r\nimport * as actions from 'redux/global/actions';\r\nimport AssignPopup from './assignPopup';\r\nimport ButtonTooltip from 'common/components/Buttons/ButtonToolTip';\r\nimport { isAccessed } from 'utils/utils';\r\nconst TechnicalBusinessRequest = () => {\r\n\r\n  const [id, setId] = useState('');\r\n  const [isOpen, setIsOpen] = useState(false);\r\n  const [isOpenAssign, setIsOpenAssign] = useState(false);\r\n  const [idRequest, setIdRequest] = useState('');\r\n  const [technicalRequirementTasks, setTechnicalRequirementTasks] = useState([]);\r\n\r\n  const [form] = Form.useForm();\r\n  const dispatch = useDispatch();\r\n\r\n  const onClickDetail = (values) => {\r\n    setId(values.id);\r\n    setIsOpen(true);\r\n  };\r\n\r\n  const onClickPhanCong = (value) => {\r\n    setIsOpenAssign(true)\r\n    setIdRequest(value.id)\r\n    setTechnicalRequirementTasks(value.technicalRequirementTasks)\r\n  };\r\n\r\n  const onClickDelete = (values) => {\r\n    Modal.confirm({\r\n      title: 'Xác Nhận',\r\n      icon: <ExclamationCircleOutlined />,\r\n      content: 'Bạn có chắc chắn muốn xóa dòng dữ liệu đã chọn?',\r\n      okText: 'Xác Nhận',\r\n      cancelText: 'Hủy',\r\n      onOk: () => {\r\n        {\r\n          deleteTechnicalBusinesss(values).then((x) => {\r\n            readGrid(true);\r\n          });\r\n        }\r\n      },\r\n    });\r\n  };\r\n\r\n  const columns = [\r\n    {\r\n      title: 'Tên khách hàng',\r\n      dataIndex: 'customerId',\r\n      render: (value, recore) => {\r\n        return (\r\n          <>\r\n            <label>{recore.customer.name}</label>\r\n          </>\r\n        );\r\n      },\r\n    },\r\n    {\r\n      title: 'Ngày yêu cầu',\r\n      dataIndex: 'requirementDate',\r\n      render: (value) => {\r\n        return <label>{formatDDMMYYYY(value)}</label>;\r\n      },\r\n    },\r\n    {\r\n      title: 'Ngày thực hiện',\r\n      dataIndex: 'plannedStartDate',\r\n      render: (value) => {\r\n        return <label>{formatDDMMYYYY(value)}</label>;\r\n      },\r\n    },\r\n    // {\r\n    //   title: 'Nội dung',\r\n    //   dataIndex: 'contentRequirement',\r\n    // },\r\n    {\r\n      title: 'Người nhận yêu cầu',\r\n      dataIndex: ['requestRecipient', 'name'],\r\n    },\r\n    // {\r\n    //   title: 'Chức vụ',\r\n    //   dataIndex: 'code',\r\n    // },\r\n    // {\r\n    //   title: 'Điện thoại',\r\n    //   dataIndex: 'phone',\r\n    // },\r\n    {\r\n      title: 'Trạng thái',\r\n      dataIndex: 'state',\r\n      render: (value) => {\r\n        return <label>{value != null ? enums.TechnicalRequirementStateOptions[value].label : BLANK_VALUE}</label>;\r\n      },\r\n    },\r\n    // {\r\n    //   title: 'Người nhận yêu cầu',\r\n    //   dataIndex: 'technicalRequirementAssignments',\r\n    //   render: (values) => {\r\n    //     return (\r\n    //       <label>\r\n    //         {/* {values != [] ? values.find((x) => x.role == enums.TechnicalRequirementAssignmentRole.Mainer)?.employee?.name : BLANK_VALUE} */}\r\n    //       </label>\r\n    //     );\r\n    //   },\r\n    // },\r\n\r\n    {\r\n      title: '',\r\n      dataIndex: 'action',\r\n      render: (values, record) => (\r\n        <div className=\"wrapper-button\" style={{ textAlign: 'center', width: 'auto' }}>\r\n          <ButtonTooltip tip=\"Xem chi tiết\">\r\n            <PrimaryButton icon={<BarsOutlined />} onClick={() => onClickDetail(record)}></PrimaryButton>\r\n          </ButtonTooltip>\r\n          {record.state === 0 && isAccessed(enums.PER.YEU_CAU_KI_THUAT_NHAN_YEU_CAU) && (\r\n            <PrimaryButton onClick={() => onClickPhanCong(record)}>Phân công</PrimaryButton>\r\n          )}\r\n        </div>\r\n\r\n      ),\r\n      width: 35,\r\n    },\r\n  ];\r\n\r\n  const onCreate = () => {\r\n    setId('');\r\n    setIsOpen(true);\r\n  };\r\n\r\n  const readGrid = (refresh) => {\r\n    dispatch(actions.refreshGrid(refresh));\r\n  };\r\n  return (\r\n    <>\r\n      {isAccessed(enums.PER.YEU_CAU_KI_THUAT_XEM) && (\r\n        <div>\r\n          <div id=\"tech-page\">\r\n            <HeaderPage\r\n              title=\"YÊU CẦU KĨ THUẬT\"\r\n              actions=\"default\"\r\n              onCreate={() => onCreate()}\r\n              handleDelete={onClickDelete}\r\n              isShowActionAdd={isAccessed(enums.PER.YEU_CAU_KI_THUAT_THEM)}\r\n            />\r\n            <div className=\"main__application\">\r\n              <PageWrapper>\r\n                <Grid columns={columns} urlEndpoint={`${urlEndpointTableTechnicalBusiness}`} />\r\n              </PageWrapper>\r\n            </div>\r\n            {isOpenAssign && (\r\n              <AssignPopup\r\n                idRequest={idRequest}\r\n                isOpen={isOpenAssign}\r\n                technicalRequirementTasks={technicalRequirementTasks}\r\n                reloadTable={() => readGrid(true)}\r\n                form={form}\r\n                onClose={() => {\r\n                  setIdRequest('');\r\n                  setIsOpenAssign(false);\r\n                }}\r\n              />\r\n            )}\r\n\r\n            {isOpen && (\r\n              <CreateAndUpdate\r\n                id={id}\r\n                isOpen={isOpen}\r\n                reloadTable={() => readGrid(true)}\r\n                form={form}\r\n                onClose={() => {\r\n                  setId('');\r\n                  setIsOpen(false);\r\n                }}\r\n              />\r\n            )}\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n    </>\r\n  );\r\n};\r\n\r\nTechnicalBusinessRequest.propTypes = {};\r\n\r\nexport default TechnicalBusinessRequest;\r\n","import React from 'react';\r\nimport { TechnicalBusinessRequestProvider } from '../context/technicalBusinessRequest';\r\nimport TechnicalBusinessRequest from './technicalBusinessRequest';\r\n\r\nconst TechnicalBusinessRequestIndex = () => {\r\n  return (\r\n    <div>\r\n      <TechnicalBusinessRequestProvider>\r\n        <TechnicalBusinessRequest />\r\n      </TechnicalBusinessRequestProvider>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TechnicalBusinessRequestIndex;\r\n","import React from 'react';\r\nimport { Button } from 'antd';\r\nfunction PrimaryButton(props) {\r\n  return <Button type=\"primary\" size=\"small\" {...props} />;\r\n}\r\n\r\nPrimaryButton.propTypes = {};\r\n\r\nexport default PrimaryButton;\r\n","import React from 'react';\r\nimport { Button } from 'antd';\r\nfunction DangerButton(props) {\r\n  return <Button danger size=\"small\" {...props} />;\r\n}\r\n\r\nDangerButton.propTypes = {};\r\n\r\nexport default DangerButton;\r\n","import React from 'react';\r\nimport { Button } from 'antd';\r\nfunction DefaultButton(props) {\r\n  return <Button type=\"default\" size=\"small\" {...props} />;\r\n}\r\n\r\nDefaultButton.propTypes = {};\r\n\r\nexport default DefaultButton;\r\n","import React from 'react';\r\nimport DefaultButton from './PrimaryButton';\r\nimport { StopOutlined } from '@ant-design/icons';\r\n\r\nfunction ButtonCancel({ title = 'Thêm mới', ...rest }) {\r\n  return (\r\n    <DefaultButton icon={<StopOutlined />} {...rest}>\r\n      {title}\r\n    </DefaultButton>\r\n  );\r\n}\r\n\r\nButtonCancel.propTypes = {};\r\n\r\nexport default ButtonCancel;\r\n","import React from 'react';\r\nimport DangerButton from './DangerButton';\r\nimport { DeleteOutlined } from '@ant-design/icons';\r\n\r\nfunction ButtonDelete({ title = '', ...rest }) {\r\n  return (\r\n    <DangerButton icon={<DeleteOutlined />} {...rest}>\r\n      {title}\r\n    </DangerButton>\r\n  );\r\n}\r\n\r\nButtonDelete.propTypes = {};\r\n\r\nexport default ButtonDelete;\r\n","import React from 'react';\r\nimport { EditOutlined } from '@ant-design/icons';\r\nimport DefaultButton from './DefaultButton';\r\n\r\nfunction ButtonEdit({ title = '', ...rest }) {\r\n  return (\r\n    <DefaultButton icon={<EditOutlined />} {...rest}>\r\n      {title}\r\n    </DefaultButton>\r\n  );\r\n}\r\n\r\nButtonEdit.propTypes = {};\r\n\r\nexport default ButtonEdit;\r\n","import moment from \"moment\";\r\n\r\nexport const formatCurrency = (number) => {\r\n  if (Number.isNaN(number) || !number || number === null) {\r\n    number = 0;\r\n  }\r\n  let vnd = new Intl.NumberFormat('vi-VN', {\r\n    style: 'currency',\r\n    currency: 'VND',\r\n  });\r\n  return vnd.format(number).replaceAll('₫', '');\r\n};\r\n\r\nexport const formatCurrencyInput = (numberString) => {\r\n  let number = numberString.replaceAll('.', '');\r\n  return Number(number);\r\n};\r\n\r\nexport const formatDateYMD = (date) => {\r\n  let myDate = moment(date);\r\n  return moment.isMoment(myDate) ? myDate?.format('YYYY-MM-DD') : myDate\r\n}\r\n","import arrayWithoutHoles from \"./arrayWithoutHoles\";\nimport iterableToArray from \"./iterableToArray\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray\";\nimport nonIterableSpread from \"./nonIterableSpread\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"./arrayLikeToArray\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import moment from 'moment';\r\n\r\nexport const formatMDY = (data) => (data ? window.moment.utc(data).local().format('MM/DD/YYYY') : '');\r\n\r\nexport const customFormat = (data, format) => {\r\n  const date = window.moment.utc(data).local();\r\n  return date.isValid() ? date.format(format) : '';\r\n};\r\n\r\nexport const getDateFormat = (date) => {\r\n  const d = moment(date);\r\n  return date && d.isValid() ? d : '';\r\n};\r\n\r\nexport const startDMY = (data, type) => moment(data).startOf(type).toString();\r\n\r\nexport const endDMY = (data, type) => moment(data).endOf(type).toString();\r\n\r\nexport const formatMDYWithParam = (param) => (param && param.value ? formatMDY(param.value) : '');\r\nexport const formatMMDDYYYY = (data) => (data ? moment(data).format('MM/DD/YYYY') : '');\r\nexport const formatDDMMYYYY = (data) => (data ? moment(data).format('DD/MM/YYYY') : '');\r\n\r\nexport const formatTime = (data) => (data ? moment(data).format('HH:mm A') : '');\r\n\r\nexport const formatFullTime = (data) => (data ? moment(data).format('MM/DD/YYYY hh:mm A') : '');\r\n\r\nexport const exportToChatTime = (isoDate) => {\r\n  if (!isoDate) return;\r\n  const diff = moment(isoDate).diff(new Date(), 'hours');\r\n\r\n  let result;\r\n\r\n  if (-diff < 10) {\r\n    result = window.moment(isoDate).fromNow();\r\n  }\r\n\r\n  if (-diff >= 10) {\r\n    result = window.moment(isoDate).calendar();\r\n  }\r\n\r\n  return result;\r\n};\r\n\r\nexport const formattedFullTime = (data) => moment(data).format('YYYY-MM-DDTHH:mm:ss[Z]');\r\n\r\nexport const startISOTime = (data, typeView) => moment(data).startOf(typeView).toISOString();\r\n\r\nexport const endISOTime = (data, typeView) => moment(data).endOf(typeView).toISOString();\r\n\r\nexport const convertToISOTime = (data) => moment(data).toISOString();\r\n\r\nexport const getPreviousDays = (number) => moment().subtract(number, 'days');\r\nexport const getPrevious30Days = () => getPreviousDays(30);\r\n\r\nexport const today = () => moment();\r\n\r\n\r\nexport const DateTimeToDate = (dateString) => {\r\n  if (!dateString) return null\r\n\r\n  const date = new Date(dateString);\r\n  const formattedDate = date.toISOString().split('T')[0];\r\n  return formattedDate\r\n}\r\n\r\n","import produce from 'immer';\r\nimport * as types from './constants';\r\n\r\n// initial state\r\nexport const initialState = {\r\n  idSelections: [],\r\n  detailSelections: [],\r\n};\r\n\r\nconst gridViewReducer = (state = initialState, action) =>\r\n  produce(state, (draft) => {\r\n    switch (action.type) {\r\n      case types.SET_ITEM_ID_SELECTIONS:\r\n        draft.idSelections = action.payload;\r\n        break;\r\n      case types.SET_ITEM_DETAIL_SELECTIONS:\r\n        draft.detailSelections = action.payload;\r\n        break;\r\n    }\r\n  });\r\n\r\nexport default gridViewReducer;\r\n","export const SET_ITEM_ID_SELECTIONS = 'SET_ITEM_ID_SELECTIONS';\r\nexport const SET_ITEM_DETAIL_SELECTIONS = 'SET_ITEM_DETAIL_SELECTIONS';\r\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\n/**\n * Use invariant() to assert state which your program assumes to be true.\n *\n * Provide sprintf-style format (only %s is supported) and arguments\n * to provide information about what broke and what you were\n * expecting.\n *\n * The invariant message will be stripped in production, but the invariant\n * will remain to ensure logic does not differ in production.\n */\n\nvar invariant = function(condition, format, a, b, c, d, e, f) {\n  if (process.env.NODE_ENV !== 'production') {\n    if (format === undefined) {\n      throw new Error('invariant requires an error message argument');\n    }\n  }\n\n  if (!condition) {\n    var error;\n    if (format === undefined) {\n      error = new Error(\n        'Minified exception occurred; use the non-minified dev environment ' +\n        'for the full error message and additional helpful warnings.'\n      );\n    } else {\n      var args = [a, b, c, d, e, f];\n      var argIndex = 0;\n      error = new Error(\n        format.replace(/%s/g, function() { return args[argIndex++]; })\n      );\n      error.name = 'Invariant Violation';\n    }\n\n    error.framesToPop = 1; // we don't care about invariant's own frame\n    throw error;\n  }\n};\n\nmodule.exports = invariant;\n","import { Button, Divider, Space, Tooltip } from 'antd';\r\nimport React from 'react';\r\nconst ButtonTooltip = (props) => (\r\n  <>\r\n    <Space wrap>\r\n      <Tooltip title={props?.tip} color=\"blue\" key=\"blue\">\r\n        {props.children}\r\n      </Tooltip>\r\n    </Space>\r\n  </>\r\n);\r\nexport default ButtonTooltip;\r\n\r\n\r\n\r\n\r\n// import React from 'react';\r\n// import { Button } from 'antd';\r\n\r\n// function ButtonToolTip(props) {\r\n//   return <Button type=\"primary\" size=\"small\" {...props} />;\r\n// }\r\n\r\n// ButtonToolTip.propTypes = {};\r\n\r\n// export default ButtonToolTip;\r\n","export const mapToSelectOption = (data) => {\r\n  const options = data.map((x) => {\r\n    return {\r\n      value: x.id,\r\n      label: x.name,\r\n    };\r\n  });\r\n  return options\r\n};\r\n\r\nexport const isAccessed = (permissionsAction) => {\r\n  if (!permissionsAction) return\r\n\r\n  const userInfo = JSON.parse(localStorage.getItem('userInfo'))\r\n  const permissionsList = userInfo.permissions\r\n  if (permissionsList && permissionsList.length > 0) {\r\n    return permissionsList.includes(permissionsAction)\r\n  }\r\n\r\n  return false\r\n}\r\n","import React from 'react';\r\nimport classnames from 'classnames';\r\n\r\nimport './PageWrapper.less';\r\n\r\nfunction PageWrapper({ className, children, ...rest }) {\r\n  return (\r\n    <div className={classnames('section-wrapper', className)} {...rest}>\r\n      {children}\r\n    </div>\r\n  );\r\n}\r\n\r\nPageWrapper.propTypes = {};\r\n\r\nexport default PageWrapper;\r\n","import { createSelector } from 'reselect';\r\nimport { initialState } from './reducer';\r\n\r\nconst selectGridView = (state) => (state && state.tableView) || initialState;\r\n\r\nconst selectGridIdSelections = () => createSelector(selectGridView, (globalState) => globalState.idSelections);\r\n\r\nconst selectGridDetailSelections = () => createSelector(selectGridView, (globalState) => globalState.detailSelections);\r\n\r\nexport { selectGridView, selectGridIdSelections, selectGridDetailSelections };\r\n","import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Row, Col, Input, Button, Typography } from 'antd';\r\nimport { PlusCircleOutlined, BarsOutlined, FilterOutlined } from '@ant-design/icons';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { ButtonDelete, PrimaryButton } from 'common/components/Buttons';\r\n\r\nimport * as gridViewSelectors from 'components/Grid/controllers/selectors';\r\nimport { updateSearch } from 'redux/global/actions';\r\nimport './header.less';\r\n\r\nconst { Search } = Input;\r\n\r\nconst HeaderPage = ({\r\n  title = '',\r\n  actions = 'default',\r\n  onCreate,\r\n  handleDelete,\r\n  labelPrimaryBtn = \"\",\r\n  onPressPrimaryBtn = () => { },\r\n  isFilter = false,\r\n  onFilter,\r\n  isHideAction = false,\r\n  isShowActionDelete = true,\r\n  isShowActionAdd = true,\r\n}) => {\r\n  const dispatch = useDispatch();\r\n  const itemSelections = useSelector(gridViewSelectors.selectGridIdSelections());\r\n\r\n  const onSearch = (text) => {\r\n    dispatch(updateSearch(text));\r\n  };\r\n\r\n\r\n  return (\r\n    <div className=\"header-page\">\r\n      <Row className=\"wrapper\" justify=\"space-around\" align=\"center\">\r\n        <Col className=\"header-page__title\">\r\n          <Typography.Title level={3}>{title}</Typography.Title>\r\n        </Col>\r\n        <Col flex={1} style={{ textAlign: 'right' }}>\r\n          {actions === 'default' ? (\r\n            <Row\r\n              style={{\r\n                display: 'flex',\r\n                flexWrap: 'nowrap',\r\n                gap: '16px',\r\n                justifyContent: 'end',\r\n              }}\r\n            >\r\n              <Search className=\"header-page__search\" placeholder=\"Tìm kiếm...\" onSearch={onSearch} enterButton />\r\n              {isFilter &&\r\n                (<Button type=\"primary\" onClick={() => onFilter()} icon={<FilterOutlined />}>\r\n                </Button>)\r\n              }\r\n              {isHideAction === false && (\r\n                <>\r\n                  {isShowActionAdd && (\r\n                    <Button type=\"primary\" onClick={() => onCreate()} icon={<PlusCircleOutlined />}>\r\n                      Thêm mới\r\n                    </Button>\r\n                  )}\r\n                  {!!labelPrimaryBtn && <PrimaryButton size=\"medium\" icon={<BarsOutlined />} onClick={onPressPrimaryBtn}>\r\n                    {labelPrimaryBtn}\r\n                  </PrimaryButton>}\r\n                  {isShowActionDelete && (\r\n                    <ButtonDelete\r\n                      size=\"medium\"\r\n                      onClick={() => handleDelete && handleDelete(itemSelections)}\r\n                      disabled={!itemSelections.length}\r\n                    >\r\n                      Xóa\r\n                    </ButtonDelete>\r\n                  )}\r\n                </>\r\n              )}\r\n            </Row>\r\n          ) : typeof actions === 'function' ? (\r\n            actions()\r\n          ) : null}\r\n        </Col>\r\n      </Row>\r\n    </div>\r\n  );\r\n};\r\n\r\nHeaderPage.propTypes = {\r\n  title: PropTypes.string,\r\n  actions: PropTypes.oneOfType([PropTypes.string, PropTypes.func, PropTypes.bool]),\r\n  onCreate: PropTypes.func,\r\n  handleDelete: PropTypes.func,\r\n  labelPrimaryBtn: PropTypes.string,\r\n  onPressPrimaryBtn: PropTypes.func,\r\n};\r\n\r\nexport default HeaderPage;\r\n","import * as types from './constants';\r\n\r\nexport function setItemIdSelections(items) {\r\n  return {\r\n    type: types.SET_ITEM_ID_SELECTIONS,\r\n    payload: items,\r\n  };\r\n}\r\nexport function setItemDetailSelections(items) {\r\n  return {\r\n    type: types.SET_ITEM_DETAIL_SELECTIONS,\r\n    payload: items,\r\n  };\r\n}\r\n","import React, { useContext, useReducer, useCallback } from 'react';\r\n\r\nconst ActionKind = {\r\n  SET_STATE: 'SET_STATE',\r\n  SET_DATA: 'SET_DATA',\r\n  SET_PAGE: 'SET_PAGE',\r\n  SET_TOTAL_PAGE: 'SET_TOTAL_PAGE',\r\n  SET_TOTAL_ELEMENT: 'SET_TOTAL_ELEMENT',\r\n  SET_LOADING: 'SET_LOADING',\r\n  SET_PAGESIZE: 'SET_PAGESIZE',\r\n  SET_SORT: 'SET_SORT',\r\n  SET_SEARCH_TEXT: 'SET_SEARCH_TEXT',\r\n};\r\n\r\nexport const initialState = {\r\n  data: [],\r\n  currentPage: 1,\r\n  totalPage: 1,\r\n  totalElement: 0,\r\n  pageSize: 10,\r\n  loading: false,\r\n  searchText: '',\r\n  sort: [\r\n    {\r\n      field: '',\r\n      order: '',\r\n    },\r\n  ],\r\n};\r\n\r\nconst store = React.createContext({\r\n  state: initialState,\r\n  setState: () => null,\r\n  setPage: () => null,\r\n  setTotalPage: () => null,\r\n  setData: () => null,\r\n  setTotalElement: () => null,\r\n  setLoading: () => null,\r\n  setPageSize: () => null,\r\n});\r\n\r\nconst { Provider } = store;\r\n\r\nconst TableProvider = ({ children, initState }) => {\r\n  const [state, dispatch] = useReducer(\r\n    (state, action) => {\r\n      switch (action.type) {\r\n        case ActionKind.SET_STATE:\r\n          return {\r\n            ...state,\r\n            ...action.payload,\r\n          };\r\n        case ActionKind.SET_DATA:\r\n          return {\r\n            ...state,\r\n            data: action.payload.data,\r\n          };\r\n        case ActionKind.SET_PAGE:\r\n          return {\r\n            ...state,\r\n            currentPage: action.payload.currentPage,\r\n          };\r\n        case ActionKind.SET_TOTAL_PAGE:\r\n          return {\r\n            ...state,\r\n            totalPage: action.payload.totalPage,\r\n          };\r\n        case ActionKind.SET_TOTAL_ELEMENT:\r\n          return {\r\n            ...state,\r\n            totalElement: action.payload.totalElement,\r\n          };\r\n        case ActionKind.SET_LOADING:\r\n          return {\r\n            ...state,\r\n            loading: action.payload.loading,\r\n          };\r\n        case ActionKind.SET_PAGESIZE:\r\n          return {\r\n            ...state,\r\n            pageSize: action.payload.pageSize,\r\n          };\r\n        case ActionKind.SET_SEARCH_TEXT:\r\n          return {\r\n            ...state,\r\n            searchText: action.payload.searchText,\r\n          };\r\n        case ActionKind.SET_SORT:\r\n          return {\r\n            ...state,\r\n            sort: action.payload.sort,\r\n          };\r\n        default:\r\n          return { ...state };\r\n      }\r\n    },\r\n    { ...initialState, ...initState },\r\n  );\r\n\r\n  const setState = useCallback((state) => {\r\n    dispatch({\r\n      type: ActionKind.SET_STATE,\r\n      payload: state,\r\n    });\r\n  }, []);\r\n\r\n  const setPage = useCallback((page) => {\r\n    dispatch({\r\n      type: ActionKind.SET_PAGE,\r\n      payload: {\r\n        currentPage: page,\r\n      },\r\n    });\r\n  }, []);\r\n\r\n  const setData = useCallback((data) => {\r\n    dispatch({\r\n      type: ActionKind.SET_DATA,\r\n      payload: {\r\n        data: data,\r\n      },\r\n    });\r\n  }, []);\r\n\r\n  const setTotalPage = useCallback((total) => {\r\n    dispatch({\r\n      type: ActionKind.SET_TOTAL_PAGE,\r\n      payload: {\r\n        totalPage: total,\r\n      },\r\n    });\r\n  }, []);\r\n\r\n  const setLoading = useCallback((val) => {\r\n    dispatch({\r\n      type: ActionKind.SET_LOADING,\r\n      payload: {\r\n        loading: val,\r\n      },\r\n    });\r\n  }, []);\r\n\r\n  const setTotalElement = useCallback((total) => {\r\n    dispatch({\r\n      type: ActionKind.SET_TOTAL_ELEMENT,\r\n      payload: {\r\n        totalElement: total,\r\n      },\r\n    });\r\n  }, []);\r\n\r\n  const setPageSize = useCallback((size) => {\r\n    dispatch({\r\n      type: ActionKind.SET_PAGESIZE,\r\n      payload: {\r\n        pageSize: size,\r\n      },\r\n    });\r\n  }, []);\r\n  const setSearchText = useCallback((searchText) => {\r\n    dispatch({\r\n      type: ActionKind.SET_SEARCH_TEXT,\r\n      payload: {\r\n        searchText: searchText,\r\n      },\r\n    });\r\n  }, []);\r\n  const setSort = useCallback((sort) => {\r\n    dispatch({\r\n      type: ActionKind.SET_SORT,\r\n      payload: {\r\n        sort: sort,\r\n      },\r\n    });\r\n  }, []);\r\n\r\n  return (\r\n    <Provider\r\n      value={{\r\n        state,\r\n        setState,\r\n        setPage,\r\n        setTotalPage,\r\n        setData,\r\n        setLoading,\r\n        setTotalElement,\r\n        setPageSize,\r\n        setSearchText,\r\n        setSort,\r\n      }}\r\n    >\r\n      {children}\r\n    </Provider>\r\n  );\r\n};\r\n\r\nexport default TableProvider;\r\n\r\n// HOC to wrap component with TableProvider\r\nexport function withTable(WrappedComponent, initState = initialState) {\r\n  const ComponentWithTableProvider = (props) => (\r\n    <TableProvider initState={initState}>\r\n      <WrappedComponent {...props} />\r\n    </TableProvider>\r\n  );\r\n  return ComponentWithTableProvider;\r\n}\r\n\r\nexport const useTable = () => useContext(store);\r\n","import React, { useEffect, useCallback, useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Table } from 'antd';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport clsx from 'classnames';\r\nimport { isArray } from 'lodash';\r\n\r\nimport * as api from 'config/axios';\r\nimport * as actions from 'redux/global/actions';\r\nimport reducer from './controllers/reducer';\r\n// import saga from './controllers/saga';\r\nimport * as gridViewActions from './controllers/actions';\r\nimport { useInjectReducer } from 'utils/common/injectedReducers';\r\n// import { useInjectSaga } from 'utils/common/injectSaga';\r\nimport { useTable, withTable } from 'hooks/useTable';\r\n\r\nimport './Grid.less';\r\nimport { formatCurrency } from 'utils/format';\r\n\r\nconst key = 'tableView';\r\n\r\nconst Grid = ({\r\n  className = '',\r\n  columns,\r\n  data,\r\n  expandedRowRender,\r\n  handleGetDetailSelections,\r\n  handleGetSelections,\r\n  hasRowSelected = true,\r\n  isHidePagination,\r\n  rowKey = 'id',\r\n  shouldSaveToStore = true,\r\n  shouldShowTotal = true,\r\n  urlEndpoint,\r\n  pageSize,\r\n  ...rest\r\n}) => {\r\n  useInjectReducer({ key, reducer });\r\n  // useInjectSaga({ key, saga });\r\n\r\n  const dispatch = useDispatch();\r\n  const searchText = useSelector((state) => state.global.searchText);\r\n  const readGrid = useSelector((state) => state.global.refreshGrid);\r\n  const filters = useSelector((state) => state.global.filters);\r\n\r\n  const [idsSelection, setIdsSelection] = useState([]);\r\n  const { state, setState, setLoading, setData } = useTable();\r\n  const [totalAmount, setTotalAmount] = useState('');\r\n\r\n  const resetState = () => {\r\n    dispatch(actions.refreshGrid(false));\r\n  };\r\n\r\n  const getSortItem = (sort) => {\r\n    let sorted = [];\r\n    sort.map((item) => {\r\n      if (item?.field) {\r\n        sorted.push({\r\n          fieldName: item.field,\r\n          isAscending: item.order === 'ascend',\r\n        });\r\n      }\r\n    });\r\n\r\n    return sorted;\r\n  };\r\n\r\n  const fetchData = useCallback(() => {\r\n    if (!urlEndpoint) return;\r\n    setLoading(true);\r\n\r\n    const params = {\r\n      pageSize: state.pageSize,\r\n      pageIndex: state.currentPage - 1,\r\n      searchText: state.searchText,\r\n      sort: getSortItem(state.sort),\r\n      fieldId: filters?.fields,\r\n      filter: [],\r\n    };\r\n\r\n    api\r\n      .sendGet(urlEndpoint, params)\r\n      .then((results) => {\r\n        if (results && results?.isSuccess) {\r\n          const data = results?.data || {};\r\n          setState({\r\n            data: data?.records,\r\n            currentPage: params?.pageIndex || 1,\r\n            totalElement: data?.total || 0,\r\n            loading: false,\r\n          });\r\n          setTotalAmount(results?.data?.totalAmount);\r\n        } else {\r\n          setState({\r\n            data: [],\r\n            totalElement: 0,\r\n          });\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        // eslint-disable-next-line no-console\r\n        console.log('err: ', err);\r\n      })\r\n      .finally(() => {\r\n        setLoading(false);\r\n      });\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [state.pageSize, state.sort, state.searchText, urlEndpoint, filters?.fields]);\r\n\r\n  useEffect(() => {\r\n    fetchData();\r\n  }, [dispatch, fetchData]);\r\n\r\n  useEffect(() => {\r\n    console.log('filtersfilters', filters);\r\n  }, [filters]);\r\n\r\n  useEffect(() => {\r\n    if (urlEndpoint) {\r\n      setState({\r\n        searchText: searchText,\r\n        currentPage: 1,\r\n      });\r\n    }\r\n  }, [searchText, setState, urlEndpoint]);\r\n\r\n  useEffect(() => {\r\n    if (readGrid) {\r\n      fetchData();\r\n      resetState();\r\n    }\r\n\r\n    return () => {\r\n      setIdsSelection([]);\r\n      dispatch(gridViewActions.setItemIdSelections([]));\r\n      dispatch(gridViewActions.setItemDetailSelections([]));\r\n    };\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [readGrid]);\r\n\r\n  useEffect(() => {\r\n    if (data && isArray(data)) {\r\n      setData(data);\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [JSON.stringify(data)]);\r\n\r\n  const onChange = (pagination, filters, sorter) => {\r\n    setState({\r\n      currentPage: pagination.current,\r\n      pageSize: pagination.pageSize,\r\n      sort: sorter ? [sorter] : [],\r\n    });\r\n  };\r\n\r\n  const rowSelection = {\r\n    selectedRowKeys: idsSelection,\r\n    onChange: (selectedRowKeys, selectedRows) => {\r\n      setIdsSelection(selectedRowKeys);\r\n      // handleCallback\r\n      handleGetSelections && handleGetSelections(selectedRowKeys);\r\n      handleGetDetailSelections && handleGetDetailSelections(selectedRows);\r\n\r\n      // save to redux gridView\r\n      if (shouldSaveToStore) {\r\n        dispatch(gridViewActions.setItemIdSelections(selectedRowKeys));\r\n        dispatch(gridViewActions.setItemDetailSelections(selectedRows));\r\n      }\r\n    },\r\n  };\r\n\r\n  const summary = () => (\r\n    <Table.Summary.Row>\r\n      {columns.map((x, index) => (\r\n        <>\r\n          <Table.Summary.Cell>{index === rest?.summaryNumberCol ? formatCurrency(totalAmount) : ''}</Table.Summary.Cell>\r\n        </>\r\n      ))}\r\n      <Table.Summary.Cell></Table.Summary.Cell>\r\n    </Table.Summary.Row>\r\n  );\r\n\r\n  return (\r\n    <div className={clsx('grid', className && className)}>\r\n      <Table\r\n        columns={columns}\r\n        dataSource={state.data}\r\n        onChange={onChange}\r\n        bordered\r\n        pagination={\r\n          isHidePagination\r\n            ? false\r\n            : {\r\n              defaultPageSize: pageSize ? pageSize : state.pageSize,\r\n              showSizeChanger: true,\r\n              pageSizeOptions: ['5', '10', '20', '50'],\r\n              total: state.totalElement,\r\n              showTotal: shouldShowTotal ? () => `Có ${state.totalElement} dữ liệu` : null,\r\n            }\r\n        }\r\n        loading={state.loading}\r\n        expandable={{\r\n          expandedRowRender,\r\n        }}\r\n        rowKey={rowKey}\r\n        rowSelection={hasRowSelected ? rowSelection : null}\r\n        scroll={{ x: '100%' }}\r\n        {...rest}\r\n        summary={(state.data.length > 0 && !!rest.summaryNumberCol) ? summary : () => { }}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nGrid.propTypes = {\r\n  className: PropTypes.string,\r\n  columns: PropTypes.array,\r\n  data: PropTypes.array,\r\n  expandedRowRender: PropTypes.any,\r\n  handleGetDetailSelections: PropTypes.func,\r\n  handleGetSelections: PropTypes.func,\r\n  hasRowSelected: PropTypes.bool,\r\n  isHidePagination: PropTypes.bool,\r\n  rowKey: PropTypes.string,\r\n  shouldSaveToStore: PropTypes.bool,\r\n  shouldShowTotal: PropTypes.bool,\r\n  urlEndpoint: PropTypes.oneOfType([PropTypes.string]),\r\n};\r\n\r\nexport default withTable(Grid);\r\n","import { conformsTo, isFunction, isObject } from 'lodash';\r\nimport invariant from 'invariant';\r\n\r\n/**\r\n * Validate the shape of redux store\r\n */\r\nexport default function checkStore(store) {\r\n  const shape = {\r\n    dispatch: isFunction,\r\n    subscribe: isFunction,\r\n    getState: isFunction,\r\n    replaceReducer: isFunction,\r\n    runSaga: isFunction,\r\n    injectedReducers: isObject,\r\n    injectedSagas: isObject,\r\n  };\r\n  invariant(conformsTo(store, shape), '(app/utils...) injectors: Expected a valid redux store');\r\n}\r\n","import invariant from 'invariant';\r\nimport { isEmpty, isFunction, isString } from 'lodash';\r\n\r\nimport checkStore from './checkStore';\r\nimport createReducer from '../../reducers';\r\n\r\nexport function injectReducerFactory(store, isValid) {\r\n  return function injectReducer(key, reducer) {\r\n    if (!isValid) checkStore(store);\r\n\r\n    invariant(\r\n      isString(key) && !isEmpty(key) && isFunction(reducer),\r\n      '(app/utils...) injectReducer: Expected `reducer` to be a reducer function',\r\n    );\r\n\r\n    // Check `store.injectedReducers[key] === reducer` for hot reloading when a key is the same but a reducer is different\r\n    if (Reflect.has(store.injectedReducers, key) && store.injectedReducers[key] === reducer) return;\r\n\r\n    store.injectedReducers[key] = reducer; // eslint-disable-line no-param-reassign\r\n    store.replaceReducer(createReducer(store.injectedReducers));\r\n  };\r\n}\r\n\r\nexport default function getInjectors(store) {\r\n  checkStore(store);\r\n\r\n  return {\r\n    injectReducer: injectReducerFactory(store, true),\r\n  };\r\n}\r\n","import React from 'react';\r\nimport hoistNonReactStatics from 'hoist-non-react-statics';\r\nimport { ReactReduxContext } from 'react-redux';\r\n\r\nimport getInjectors from './reducerInjectors';\r\n\r\n/**\r\n * Dynamically injects a reducer\r\n *\r\n * @param {string} key A key of the reducer\r\n * @param {function} reducer A reducer that will be injected\r\n *\r\n */\r\nexport default ({ key, reducer }) =>\r\n  (WrappedComponent) => {\r\n    class ReducerInjector extends React.Component {\r\n      static WrappedComponent = WrappedComponent;\r\n\r\n      static contextType = ReactReduxContext;\r\n\r\n      static displayName = `withReducer(${WrappedComponent.displayName || WrappedComponent.name || 'Component'})`;\r\n\r\n      constructor(props, context) {\r\n        super(props, context);\r\n\r\n        getInjectors(context.store).injectReducer(key, reducer);\r\n      }\r\n\r\n      render() {\r\n        return <WrappedComponent {...this.props} />;\r\n      }\r\n    }\r\n\r\n    return hoistNonReactStatics(ReducerInjector, WrappedComponent);\r\n  };\r\n\r\nconst useInjectReducer = ({ key, reducer }) => {\r\n  const context = React.useContext(ReactReduxContext);\r\n  React.useEffect(() => {\r\n    getInjectors(context.store).injectReducer(key, reducer);\r\n  }, [context.store, key, reducer]);\r\n};\r\n\r\nexport { useInjectReducer };\r\n","import * as api from '../../config/axios';\r\n\r\nexport const urlEndpointCustomer = '/api/customers/';\r\nexport const urlEndpointTableCustomer= '/api/customers';\r\n\r\nexport const getCustomerById = (id) => api.sendGet(urlEndpointCustomer + id);\r\n\r\nexport const getCustomers = (data) => api.sendGet(urlEndpointCustomer, data);\r\n\r\nexport const createCustomer = (payload) =>\r\n  api.sendPost(urlEndpointCustomer, {\r\n    id: payload.id,\r\n    input: payload,\r\n  });\r\n\r\nexport const updateCustomer = (payload) => api.sendPost(urlEndpointCustomer, payload);\r\n\r\nexport const deleteCustomers = (payload) => api.sendDelete(urlEndpointCustomer, { data: { ids: payload } });\r\n\r\nexport const getCustomerDropdown = () => api.sendGet(urlEndpointCustomer + 'dropdown');\r\n","/** @format */\r\n\r\nimport * as api from '../../config/axios';\r\nexport const urlEndpointEmployee = '/api/employees/';\r\nexport const urlEndpointTableEmployee = '/api/employees';\r\n\r\n\r\nexport const getEmployeeById = (id) => api.sendGet(urlEndpointEmployee + id);\r\n\r\nexport const getEmployeeDropDown = () => api.sendGet(urlEndpointEmployee + 'dropdown/');\r\n\r\nexport const getEmployees = (data) => api.sendGet(urlEndpointEmployee, data);\r\n\r\nexport const getEmployeesByPermissions = (data) => api.sendGet(urlEndpointEmployee + 'by-permissions', data);\r\n\r\nexport const createEmployee = (payload) =>\r\n  api.sendPost(urlEndpointEmployee, {\r\n    id: payload.id,\r\n    input: payload,\r\n  });\r\n\r\nexport const updateEmployee = (payload) => api.sendPost(urlEndpointEmployee, payload);\r\n\r\nexport const deleteEmployees = (payload) =>\r\n  api.sendDelete(urlEndpointEmployee, {\r\n    data: { ids: payload },\r\n  });\r\n","import '../../style/default.less';\nimport './index.less'; // deps-lint-skip: form","import * as React from 'react';\r\nimport { Controller } from 'react-hook-form';\r\nimport './input.less';\r\nimport _ from 'lodash';\r\nimport NumberFormat from 'react-number-format';\r\nimport { DatePicker, Form, Input, Typography } from 'antd';\r\nimport moment from 'moment';\r\nimport { formatDDMMYYYY, today } from 'utils/formatDate';\r\nimport { formatCurrency } from 'utils/format';\r\n\r\nconst { TextArea } = Input;\r\n\r\nconst InputCustom = (props) => {\r\n  let classErrors = props.className;\r\n  const renderErrorMessage = () => {\r\n    if (props.errors) {\r\n      let exists = Object.keys(props.errors).includes(props.name);\r\n\r\n      let mesError = props.errors[props.name]?.message;\r\n      classErrors = _.isEmpty(mesError) ? props.className : `${props.className} is-invalid`;\r\n\r\n      if (exists) {\r\n        return <span className=\"error-message invalid-feedback\">{props.errors[props.name]?.message} {props?.label?.toLowerCase()}</span>;\r\n      }\r\n    }\r\n    return <></>;\r\n  };\r\n\r\n  const renderLabel = () => {\r\n    return (\r\n      <>\r\n        {props?.label !== '' && (\r\n          <Typography.Text>\r\n            {props.isRequired && !props.isShowText && <span className=\"is-required\" >* </span>}\r\n            {`${props.label} :`}\r\n          </Typography.Text>\r\n        )}\r\n      </>\r\n    );\r\n  };\r\n\r\n  const renderContentDetailMode = (value) => {\r\n    if (!value) return \"\"\r\n    if (props.formatInput) {\r\n      return formatCurrency(value)\r\n    }\r\n    if (props.type === \"date\") {\r\n      return formatDDMMYYYY(value)\r\n    }\r\n    return value\r\n  }\r\n\r\n  const renderInputChild = (field) => {\r\n    if (props.isShowText) {\r\n      return <p className='text-mode-detail'>{renderContentDetailMode(field?.value)}</p>\r\n    }\r\n    if (props.formatInput) {\r\n      return (\r\n        <NumberFormat\r\n          customInput={Input}\r\n          className={`${classErrors}`}\r\n          {...props}\r\n          prefix={props.prefix}\r\n          defaultValue={field.value}\r\n          thousandSeparator={'.'}\r\n          decimalSeparator={','}\r\n          value={field.value}\r\n          onValueChange={(values) => {\r\n            field.onChange(values.value);\r\n          }}\r\n        />\r\n      );\r\n    }\r\n    if (props.type === 'textarea') {\r\n      return (\r\n        <TextArea\r\n          disabled={props.disabled}\r\n          label={props.label}\r\n          type={props.type}\r\n          className={classErrors}\r\n          {...props}\r\n          {...field}\r\n          defaultValue={field.value}\r\n          value={field.value}\r\n          onChange={(e) => {\r\n            field.onChange(e.target.value);\r\n            if (props?.onChange !== undefined) {\r\n              props.onChange(e);\r\n            }\r\n          }}\r\n        />\r\n      );\r\n    }\r\n    if (props.type === 'date') {\r\n      return (\r\n        // <DatePicker placeholder=\"Chọn ngày\" format={formatDDMMYYYY} defaultValue={today()} />\r\n        <DatePicker\r\n          format={formatDDMMYYYY}\r\n          disabled={props.disabled}\r\n          className={`input-custom ${classErrors}`}\r\n          placeholder=''\r\n          {...props}\r\n          {...field}\r\n          defaultValue={today()}\r\n          value={field.value !== \"\" ? moment(field.value) : today()}\r\n          onChange={(date, dateString) => {\r\n            field.onChange(date);\r\n            if (props?.onChange !== undefined) {\r\n              props.onChange(date);\r\n            }\r\n          }\r\n          }\r\n        />\r\n      );\r\n    }\r\n\r\n    return (\r\n      <Input\r\n        disabled={props.disabled}\r\n        label={props.label}\r\n        type={props.type}\r\n        className={`input-custom ${classErrors}`}\r\n        {...props}\r\n        {...field}\r\n        defaultValue={field.value}\r\n        value={field.value}\r\n        onChange={(e) => {\r\n          field.onChange(e.target.value);\r\n          if (props?.onChange !== undefined) {\r\n            props.onChange(e);\r\n          }\r\n        }}\r\n      />\r\n    );\r\n  };\r\n\r\n  const renderInput = () => {\r\n    return (\r\n      <>\r\n        <Form.Item style={{ width: props.isTitleInline ? 'calc(100% - 150px)' : '100%' }}>\r\n          <Controller\r\n            id={props.id}\r\n            name={props.name}\r\n            defaultValue={props.defaultValue}\r\n            control={props.control}\r\n            render={({ field }) => renderInputChild(field)}\r\n          />\r\n          <div className='ant-form-item-explain-error'>{renderErrorMessage()}</div>\r\n          {/* <div className=\"ant-form-item-explain-error\" style=\"\">{renderErrorMessage()}</div> */}\r\n        </Form.Item>\r\n      </>\r\n    );\r\n  };\r\n\r\n  const renderLayoutTitleInline = () => {\r\n    if (props.isTitleInline) {\r\n      return (\r\n        <>\r\n          <Input.Group compact>\r\n            <div style={{ width: '150px' }}>{renderLabel()}</div>\r\n            {renderInput()}\r\n          </Input.Group>\r\n        </>\r\n      );\r\n    }\r\n    return (\r\n      <>\r\n        {renderLabel()}\r\n        {renderInput()}\r\n        {/* {renderErrorMessage()} */}\r\n      </>\r\n    );\r\n  };\r\n\r\n  return <>{renderLayoutTitleInline()}</>;\r\n};\r\n\r\nexport default InputCustom;\r\n","export const valRequired = (yup) => {\r\n\treturn yup.string().required(\"Vui lòng nhập\");\r\n};\r\n\r\nexport const valPhone = (yup) => {\r\n\tconst phoneRegExp =\r\n\t\t/^((\\\\+[1-9]{1,4}[ \\\\-]*)|(\\\\([0-9]{2,3}\\\\)[ \\\\-]*)|([0-9]{2,4})[ \\\\-]*)*?[0-9]{3,4}?[ \\\\-]*[0-9]{3,4}?$/;\r\n\treturn yup\r\n\t\t.string()\r\n\t\t.matches(phoneRegExp, \"Số điện thoại không hợp lệ\")\r\n\t\t.required(\"Không được để trống\");\r\n};\r\n","// This icon file is generated automatically.\nvar UpOutlined = { \"icon\": { \"tag\": \"svg\", \"attrs\": { \"viewBox\": \"64 64 896 896\", \"focusable\": \"false\" }, \"children\": [{ \"tag\": \"path\", \"attrs\": { \"d\": \"M890.5 755.3L537.9 269.2c-12.8-17.6-39-17.6-51.7 0L133.5 755.3A8 8 0 00140 768h75c5.1 0 9.9-2.5 12.9-6.6L512 369.8l284.1 391.6c3 4.1 7.8 6.6 12.9 6.6h75c6.5 0 10.3-7.4 6.5-12.7z\" } }] }, \"name\": \"up\", \"theme\": \"outlined\" };\nexport default UpOutlined;\n","import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\n// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\nimport * as React from 'react';\nimport UpOutlinedSvg from \"@ant-design/icons-svg/es/asn/UpOutlined\";\nimport AntdIcon from '../components/AntdIcon';\n\nvar UpOutlined = function UpOutlined(props, ref) {\n  return /*#__PURE__*/React.createElement(AntdIcon, _objectSpread(_objectSpread({}, props), {}, {\n    ref: ref,\n    icon: UpOutlinedSvg\n  }));\n};\n\nUpOutlined.displayName = 'UpOutlined';\nexport default /*#__PURE__*/React.forwardRef(UpOutlined);","export function supportBigInt() {\n  return typeof BigInt === 'function';\n}","import { supportBigInt } from './supportUtil';\n/**\n * Format string number to readable number\n */\n\nexport function trimNumber(numStr) {\n  var str = numStr.trim();\n  var negative = str.startsWith('-');\n\n  if (negative) {\n    str = str.slice(1);\n  }\n\n  str = str // Remove decimal 0. `1.000` => `1.`, `1.100` => `1.1`\n  .replace(/(\\.\\d*[^0])0*$/, '$1') // Remove useless decimal. `1.` => `1`\n  .replace(/\\.0*$/, '') // Remove integer 0. `0001` => `1`, 000.1' => `.1`\n  .replace(/^0+/, '');\n\n  if (str.startsWith('.')) {\n    str = \"0\".concat(str);\n  }\n\n  var trimStr = str || '0';\n  var splitNumber = trimStr.split('.');\n  var integerStr = splitNumber[0] || '0';\n  var decimalStr = splitNumber[1] || '0';\n\n  if (integerStr === '0' && decimalStr === '0') {\n    negative = false;\n  }\n\n  var negativeStr = negative ? '-' : '';\n  return {\n    negative: negative,\n    negativeStr: negativeStr,\n    trimStr: trimStr,\n    integerStr: integerStr,\n    decimalStr: decimalStr,\n    fullStr: \"\".concat(negativeStr).concat(trimStr)\n  };\n}\nexport function isE(number) {\n  var str = String(number);\n  return !Number.isNaN(Number(str)) && str.includes('e');\n}\n/**\n * [Legacy] Convert 1e-9 to 0.000000001.\n * This may lose some precision if user really want 1e-9.\n */\n\nexport function getNumberPrecision(number) {\n  var numStr = String(number);\n\n  if (isE(number)) {\n    var precision = Number(numStr.slice(numStr.indexOf('e-') + 2));\n    var decimalMatch = numStr.match(/\\.(\\d+)/);\n\n    if (decimalMatch === null || decimalMatch === void 0 ? void 0 : decimalMatch[1]) {\n      precision += decimalMatch[1].length;\n    }\n\n    return precision;\n  }\n\n  return numStr.includes('.') && validateNumber(numStr) ? numStr.length - numStr.indexOf('.') - 1 : 0;\n}\n/**\n * Convert number (includes scientific notation) to -xxx.yyy format\n */\n\nexport function num2str(number) {\n  var numStr = String(number);\n\n  if (isE(number)) {\n    if (number > Number.MAX_SAFE_INTEGER) {\n      return String(supportBigInt() ? BigInt(number).toString() : Number.MAX_SAFE_INTEGER);\n    }\n\n    if (number < Number.MIN_SAFE_INTEGER) {\n      return String(supportBigInt() ? BigInt(number).toString() : Number.MIN_SAFE_INTEGER);\n    }\n\n    numStr = number.toFixed(getNumberPrecision(numStr));\n  }\n\n  return trimNumber(numStr).fullStr;\n}\nexport function validateNumber(num) {\n  if (typeof num === 'number') {\n    return !Number.isNaN(num);\n  } // Empty\n\n\n  if (!num) {\n    return false;\n  }\n\n  return (// Normal type: 11.28\n    /^\\s*-?\\d+(\\.\\d+)?\\s*$/.test(num) || // Pre-number: 1.\n    /^\\s*-?\\d+\\.\\s*$/.test(num) || // Post-number: .1\n    /^\\s*-?\\.\\d+\\s*$/.test(num)\n  );\n}\nexport function getDecupleSteps(step) {\n  var stepStr = typeof step === 'number' ? num2str(step) : trimNumber(step).fullStr;\n  var hasPoint = stepStr.includes('.');\n\n  if (!hasPoint) {\n    return step + '0';\n  }\n\n  return trimNumber(stepStr.replace(/(\\d)\\.(\\d)/g, '$1$2.')).fullStr;\n}","import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\n\n/* eslint-disable max-classes-per-file */\nimport { getNumberPrecision, isE, num2str, trimNumber, validateNumber } from './numberUtil';\nimport { supportBigInt } from './supportUtil';\n/**\n * We can remove this when IE not support anymore\n */\n\nexport var NumberDecimal = /*#__PURE__*/function () {\n  function NumberDecimal(value) {\n    _classCallCheck(this, NumberDecimal);\n\n    this.origin = '';\n    this.number = void 0;\n    this.empty = void 0;\n\n    if (!value && value !== 0 || !String(value).trim()) {\n      this.empty = true;\n      return;\n    }\n\n    this.origin = String(value);\n    this.number = Number(value);\n  }\n\n  _createClass(NumberDecimal, [{\n    key: \"negate\",\n    value: function negate() {\n      return new NumberDecimal(-this.toNumber());\n    }\n  }, {\n    key: \"add\",\n    value: function add(value) {\n      if (this.isInvalidate()) {\n        return new NumberDecimal(value);\n      }\n\n      var target = Number(value);\n\n      if (Number.isNaN(target)) {\n        return this;\n      }\n\n      var number = this.number + target; // [Legacy] Back to safe integer\n\n      if (number > Number.MAX_SAFE_INTEGER) {\n        return new NumberDecimal(Number.MAX_SAFE_INTEGER);\n      }\n\n      if (number < Number.MIN_SAFE_INTEGER) {\n        return new NumberDecimal(Number.MIN_SAFE_INTEGER);\n      }\n\n      var maxPrecision = Math.max(getNumberPrecision(this.number), getNumberPrecision(target));\n      return new NumberDecimal(number.toFixed(maxPrecision));\n    }\n  }, {\n    key: \"isEmpty\",\n    value: function isEmpty() {\n      return this.empty;\n    }\n  }, {\n    key: \"isNaN\",\n    value: function isNaN() {\n      return Number.isNaN(this.number);\n    }\n  }, {\n    key: \"isInvalidate\",\n    value: function isInvalidate() {\n      return this.isEmpty() || this.isNaN();\n    }\n  }, {\n    key: \"equals\",\n    value: function equals(target) {\n      return this.toNumber() === (target === null || target === void 0 ? void 0 : target.toNumber());\n    }\n  }, {\n    key: \"lessEquals\",\n    value: function lessEquals(target) {\n      return this.add(target.negate().toString()).toNumber() <= 0;\n    }\n  }, {\n    key: \"toNumber\",\n    value: function toNumber() {\n      return this.number;\n    }\n  }, {\n    key: \"toString\",\n    value: function toString() {\n      var safe = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;\n\n      if (!safe) {\n        return this.origin;\n      }\n\n      if (this.isInvalidate()) {\n        return '';\n      }\n\n      return num2str(this.number);\n    }\n  }]);\n\n  return NumberDecimal;\n}();\nexport var BigIntDecimal = /*#__PURE__*/function () {\n  /** BigInt will convert `0009` to `9`. We need record the len of decimal */\n  function BigIntDecimal(value) {\n    _classCallCheck(this, BigIntDecimal);\n\n    this.origin = '';\n    this.negative = void 0;\n    this.integer = void 0;\n    this.decimal = void 0;\n    this.decimalLen = void 0;\n    this.empty = void 0;\n    this.nan = void 0;\n\n    if (!value && value !== 0 || !String(value).trim()) {\n      this.empty = true;\n      return;\n    }\n\n    this.origin = String(value); // Act like Number convert\n\n    if (value === '-') {\n      this.nan = true;\n      return;\n    }\n\n    var mergedValue = value; // We need convert back to Number since it require `toFixed` to handle this\n\n    if (isE(mergedValue)) {\n      mergedValue = Number(mergedValue);\n    }\n\n    mergedValue = typeof mergedValue === 'string' ? mergedValue : num2str(mergedValue);\n\n    if (validateNumber(mergedValue)) {\n      var trimRet = trimNumber(mergedValue);\n      this.negative = trimRet.negative;\n      var numbers = trimRet.trimStr.split('.');\n      this.integer = BigInt(numbers[0]);\n      var decimalStr = numbers[1] || '0';\n      this.decimal = BigInt(decimalStr);\n      this.decimalLen = decimalStr.length;\n    } else {\n      this.nan = true;\n    }\n  }\n\n  _createClass(BigIntDecimal, [{\n    key: \"getMark\",\n    value: function getMark() {\n      return this.negative ? '-' : '';\n    }\n  }, {\n    key: \"getIntegerStr\",\n    value: function getIntegerStr() {\n      return this.integer.toString();\n    }\n  }, {\n    key: \"getDecimalStr\",\n    value: function getDecimalStr() {\n      return this.decimal.toString().padStart(this.decimalLen, '0');\n    }\n    /**\n     * Align BigIntDecimal with same decimal length. e.g. 12.3 + 5 = 1230000\n     * This is used for add function only.\n     */\n\n  }, {\n    key: \"alignDecimal\",\n    value: function alignDecimal(decimalLength) {\n      var str = \"\".concat(this.getMark()).concat(this.getIntegerStr()).concat(this.getDecimalStr().padEnd(decimalLength, '0'));\n      return BigInt(str);\n    }\n  }, {\n    key: \"negate\",\n    value: function negate() {\n      var clone = new BigIntDecimal(this.toString());\n      clone.negative = !clone.negative;\n      return clone;\n    }\n  }, {\n    key: \"add\",\n    value: function add(value) {\n      if (this.isInvalidate()) {\n        return new BigIntDecimal(value);\n      }\n\n      var offset = new BigIntDecimal(value);\n\n      if (offset.isInvalidate()) {\n        return this;\n      }\n\n      var maxDecimalLength = Math.max(this.getDecimalStr().length, offset.getDecimalStr().length);\n      var myAlignedDecimal = this.alignDecimal(maxDecimalLength);\n      var offsetAlignedDecimal = offset.alignDecimal(maxDecimalLength);\n      var valueStr = (myAlignedDecimal + offsetAlignedDecimal).toString(); // We need fill string length back to `maxDecimalLength` to avoid parser failed\n\n      var _trimNumber = trimNumber(valueStr),\n          negativeStr = _trimNumber.negativeStr,\n          trimStr = _trimNumber.trimStr;\n\n      var hydrateValueStr = \"\".concat(negativeStr).concat(trimStr.padStart(maxDecimalLength + 1, '0'));\n      return new BigIntDecimal(\"\".concat(hydrateValueStr.slice(0, -maxDecimalLength), \".\").concat(hydrateValueStr.slice(-maxDecimalLength)));\n    }\n  }, {\n    key: \"isEmpty\",\n    value: function isEmpty() {\n      return this.empty;\n    }\n  }, {\n    key: \"isNaN\",\n    value: function isNaN() {\n      return this.nan;\n    }\n  }, {\n    key: \"isInvalidate\",\n    value: function isInvalidate() {\n      return this.isEmpty() || this.isNaN();\n    }\n  }, {\n    key: \"equals\",\n    value: function equals(target) {\n      return this.toString() === (target === null || target === void 0 ? void 0 : target.toString());\n    }\n  }, {\n    key: \"lessEquals\",\n    value: function lessEquals(target) {\n      return this.add(target.negate().toString()).toNumber() <= 0;\n    }\n  }, {\n    key: \"toNumber\",\n    value: function toNumber() {\n      if (this.isNaN()) {\n        return NaN;\n      }\n\n      return Number(this.toString());\n    }\n  }, {\n    key: \"toString\",\n    value: function toString() {\n      var safe = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;\n\n      if (!safe) {\n        return this.origin;\n      }\n\n      if (this.isInvalidate()) {\n        return '';\n      }\n\n      return trimNumber(\"\".concat(this.getMark()).concat(this.getIntegerStr(), \".\").concat(this.getDecimalStr())).fullStr;\n    }\n  }]);\n\n  return BigIntDecimal;\n}();\nexport default function getMiniDecimal(value) {\n  // We use BigInt here.\n  // Will fallback to Number if not support.\n  if (supportBigInt()) {\n    return new BigIntDecimal(value);\n  }\n\n  return new NumberDecimal(value);\n}\n/**\n * Align the logic of toFixed to around like 1.5 => 2.\n * If set `cutOnly`, will just remove the over decimal part.\n */\n\nexport function toFixed(numStr, separatorStr, precision) {\n  var cutOnly = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;\n\n  if (numStr === '') {\n    return '';\n  }\n\n  var _trimNumber2 = trimNumber(numStr),\n      negativeStr = _trimNumber2.negativeStr,\n      integerStr = _trimNumber2.integerStr,\n      decimalStr = _trimNumber2.decimalStr;\n\n  var precisionDecimalStr = \"\".concat(separatorStr).concat(decimalStr);\n  var numberWithoutDecimal = \"\".concat(negativeStr).concat(integerStr);\n\n  if (precision >= 0) {\n    // We will get last + 1 number to check if need advanced number\n    var advancedNum = Number(decimalStr[precision]);\n\n    if (advancedNum >= 5 && !cutOnly) {\n      var advancedDecimal = getMiniDecimal(numStr).add(\"\".concat(negativeStr, \"0.\").concat('0'.repeat(precision)).concat(10 - advancedNum));\n      return toFixed(advancedDecimal.toString(), separatorStr, precision, cutOnly);\n    }\n\n    if (precision === 0) {\n      return numberWithoutDecimal;\n    }\n\n    return \"\".concat(numberWithoutDecimal).concat(separatorStr).concat(decimalStr.padEnd(precision, '0').slice(0, precision));\n  }\n\n  if (precisionDecimalStr === '.0') {\n    return numberWithoutDecimal;\n  }\n\n  return \"\".concat(numberWithoutDecimal).concat(precisionDecimalStr);\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\n/* eslint-disable react/no-unknown-property */\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport isMobile from \"rc-util/es/isMobile\";\n/**\n * When click and hold on a button - the speed of auto changing the value.\n */\n\nvar STEP_INTERVAL = 200;\n/**\n * When click and hold on a button - the delay before auto changing the value.\n */\n\nvar STEP_DELAY = 600;\nexport default function StepHandler(_ref) {\n  var prefixCls = _ref.prefixCls,\n      upNode = _ref.upNode,\n      downNode = _ref.downNode,\n      upDisabled = _ref.upDisabled,\n      downDisabled = _ref.downDisabled,\n      onStep = _ref.onStep;\n  // ======================== Step ========================\n  var stepTimeoutRef = React.useRef();\n  var onStepRef = React.useRef();\n  onStepRef.current = onStep; // We will interval update step when hold mouse down\n\n  var onStepMouseDown = function onStepMouseDown(e, up) {\n    e.preventDefault();\n    onStepRef.current(up); // Loop step for interval\n\n    function loopStep() {\n      onStepRef.current(up);\n      stepTimeoutRef.current = setTimeout(loopStep, STEP_INTERVAL);\n    } // First time press will wait some time to trigger loop step update\n\n\n    stepTimeoutRef.current = setTimeout(loopStep, STEP_DELAY);\n  };\n\n  var onStopStep = function onStopStep() {\n    clearTimeout(stepTimeoutRef.current);\n  };\n\n  React.useEffect(function () {\n    return onStopStep;\n  }, []); // ======================= Render =======================\n\n  if (isMobile()) {\n    return null;\n  }\n\n  var handlerClassName = \"\".concat(prefixCls, \"-handler\");\n  var upClassName = classNames(handlerClassName, \"\".concat(handlerClassName, \"-up\"), _defineProperty({}, \"\".concat(handlerClassName, \"-up-disabled\"), upDisabled));\n  var downClassName = classNames(handlerClassName, \"\".concat(handlerClassName, \"-down\"), _defineProperty({}, \"\".concat(handlerClassName, \"-down-disabled\"), downDisabled));\n  var sharedHandlerProps = {\n    unselectable: 'on',\n    role: 'button',\n    onMouseUp: onStopStep,\n    onMouseLeave: onStopStep\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"\".concat(handlerClassName, \"-wrap\")\n  }, /*#__PURE__*/React.createElement(\"span\", _extends({}, sharedHandlerProps, {\n    onMouseDown: function onMouseDown(e) {\n      onStepMouseDown(e, true);\n    },\n    \"aria-label\": \"Increase Value\",\n    \"aria-disabled\": upDisabled,\n    className: upClassName\n  }), upNode || /*#__PURE__*/React.createElement(\"span\", {\n    unselectable: \"on\",\n    className: \"\".concat(prefixCls, \"-handler-up-inner\")\n  })), /*#__PURE__*/React.createElement(\"span\", _extends({}, sharedHandlerProps, {\n    onMouseDown: function onMouseDown(e) {\n      onStepMouseDown(e, false);\n    },\n    \"aria-label\": \"Decrease Value\",\n    \"aria-disabled\": downDisabled,\n    className: downClassName\n  }), downNode || /*#__PURE__*/React.createElement(\"span\", {\n    unselectable: \"on\",\n    className: \"\".concat(prefixCls, \"-handler-down-inner\")\n  })));\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _typeof from \"@babel/runtime/helpers/esm/typeof\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _excluded = [\"prefixCls\", \"className\", \"style\", \"min\", \"max\", \"step\", \"defaultValue\", \"value\", \"disabled\", \"readOnly\", \"upHandler\", \"downHandler\", \"keyboard\", \"controls\", \"stringMode\", \"parser\", \"formatter\", \"precision\", \"decimalSeparator\", \"onChange\", \"onInput\", \"onPressEnter\", \"onStep\"];\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport KeyCode from \"rc-util/es/KeyCode\";\nimport { useLayoutUpdateEffect } from \"rc-util/es/hooks/useLayoutEffect\";\nimport { composeRef } from \"rc-util/es/ref\";\nimport getMiniDecimal, { toFixed } from './utils/MiniDecimal';\nimport StepHandler from './StepHandler';\nimport { getNumberPrecision, num2str, getDecupleSteps, validateNumber } from './utils/numberUtil';\nimport useCursor from './hooks/useCursor';\nimport useFrame from './hooks/useFrame';\n/**\n * We support `stringMode` which need handle correct type when user call in onChange\n * format max or min value\n * 1. if isInvalid return null\n * 2. if precision is undefined, return decimal\n * 3. format with precision\n *    I. if max > 0, round down with precision. Example: max= 3.5, precision=0  afterFormat: 3\n *    II. if max < 0, round up with precision. Example: max= -3.5, precision=0  afterFormat: -4\n *    III. if min > 0, round up with precision. Example: min= 3.5, precision=0  afterFormat: 4\n *    IV. if min < 0, round down with precision. Example: max= -3.5, precision=0  afterFormat: -3\n */\n\nvar getDecimalValue = function getDecimalValue(stringMode, decimalValue) {\n  if (stringMode || decimalValue.isEmpty()) {\n    return decimalValue.toString();\n  }\n\n  return decimalValue.toNumber();\n};\n\nvar getDecimalIfValidate = function getDecimalIfValidate(value) {\n  var decimal = getMiniDecimal(value);\n  return decimal.isInvalidate() ? null : decimal;\n};\n\nvar InputNumber = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  var _classNames;\n\n  var _props$prefixCls = props.prefixCls,\n      prefixCls = _props$prefixCls === void 0 ? 'rc-input-number' : _props$prefixCls,\n      className = props.className,\n      style = props.style,\n      min = props.min,\n      max = props.max,\n      _props$step = props.step,\n      step = _props$step === void 0 ? 1 : _props$step,\n      defaultValue = props.defaultValue,\n      value = props.value,\n      disabled = props.disabled,\n      readOnly = props.readOnly,\n      upHandler = props.upHandler,\n      downHandler = props.downHandler,\n      keyboard = props.keyboard,\n      _props$controls = props.controls,\n      controls = _props$controls === void 0 ? true : _props$controls,\n      stringMode = props.stringMode,\n      parser = props.parser,\n      formatter = props.formatter,\n      precision = props.precision,\n      decimalSeparator = props.decimalSeparator,\n      onChange = props.onChange,\n      onInput = props.onInput,\n      onPressEnter = props.onPressEnter,\n      onStep = props.onStep,\n      inputProps = _objectWithoutProperties(props, _excluded);\n\n  var inputClassName = \"\".concat(prefixCls, \"-input\");\n  var inputRef = React.useRef(null);\n\n  var _React$useState = React.useState(false),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      focus = _React$useState2[0],\n      setFocus = _React$useState2[1];\n\n  var userTypingRef = React.useRef(false);\n  var compositionRef = React.useRef(false);\n  var shiftKeyRef = React.useRef(false); // ============================ Value =============================\n  // Real value control\n\n  var _React$useState3 = React.useState(function () {\n    return getMiniDecimal(value !== null && value !== void 0 ? value : defaultValue);\n  }),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      decimalValue = _React$useState4[0],\n      setDecimalValue = _React$useState4[1];\n\n  function setUncontrolledDecimalValue(newDecimal) {\n    if (value === undefined) {\n      setDecimalValue(newDecimal);\n    }\n  } // ====================== Parser & Formatter ======================\n\n  /**\n   * `precision` is used for formatter & onChange.\n   * It will auto generate by `value` & `step`.\n   * But it will not block user typing.\n   *\n   * Note: Auto generate `precision` is used for legacy logic.\n   * We should remove this since we already support high precision with BigInt.\n   *\n   * @param number  Provide which number should calculate precision\n   * @param userTyping  Change by user typing\n   */\n\n\n  var getPrecision = React.useCallback(function (numStr, userTyping) {\n    if (userTyping) {\n      return undefined;\n    }\n\n    if (precision >= 0) {\n      return precision;\n    }\n\n    return Math.max(getNumberPrecision(numStr), getNumberPrecision(step));\n  }, [precision, step]); // >>> Parser\n\n  var mergedParser = React.useCallback(function (num) {\n    var numStr = String(num);\n\n    if (parser) {\n      return parser(numStr);\n    }\n\n    var parsedStr = numStr;\n\n    if (decimalSeparator) {\n      parsedStr = parsedStr.replace(decimalSeparator, '.');\n    } // [Legacy] We still support auto convert `$ 123,456` to `123456`\n\n\n    return parsedStr.replace(/[^\\w.-]+/g, '');\n  }, [parser, decimalSeparator]); // >>> Formatter\n\n  var inputValueRef = React.useRef('');\n  var mergedFormatter = React.useCallback(function (number, userTyping) {\n    if (formatter) {\n      return formatter(number, {\n        userTyping: userTyping,\n        input: String(inputValueRef.current)\n      });\n    }\n\n    var str = typeof number === 'number' ? num2str(number) : number; // User typing will not auto format with precision directly\n\n    if (!userTyping) {\n      var mergedPrecision = getPrecision(str, userTyping);\n\n      if (validateNumber(str) && (decimalSeparator || mergedPrecision >= 0)) {\n        // Separator\n        var separatorStr = decimalSeparator || '.';\n        str = toFixed(str, separatorStr, mergedPrecision);\n      }\n    }\n\n    return str;\n  }, [formatter, getPrecision, decimalSeparator]); // ========================== InputValue ==========================\n\n  /**\n   * Input text value control\n   *\n   * User can not update input content directly. It update with follow rules by priority:\n   *  1. controlled `value` changed\n   *    * [SPECIAL] Typing like `1.` should not immediately convert to `1`\n   *  2. User typing with format (not precision)\n   *  3. Blur or Enter trigger revalidate\n   */\n\n  var _React$useState5 = React.useState(function () {\n    var initValue = defaultValue !== null && defaultValue !== void 0 ? defaultValue : value;\n\n    if (decimalValue.isInvalidate() && ['string', 'number'].includes(_typeof(initValue))) {\n      return Number.isNaN(initValue) ? '' : initValue;\n    }\n\n    return mergedFormatter(decimalValue.toString(), false);\n  }),\n      _React$useState6 = _slicedToArray(_React$useState5, 2),\n      inputValue = _React$useState6[0],\n      setInternalInputValue = _React$useState6[1];\n\n  inputValueRef.current = inputValue; // Should always be string\n\n  function setInputValue(newValue, userTyping) {\n    setInternalInputValue(mergedFormatter( // Invalidate number is sometime passed by external control, we should let it go\n    // Otherwise is controlled by internal interactive logic which check by userTyping\n    // You can ref 'show limited value when input is not focused' test for more info.\n    newValue.isInvalidate() ? newValue.toString(false) : newValue.toString(!userTyping), userTyping));\n  } // >>> Max & Min limit\n\n\n  var maxDecimal = React.useMemo(function () {\n    return getDecimalIfValidate(max);\n  }, [max, precision]);\n  var minDecimal = React.useMemo(function () {\n    return getDecimalIfValidate(min);\n  }, [min, precision]);\n  var upDisabled = React.useMemo(function () {\n    if (!maxDecimal || !decimalValue || decimalValue.isInvalidate()) {\n      return false;\n    }\n\n    return maxDecimal.lessEquals(decimalValue);\n  }, [maxDecimal, decimalValue]);\n  var downDisabled = React.useMemo(function () {\n    if (!minDecimal || !decimalValue || decimalValue.isInvalidate()) {\n      return false;\n    }\n\n    return decimalValue.lessEquals(minDecimal);\n  }, [minDecimal, decimalValue]); // Cursor controller\n\n  var _useCursor = useCursor(inputRef.current, focus),\n      _useCursor2 = _slicedToArray(_useCursor, 2),\n      recordCursor = _useCursor2[0],\n      restoreCursor = _useCursor2[1]; // ============================= Data =============================\n\n  /**\n   * Find target value closet within range.\n   * e.g. [11, 28]:\n   *    3  => 11\n   *    23 => 23\n   *    99 => 28\n   */\n\n\n  var getRangeValue = function getRangeValue(target) {\n    // target > max\n    if (maxDecimal && !target.lessEquals(maxDecimal)) {\n      return maxDecimal;\n    } // target < min\n\n\n    if (minDecimal && !minDecimal.lessEquals(target)) {\n      return minDecimal;\n    }\n\n    return null;\n  };\n  /**\n   * Check value is in [min, max] range\n   */\n\n\n  var isInRange = function isInRange(target) {\n    return !getRangeValue(target);\n  };\n  /**\n   * Trigger `onChange` if value validated and not equals of origin.\n   * Return the value that re-align in range.\n   */\n\n\n  var triggerValueUpdate = function triggerValueUpdate(newValue, userTyping) {\n    var updateValue = newValue;\n    var isRangeValidate = isInRange(updateValue) || updateValue.isEmpty(); // Skip align value when trigger value is empty.\n    // We just trigger onChange(null)\n    // This should not block user typing\n\n    if (!updateValue.isEmpty() && !userTyping) {\n      // Revert value in range if needed\n      updateValue = getRangeValue(updateValue) || updateValue;\n      isRangeValidate = true;\n    }\n\n    if (!readOnly && !disabled && isRangeValidate) {\n      var numStr = updateValue.toString();\n      var mergedPrecision = getPrecision(numStr, userTyping);\n\n      if (mergedPrecision >= 0) {\n        updateValue = getMiniDecimal(toFixed(numStr, '.', mergedPrecision)); // When to fixed. The value may out of min & max range.\n        // 4 in [0, 3.8] => 3.8 => 4 (toFixed)\n\n        if (!isInRange(updateValue)) {\n          updateValue = getMiniDecimal(toFixed(numStr, '.', mergedPrecision, true));\n        }\n      } // Trigger event\n\n\n      if (!updateValue.equals(decimalValue)) {\n        setUncontrolledDecimalValue(updateValue);\n        onChange === null || onChange === void 0 ? void 0 : onChange(updateValue.isEmpty() ? null : getDecimalValue(stringMode, updateValue)); // Reformat input if value is not controlled\n\n        if (value === undefined) {\n          setInputValue(updateValue, userTyping);\n        }\n      }\n\n      return updateValue;\n    }\n\n    return decimalValue;\n  }; // ========================== User Input ==========================\n\n\n  var onNextPromise = useFrame(); // >>> Collect input value\n\n  var collectInputValue = function collectInputValue(inputStr) {\n    recordCursor(); // Update inputValue incase input can not parse as number\n\n    setInternalInputValue(inputStr); // Parse number\n\n    if (!compositionRef.current) {\n      var finalValue = mergedParser(inputStr);\n      var finalDecimal = getMiniDecimal(finalValue);\n\n      if (!finalDecimal.isNaN()) {\n        triggerValueUpdate(finalDecimal, true);\n      }\n    } // Trigger onInput later to let user customize value if they want do handle something after onChange\n\n\n    onInput === null || onInput === void 0 ? void 0 : onInput(inputStr); // optimize for chinese input experience\n    // https://github.com/ant-design/ant-design/issues/8196\n\n    onNextPromise(function () {\n      var nextInputStr = inputStr;\n\n      if (!parser) {\n        nextInputStr = inputStr.replace(/。/g, '.');\n      }\n\n      if (nextInputStr !== inputStr) {\n        collectInputValue(nextInputStr);\n      }\n    });\n  }; // >>> Composition\n\n\n  var onCompositionStart = function onCompositionStart() {\n    compositionRef.current = true;\n  };\n\n  var onCompositionEnd = function onCompositionEnd() {\n    compositionRef.current = false;\n    collectInputValue(inputRef.current.value);\n  }; // >>> Input\n\n\n  var onInternalInput = function onInternalInput(e) {\n    collectInputValue(e.target.value);\n  }; // ============================= Step =============================\n\n\n  var onInternalStep = function onInternalStep(up) {\n    var _inputRef$current;\n\n    // Ignore step since out of range\n    if (up && upDisabled || !up && downDisabled) {\n      return;\n    } // Clear typing status since it may caused by up & down key.\n    // We should sync with input value.\n\n\n    userTypingRef.current = false;\n    var stepDecimal = getMiniDecimal(shiftKeyRef.current ? getDecupleSteps(step) : step);\n\n    if (!up) {\n      stepDecimal = stepDecimal.negate();\n    }\n\n    var target = (decimalValue || getMiniDecimal(0)).add(stepDecimal.toString());\n    var updatedValue = triggerValueUpdate(target, false);\n    onStep === null || onStep === void 0 ? void 0 : onStep(getDecimalValue(stringMode, updatedValue), {\n      offset: shiftKeyRef.current ? getDecupleSteps(step) : step,\n      type: up ? 'up' : 'down'\n    });\n    (_inputRef$current = inputRef.current) === null || _inputRef$current === void 0 ? void 0 : _inputRef$current.focus();\n  }; // ============================ Flush =============================\n\n  /**\n   * Flush current input content to trigger value change & re-formatter input if needed\n   */\n\n\n  var flushInputValue = function flushInputValue(userTyping) {\n    var parsedValue = getMiniDecimal(mergedParser(inputValue));\n    var formatValue = parsedValue;\n\n    if (!parsedValue.isNaN()) {\n      // Only validate value or empty value can be re-fill to inputValue\n      // Reassign the formatValue within ranged of trigger control\n      formatValue = triggerValueUpdate(parsedValue, userTyping);\n    } else {\n      formatValue = decimalValue;\n    }\n\n    if (value !== undefined) {\n      // Reset back with controlled value first\n      setInputValue(decimalValue, false);\n    } else if (!formatValue.isNaN()) {\n      // Reset input back since no validate value\n      setInputValue(formatValue, false);\n    }\n  };\n\n  var onKeyDown = function onKeyDown(event) {\n    var which = event.which,\n        shiftKey = event.shiftKey;\n    userTypingRef.current = true;\n\n    if (shiftKey) {\n      shiftKeyRef.current = true;\n    } else {\n      shiftKeyRef.current = false;\n    }\n\n    if (which === KeyCode.ENTER) {\n      if (!compositionRef.current) {\n        userTypingRef.current = false;\n      }\n\n      flushInputValue(false);\n      onPressEnter === null || onPressEnter === void 0 ? void 0 : onPressEnter(event);\n    }\n\n    if (keyboard === false) {\n      return;\n    } // Do step\n\n\n    if (!compositionRef.current && [KeyCode.UP, KeyCode.DOWN].includes(which)) {\n      onInternalStep(KeyCode.UP === which);\n      event.preventDefault();\n    }\n  };\n\n  var onKeyUp = function onKeyUp() {\n    userTypingRef.current = false;\n    shiftKeyRef.current = false;\n  }; // >>> Focus & Blur\n\n\n  var onBlur = function onBlur() {\n    flushInputValue(false);\n    setFocus(false);\n    userTypingRef.current = false;\n  }; // ========================== Controlled ==========================\n  // Input by precision\n\n\n  useLayoutUpdateEffect(function () {\n    if (!decimalValue.isInvalidate()) {\n      setInputValue(decimalValue, false);\n    }\n  }, [precision]); // Input by value\n\n  useLayoutUpdateEffect(function () {\n    var newValue = getMiniDecimal(value);\n    setDecimalValue(newValue);\n    var currentParsedValue = getMiniDecimal(mergedParser(inputValue)); // When user typing from `1.2` to `1.`, we should not convert to `1` immediately.\n    // But let it go if user set `formatter`\n\n    if (!newValue.equals(currentParsedValue) || !userTypingRef.current || formatter) {\n      // Update value as effect\n      setInputValue(newValue, userTypingRef.current);\n    }\n  }, [value]); // ============================ Cursor ============================\n\n  useLayoutUpdateEffect(function () {\n    if (formatter) {\n      restoreCursor();\n    }\n  }, [inputValue]); // ============================ Render ============================\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: classNames(prefixCls, className, (_classNames = {}, _defineProperty(_classNames, \"\".concat(prefixCls, \"-focused\"), focus), _defineProperty(_classNames, \"\".concat(prefixCls, \"-disabled\"), disabled), _defineProperty(_classNames, \"\".concat(prefixCls, \"-readonly\"), readOnly), _defineProperty(_classNames, \"\".concat(prefixCls, \"-not-a-number\"), decimalValue.isNaN()), _defineProperty(_classNames, \"\".concat(prefixCls, \"-out-of-range\"), !decimalValue.isInvalidate() && !isInRange(decimalValue)), _classNames)),\n    style: style,\n    onFocus: function onFocus() {\n      setFocus(true);\n    },\n    onBlur: onBlur,\n    onKeyDown: onKeyDown,\n    onKeyUp: onKeyUp,\n    onCompositionStart: onCompositionStart,\n    onCompositionEnd: onCompositionEnd\n  }, controls && /*#__PURE__*/React.createElement(StepHandler, {\n    prefixCls: prefixCls,\n    upNode: upHandler,\n    downNode: downHandler,\n    upDisabled: upDisabled,\n    downDisabled: downDisabled,\n    onStep: onInternalStep\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"\".concat(inputClassName, \"-wrap\")\n  }, /*#__PURE__*/React.createElement(\"input\", _extends({\n    autoComplete: \"off\",\n    role: \"spinbutton\",\n    \"aria-valuemin\": min,\n    \"aria-valuemax\": max,\n    \"aria-valuenow\": decimalValue.isInvalidate() ? null : decimalValue.toString(),\n    step: step\n  }, inputProps, {\n    ref: composeRef(inputRef, ref),\n    className: inputClassName,\n    value: inputValue,\n    onChange: onInternalInput,\n    disabled: disabled,\n    readOnly: readOnly\n  }))));\n});\nInputNumber.displayName = 'InputNumber';\nexport default InputNumber;","import { useRef } from 'react';\nimport warning from \"rc-util/es/warning\";\n/**\n * Keep input cursor in the correct position if possible.\n * Is this necessary since we have `formatter` which may mass the content?\n */\n\nexport default function useCursor(input, focused) {\n  var selectionRef = useRef(null);\n\n  function recordCursor() {\n    // Record position\n    try {\n      var start = input.selectionStart,\n          end = input.selectionEnd,\n          value = input.value;\n      var beforeTxt = value.substring(0, start);\n      var afterTxt = value.substring(end);\n      selectionRef.current = {\n        start: start,\n        end: end,\n        value: value,\n        beforeTxt: beforeTxt,\n        afterTxt: afterTxt\n      };\n    } catch (e) {// Fix error in Chrome:\n      // Failed to read the 'selectionStart' property from 'HTMLInputElement'\n      // http://stackoverflow.com/q/21177489/3040605\n    }\n  }\n  /**\n   * Restore logic:\n   *  1. back string same\n   *  2. start string same\n   */\n\n\n  function restoreCursor() {\n    if (input && selectionRef.current && focused) {\n      try {\n        var value = input.value;\n        var _selectionRef$current = selectionRef.current,\n            beforeTxt = _selectionRef$current.beforeTxt,\n            afterTxt = _selectionRef$current.afterTxt,\n            start = _selectionRef$current.start;\n        var startPos = value.length;\n\n        if (value.endsWith(afterTxt)) {\n          startPos = value.length - selectionRef.current.afterTxt.length;\n        } else if (value.startsWith(beforeTxt)) {\n          startPos = beforeTxt.length;\n        } else {\n          var beforeLastChar = beforeTxt[start - 1];\n          var newIndex = value.indexOf(beforeLastChar, start - 1);\n\n          if (newIndex !== -1) {\n            startPos = newIndex + 1;\n          }\n        }\n\n        input.setSelectionRange(startPos, startPos);\n      } catch (e) {\n        warning(false, \"Something warning of cursor restore. Please fire issue about this: \".concat(e.message));\n      }\n    }\n  }\n\n  return [recordCursor, restoreCursor];\n}","import { useRef, useEffect } from 'react';\nimport raf from \"rc-util/es/raf\";\n/**\n * Always trigger latest once when call multiple time\n */\n\nexport default (function () {\n  var idRef = useRef(0);\n\n  var cleanUp = function cleanUp() {\n    raf.cancel(idRef.current);\n  };\n\n  useEffect(function () {\n    return cleanUp;\n  }, []);\n  return function (callback) {\n    cleanUp();\n    idRef.current = raf(function () {\n      callback();\n    });\n  };\n});","import InputNumber from './InputNumber';\nexport default InputNumber;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _typeof from \"@babel/runtime/helpers/esm/typeof\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\n\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) {\n    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  }\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n\nimport DownOutlined from \"@ant-design/icons/es/icons/DownOutlined\";\nimport UpOutlined from \"@ant-design/icons/es/icons/UpOutlined\";\nimport classNames from 'classnames';\nimport RcInputNumber from 'rc-input-number';\nimport * as React from 'react';\nimport { useContext } from 'react';\nimport { ConfigContext } from '../config-provider';\nimport DisabledContext from '../config-provider/DisabledContext';\nimport SizeContext from '../config-provider/SizeContext';\nimport { FormItemInputContext, NoFormStyle } from '../form/context';\nimport { cloneElement } from '../_util/reactNode';\nimport { getMergedStatus, getStatusClassNames } from '../_util/statusUtils';\nvar InputNumber = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  var _classNames;\n\n  var _React$useContext = React.useContext(ConfigContext),\n      getPrefixCls = _React$useContext.getPrefixCls,\n      direction = _React$useContext.direction;\n\n  var size = React.useContext(SizeContext);\n\n  var _React$useState = React.useState(false),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      focused = _React$useState2[0],\n      setFocus = _React$useState2[1];\n\n  var inputRef = React.useRef(null);\n  React.useImperativeHandle(ref, function () {\n    return inputRef.current;\n  });\n\n  var className = props.className,\n      customizeSize = props.size,\n      customDisabled = props.disabled,\n      customizePrefixCls = props.prefixCls,\n      addonBefore = props.addonBefore,\n      addonAfter = props.addonAfter,\n      prefix = props.prefix,\n      _props$bordered = props.bordered,\n      bordered = _props$bordered === void 0 ? true : _props$bordered,\n      readOnly = props.readOnly,\n      customStatus = props.status,\n      controls = props.controls,\n      others = __rest(props, [\"className\", \"size\", \"disabled\", \"prefixCls\", \"addonBefore\", \"addonAfter\", \"prefix\", \"bordered\", \"readOnly\", \"status\", \"controls\"]);\n\n  var prefixCls = getPrefixCls('input-number', customizePrefixCls);\n  var upIcon = /*#__PURE__*/React.createElement(UpOutlined, {\n    className: \"\".concat(prefixCls, \"-handler-up-inner\")\n  });\n  var downIcon = /*#__PURE__*/React.createElement(DownOutlined, {\n    className: \"\".concat(prefixCls, \"-handler-down-inner\")\n  });\n  var controlsTemp = typeof controls === 'boolean' ? controls : undefined;\n\n  if (_typeof(controls) === 'object') {\n    upIcon = typeof controls.upIcon === 'undefined' ? upIcon : /*#__PURE__*/React.createElement(\"span\", {\n      className: \"\".concat(prefixCls, \"-handler-up-inner\")\n    }, controls.upIcon);\n    downIcon = typeof controls.downIcon === 'undefined' ? downIcon : /*#__PURE__*/React.createElement(\"span\", {\n      className: \"\".concat(prefixCls, \"-handler-down-inner\")\n    }, controls.downIcon);\n  }\n\n  var _useContext = useContext(FormItemInputContext),\n      hasFeedback = _useContext.hasFeedback,\n      contextStatus = _useContext.status,\n      isFormItemInput = _useContext.isFormItemInput,\n      feedbackIcon = _useContext.feedbackIcon;\n\n  var mergedStatus = getMergedStatus(contextStatus, customStatus);\n  var mergeSize = customizeSize || size; // ===================== Disabled =====================\n\n  var disabled = React.useContext(DisabledContext);\n  var mergedDisabled = customDisabled || disabled;\n  var inputNumberClass = classNames((_classNames = {}, _defineProperty(_classNames, \"\".concat(prefixCls, \"-lg\"), mergeSize === 'large'), _defineProperty(_classNames, \"\".concat(prefixCls, \"-sm\"), mergeSize === 'small'), _defineProperty(_classNames, \"\".concat(prefixCls, \"-rtl\"), direction === 'rtl'), _defineProperty(_classNames, \"\".concat(prefixCls, \"-borderless\"), !bordered), _defineProperty(_classNames, \"\".concat(prefixCls, \"-in-form-item\"), isFormItemInput), _classNames), getStatusClassNames(prefixCls, mergedStatus), className);\n  var element = /*#__PURE__*/React.createElement(RcInputNumber, _extends({\n    ref: inputRef,\n    disabled: mergedDisabled,\n    className: inputNumberClass,\n    upHandler: upIcon,\n    downHandler: downIcon,\n    prefixCls: prefixCls,\n    readOnly: readOnly,\n    controls: controlsTemp\n  }, others));\n\n  if (prefix != null || hasFeedback) {\n    var _classNames2;\n\n    var affixWrapperCls = classNames(\"\".concat(prefixCls, \"-affix-wrapper\"), getStatusClassNames(\"\".concat(prefixCls, \"-affix-wrapper\"), mergedStatus, hasFeedback), (_classNames2 = {}, _defineProperty(_classNames2, \"\".concat(prefixCls, \"-affix-wrapper-focused\"), focused), _defineProperty(_classNames2, \"\".concat(prefixCls, \"-affix-wrapper-disabled\"), props.disabled), _defineProperty(_classNames2, \"\".concat(prefixCls, \"-affix-wrapper-sm\"), size === 'small'), _defineProperty(_classNames2, \"\".concat(prefixCls, \"-affix-wrapper-lg\"), size === 'large'), _defineProperty(_classNames2, \"\".concat(prefixCls, \"-affix-wrapper-rtl\"), direction === 'rtl'), _defineProperty(_classNames2, \"\".concat(prefixCls, \"-affix-wrapper-readonly\"), readOnly), _defineProperty(_classNames2, \"\".concat(prefixCls, \"-affix-wrapper-borderless\"), !bordered), _defineProperty(_classNames2, \"\".concat(className), !(addonBefore || addonAfter) && className), _classNames2));\n    element = /*#__PURE__*/React.createElement(\"div\", {\n      className: affixWrapperCls,\n      style: props.style,\n      onMouseUp: function onMouseUp() {\n        return inputRef.current.focus();\n      }\n    }, prefix && /*#__PURE__*/React.createElement(\"span\", {\n      className: \"\".concat(prefixCls, \"-prefix\")\n    }, prefix), cloneElement(element, {\n      style: null,\n      value: props.value,\n      onFocus: function onFocus(event) {\n        var _a;\n\n        setFocus(true);\n        (_a = props.onFocus) === null || _a === void 0 ? void 0 : _a.call(props, event);\n      },\n      onBlur: function onBlur(event) {\n        var _a;\n\n        setFocus(false);\n        (_a = props.onBlur) === null || _a === void 0 ? void 0 : _a.call(props, event);\n      }\n    }), hasFeedback && /*#__PURE__*/React.createElement(\"span\", {\n      className: \"\".concat(prefixCls, \"-suffix\")\n    }, feedbackIcon));\n  }\n\n  if (addonBefore != null || addonAfter != null) {\n    var _classNames4;\n\n    var wrapperClassName = \"\".concat(prefixCls, \"-group\");\n    var addonClassName = \"\".concat(wrapperClassName, \"-addon\");\n    var addonBeforeNode = addonBefore ? /*#__PURE__*/React.createElement(\"div\", {\n      className: addonClassName\n    }, addonBefore) : null;\n    var addonAfterNode = addonAfter ? /*#__PURE__*/React.createElement(\"div\", {\n      className: addonClassName\n    }, addonAfter) : null;\n    var mergedWrapperClassName = classNames(\"\".concat(prefixCls, \"-wrapper\"), wrapperClassName, _defineProperty({}, \"\".concat(wrapperClassName, \"-rtl\"), direction === 'rtl'));\n    var mergedGroupClassName = classNames(\"\".concat(prefixCls, \"-group-wrapper\"), (_classNames4 = {}, _defineProperty(_classNames4, \"\".concat(prefixCls, \"-group-wrapper-sm\"), size === 'small'), _defineProperty(_classNames4, \"\".concat(prefixCls, \"-group-wrapper-lg\"), size === 'large'), _defineProperty(_classNames4, \"\".concat(prefixCls, \"-group-wrapper-rtl\"), direction === 'rtl'), _classNames4), getStatusClassNames(\"\".concat(prefixCls, \"-group-wrapper\"), mergedStatus, hasFeedback), className);\n    element = /*#__PURE__*/React.createElement(\"div\", {\n      className: mergedGroupClassName,\n      style: props.style\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: mergedWrapperClassName\n    }, addonBeforeNode && /*#__PURE__*/React.createElement(NoFormStyle, {\n      status: true,\n      override: true\n    }, addonBeforeNode), cloneElement(element, {\n      style: null,\n      disabled: mergedDisabled\n    }), addonAfterNode && /*#__PURE__*/React.createElement(NoFormStyle, {\n      status: true,\n      override: true\n    }, addonAfterNode)));\n  }\n\n  return element;\n});\nexport default InputNumber;","import React, { useState } from 'react';\r\n\r\nimport Select from 'react-select';\r\nimport { Controller } from 'react-hook-form';\r\nimport './input.less';\r\nimport _ from 'lodash';\r\nimport { Input, Typography } from 'antd';\r\n\r\nconst SelectSearch = (props) => {\r\n  let classErrors = props.className;\r\n  const [values, setValues] = useState([])\r\n\r\n  const renderErrorMessage = () => {\r\n    if (props.errors) {\r\n      let exists = Object.keys(props.errors).includes(props.name);\r\n      let mesError = props.errors[props.name]?.message;\r\n      classErrors = _.isEmpty(mesError) ? `${props.className} basic-single` : `${props.className} is-invalid`;\r\n\r\n      if (exists) {\r\n        return (\r\n          <span className=\"error-message invalid-feedback\">\r\n            {props.errors[props.name]?.message} {props?.label?.toLowerCase()}\r\n          </span>\r\n        );\r\n      }\r\n    }\r\n    return <></>;\r\n  };\r\n\r\n  const customStyles = {\r\n    control: (provided, state) => ({\r\n      ...provided,\r\n      borderColor: '#d9d9d9',\r\n      minHeight: (props.isMulti && values?.length > 2) ? 'none' : '32px',\r\n      height: (props.isMulti && values?.length > 2) ? 'none' : '32px',\r\n      minWidth: '204px',\r\n      boxShadow: state.isFocused ? null : null,\r\n    }),\r\n\r\n    valueContainer: (provided, state) => ({\r\n      ...provided,\r\n      height: (props.isMulti && values?.length > 2) ? 'none' : '30.297px',\r\n      padding: '0 6px',\r\n    }),\r\n\r\n    input: (provided, state) => ({\r\n      ...provided,\r\n      margin: '0px',\r\n    }),\r\n    indicatorSeparator: (state) => ({\r\n      display: 'none',\r\n    }),\r\n    indicatorsContainer: (provided, state) => ({\r\n      ...provided,\r\n      height: (props.isMulti && values?.length > 2) ? 'none' : '30px',\r\n    }),\r\n  };\r\n\r\n  const renderLabel = () => (\r\n    <>\r\n      {props?.label !== '' && (\r\n        <Typography.Text>\r\n          {props.isRequired && !props.isShowText && <span className=\"is-required\">* </span>}\r\n          {`${props.label} :`}\r\n        </Typography.Text>\r\n      )}\r\n    </>\r\n  );\r\n\r\n  const getValueByOption = (value) => {\r\n    let result = ''\r\n    if (!props.isMulti) {\r\n\r\n      if (_.isEmpty(props?.options)) {\r\n        result = ''\r\n      } else {\r\n        let option = props?.options.find((c) => c.value === value)\r\n        result = option ? option : ''\r\n      }\r\n    }\r\n\r\n\r\n    if (props.isMulti && value?.length > 0) {\r\n      if (_.isEmpty(props?.options)) {\r\n        result = []\r\n      } else {\r\n        let option = props.options.filter((c) => value.map(x => x.value).includes(c.value))\r\n        result = option ? option : []\r\n      }\r\n    }\r\n\r\n    return result\r\n\r\n  }\r\n\r\n  const renderInputOfText = (onChange, value, ref, name) => {\r\n    setValues(value)\r\n    if (props.isShowText) {\r\n      return (\r\n        <span className=\"ant-typography\">\r\n          <strong>\r\n            {\r\n              // have truong hop value la 0\r\n              props.options && value ? props.options.find((x) => x.value == value)?.label : ''\r\n            }\r\n          </strong>\r\n        </span>\r\n      );\r\n    }\r\n    return (\r\n      <Select\r\n        isMulti={props.isMulti}\r\n        name=\"colors\"\r\n        options={props?.options}\r\n        className={`select-custom ${classErrors}`}\r\n        styles={customStyles}\r\n        defaultValue={props.defaultValue}\r\n        placeholder=\"\"\r\n        isDisabled={props.isDisabled}\r\n        value={getValueByOption(value)}\r\n        onChange={(val) => {\r\n          if (props.isMulti) {\r\n            onChange(val);\r\n            if (props.onChange) {\r\n              props.onChange(val);\r\n            }\r\n          } else {\r\n            onChange(val.value);\r\n            if (props.onChange) {\r\n              props.onChange(val.value);\r\n            }\r\n          }\r\n\r\n        }}\r\n      />\r\n    );\r\n  };\r\n\r\n  const renderInput = () => (\r\n    <>\r\n      <div style={{ width: props.isTitleInline ? 'calc(100% - 150px)' : '100%' }}>\r\n        <Controller\r\n          control={props.control}\r\n          id={props.id}\r\n          name={props.name}\r\n          defaultValue={props.defaultValue}\r\n          render={({ field: { onChange, value, ref, name } }) => renderInputOfText(onChange, value, ref, name)}\r\n        />\r\n\r\n        <div className=\"ant-form-item-explain-error\">{renderErrorMessage()}</div>\r\n      </div>\r\n    </>\r\n  );\r\n  const renderLayoutTitleInline = () => {\r\n    if (props.isTitleInline) {\r\n      return (\r\n        <>\r\n          <Input.Group compact>\r\n            <div style={{ width: '150px' }}>{renderLabel()}</div>\r\n            {renderInput()}\r\n          </Input.Group>\r\n        </>\r\n      );\r\n    }\r\n    return (\r\n      <>\r\n        {renderLabel()}\r\n        {renderInput()}\r\n      </>\r\n    );\r\n  };\r\n\r\n  return <div style={{ paddingBottom: '20px' }}>{renderLayoutTitleInline()}</div>;\r\n};\r\n\r\nexport default SelectSearch;\r\n","import * as api from '../../config/axios';\r\nexport const urlEndpointDealers = '/api/dealers/';\r\nexport const urlEndpointTableDealers = '/api/dealers';\r\nexport const urlEndpointTableDealersResult = '/api/dealers/dealersResult';\r\nexport const getDealersById = (id) => api.sendGet(urlEndpointDealers + id);\r\n\r\nexport const getTechnicalById = (id) => api.sendGet('/api/technical-requirement/' + id);\r\n\r\nexport const getDealerss = (data) => api.sendGet(urlEndpointDealers, data);\r\n\r\nexport const createDealers = (payload) =>\r\n  api.sendPost(urlEndpointDealers, {\r\n    id: payload.id,\r\n    input: payload,\r\n  });\r\n\r\nexport const updateDealers = (payload) => api.sendPost(urlEndpointDealers, payload);\r\n\r\nexport const deleteDealers = (payload) =>\r\n  api.sendDelete(urlEndpointDealers, {\r\n    data: { ids: payload },\r\n  });\r\n\r\n// export const dropdownDealerss = () => api.sendGet(urlEndpointDealers + 'dropdown', '');\r\n","/** @format */\r\n\r\nimport * as api from '../../config/axios';\r\nexport const urlEndpointTechnicalBusiness = '/api/technical-requirement/';\r\nexport const urlEndpointTableTechnicalBusiness = '/api/technical-requirement';\r\nexport const urlAssignmentTechnicalBusiness = '/api/technical-requirement-task/assign-task';\r\n\r\nexport const getTechnicalBusinessById = (id) => {\r\n  api.sendGet(urlEndpointTechnicalBusiness + id);\r\n};\r\n\r\nexport const getTechnicalBusinesss = (data) => {\r\n  api.sendGet(urlEndpointTechnicalBusiness, data);\r\n};\r\n\r\nexport const getReceiverDropdown = () => api.sendGet(urlEndpointTechnicalBusiness + 'receiver-dropdown/');\r\n\r\nexport const createTechnicalBusiness = (payload) =>\r\n  api.sendPost(urlEndpointTechnicalBusiness, {\r\n    id: payload.id,\r\n    input: payload,\r\n  });\r\n\r\nexport const updateTechnicalBusiness = (payload) => api.sendPost(urlEndpointTechnicalBusiness, payload);\r\n\r\nexport const deleteTechnicalBusinesss = (payload) =>\r\n  api.sendDelete(urlEndpointTechnicalBusiness, {\r\n    data: { ids: payload },\r\n  });\r\n\r\nexport const assignTaskTechnicalBusinesss = (payload) => api.sendPost(urlAssignmentTechnicalBusiness, payload);;\r\n","export const MODE = {\r\n    CREATE: 1,\r\n    EDIT: 2,\r\n    DETAIL: 3\r\n}","export const getToDay = () => {\r\n  return new Date().toISOString().substring(0, 10)\r\n};","export const listResult = [\r\n    { value: 0, label: \"Đang thực hiện\", color: \"info\" },\r\n    { value: 1, label: \"Thành Công\", color: \"success\" },\r\n    { value: 2, label: \"Thất bại\", color: \"error\" }\r\n]\r\n\r\nexport const listResultTask = [\r\n    { value: 0, label: \"Chờ tiếp nhận\", color: \"warning\" },\r\n    { value: 1, label: \"Đang thực hiện\", color: \"info\" },\r\n    { value: 2, label: \"Từ chối\", color: \"error\" },\r\n    { value: 3, label: \"Hoàn thành\", color: \"success\" },\r\n    { value: 4, label: \"Thêm mới\", color: \"success\" }\r\n]\r\n\r\nexport const STATUS_TASK = {\r\n    CHO_TIEP_NHAN: 0,\r\n    DANG_THUC_HIEN: 1,\r\n    TU_CHOI: 2,\r\n    HOAN_THANH: 3,\r\n    THEM_MOI: 4\r\n}","import React from 'react';\r\nimport \"./status.less\"\r\n\r\nconst Status = (props) => {\r\n  const { text, color, bgColor, keys = 'success' } = props;\r\n  const listEnum =\r\n  {\r\n    success: {\r\n      color: \"green\",\r\n      backgroundColor: \"#b7eb8f\"\r\n    },\r\n    error: {\r\n      color: \"#f55442\",\r\n      backgroundColor: \"#ffccc7\"\r\n    },\r\n    info: {\r\n      color: \"#1890ff\",\r\n      backgroundColor: \"#91caff\",\r\n    },\r\n    warning: {\r\n      color: \"#f56a00\",\r\n      backgroundColor: \"#fccca7\",\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className='status-color-alert' style={{ color: listEnum[keys].color, backgroundColor: listEnum[keys].backgroundColor }}>\r\n      {text}\r\n    </div>\r\n\r\n  );\r\n};\r\n\r\nexport default Status;\r\n","import { Form, message } from 'antd';\r\nimport React, { createContext, useEffect, useState } from 'react';\r\nimport { getCustomerDropdown } from 'services/customer/index';\r\nimport { getEmployeeDropDown } from 'services/employee/index';\r\nimport { getContactPersonByCustomerId } from 'services/contact-person/index';\r\nimport { formatDDMMYYYY, today, getDateFormat } from 'utils/formatDate';\r\nimport * as actions from 'redux/global/actions';\r\nimport { useDispatch } from 'react-redux';\r\nimport { BLANK_VALUE, SEARCH_CRITERIA } from 'static/Constants';\r\nimport { DELETE_ERROR, DELETE_SUCCESS, SAVE_ERROR, SAVE_SUCCESS } from 'utils/common/messageContants';\r\nimport * as api from 'services/technicalBusiness/requestService';\r\nimport _ from 'lodash';\r\n\r\nconst option = {};\r\nconst searchCriteria = SEARCH_CRITERIA.ALL;\r\n\r\nexport const TechnicalBusinessRequestContext = createContext({});\r\n\r\nexport const TechnicalBusinessRequestProvider = ({ children }) => {\r\n  const [isOpen, setIsOpen] = useState(false);\r\n  const [isUpdate, setIsUpdate] = useState(false);\r\n  const [isCreate, setIsCreate] = useState(false);\r\n  const [customerOptions, setCustomerOptions] = useState([]);\r\n  const [employeeOptions, setEmployeeOptions] = useState([]);\r\n  const [personContactOptions, setPersonContactOptions] = useState([]);\r\n  const [personSelected, setPersonSelected] = useState({});\r\n  const [form] = Form.useForm();\r\n  const [formPhanCong] = Form.useForm();\r\n  const [supportPersonIdsOrigin, setSupportPersonIdsOrigin] = useState([])\r\n\r\n  const dispatch = useDispatch();\r\n  const [isPhanCong, setIsPhanCong] = useState(false);\r\n\r\n  useEffect(() => {\r\n    dispatch(actions.changeRibbonActions(option));\r\n    dispatch(actions.updateSearchCriteria(searchCriteria));\r\n  }, [dispatch]);\r\n\r\n  useEffect(() => {\r\n    getOptions();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    setDefaultOption(personContactOptions, 'requirementPersonId');\r\n  }, [personContactOptions]);\r\n\r\n  const getOptions = () => {\r\n    getCustomerDropdown().then((res) => {\r\n      const customerOption = res.data.map((x) => {\r\n        return {\r\n          value: x.id,\r\n          label: x.name,\r\n        };\r\n      });\r\n      setCustomerOptions(customerOption);\r\n    });\r\n    getEmployeeDropDown().then((res) => {\r\n      const empOption = res.data.map((x) => {\r\n        return {\r\n          value: x.id,\r\n          label: x.name,\r\n        };\r\n      });\r\n      setEmployeeOptions(empOption);\r\n    });\r\n  };\r\n\r\n  const updatePersonContactList = (customerId) => {\r\n    if (customerId) {\r\n      getContactPersonByCustomerId(customerId).then((res) => {\r\n        const options = res.data.map((x) => {\r\n          return {\r\n            value: x.id,\r\n            label: x.name,\r\n          };\r\n        });\r\n        setPersonContactOptions(options);\r\n      });\r\n    } else {\r\n      setPersonContactOptions([]);\r\n    }\r\n  };\r\n\r\n  const setDefaultOption = (options, name) => {\r\n    const fielValue = form.getFieldValue(name);\r\n    if (fielValue) {\r\n      form.setFieldValue(name, fielValue);\r\n    } else {\r\n      form.setFieldValue(name, options[0]?.value);\r\n    }\r\n  };\r\n\r\n  const convertDateValue = (data) => {\r\n    let dataClone = {\r\n      ...data,\r\n      requirementDate: getDateFormat(data.requirementDate),\r\n      plannedStartDate: getDateFormat(data.plannedStartDate),\r\n      completedDate: getDateFormat(data.completedDate),\r\n      requirementDate: getDateFormat(data.requirementDate),\r\n    };\r\n\r\n    const techAssign = data.technicalRequirementAssignments;\r\n    if (!_.isEmpty(techAssign)) {\r\n      let techDate = {\r\n        ...techAssign,\r\n        plannedStartDate: getDateFormat(techAssign.plannedStartDate),\r\n        startDate: getDateFormat(techAssign.startDate),\r\n        dueDate: getDateFormat(techAssign.dueDate),\r\n        closedDate: getDateFormat(techAssign.closedDate),\r\n      };\r\n\r\n      dataClone = { ...dataClone, technicalRequirementAssignments: techDate };\r\n    }\r\n\r\n    return dataClone;\r\n  };\r\n\r\n  const handleClosePopup = () => {\r\n    setIsOpen(false);\r\n    resetFields();\r\n  };\r\n\r\n  const handleCancel = () => {\r\n    isCreate ? setIsOpen(false) : setIsUpdate(false);\r\n  };\r\n\r\n  const handleEdit = () => {\r\n    setIsUpdate(true);\r\n  };\r\n\r\n  const readGrid = (refresh) => {\r\n    dispatch(actions.refreshGrid(refresh));\r\n  };\r\n\r\n  const handlePhanCong = (payload) => {\r\n       api.assignTaskTechnicalBusinesss(payload).then((res) => {\r\n      if (res.isSuccess) {\r\n        message.success(SAVE_SUCCESS);\r\n        readGrid(true)\r\n      }else{\r\n        message.error(SAVE_ERROR);\r\n      }\r\n      setIsPhanCong(false);\r\n    });\r\n  };\r\n\r\n  const getDataById = (id) => {\r\n    api.getTechnicalBusinessById(id).then( (res) => {\r\n      if (res.isSuccess) {\r\n        return res.data\r\n      }else{\r\n        message.error(\"Lỗi khi lấy thông tin\");\r\n      }\r\n    })\r\n  }\r\n\r\n  const handleDelete = (ids) => {\r\n    api.deleteTechnicalBusinesss(ids).then((res) => {\r\n      if (res.isSuccess) {\r\n        message.success(DELETE_SUCCESS);\r\n        readGrid(true);\r\n      } else {\r\n        message.error(DELETE_ERROR);\r\n      }\r\n    });\r\n  };\r\n\r\n  const resetFields = () => {\r\n    form.resetFields();\r\n  };\r\n\r\n  const setValueDefaut = (dataDefault) => {\r\n    resetFields();\r\n    if (dataDefault) {\r\n      let dataCurrent = form.getFieldsValue();\r\n      dataCurrent = { ...dataCurrent, ...dataDefault };\r\n      innitData(dataCurrent);\r\n    }\r\n  };\r\n\r\n  const innitData = (data) => {\r\n    form.setFieldsValue(data);\r\n  };\r\n\r\n  const innitDataPhanCong = (data) => {\r\n    setSupportPersonIdsOrigin(data.supportPersonIds)\r\n    formPhanCong.setFieldsValue(data)\r\n  }\r\n\r\n  const valueConfig = {\r\n    form,\r\n    formPhanCong,\r\n    isOpen,\r\n    customerOptions,\r\n    employeeOptions,\r\n    personContactOptions,\r\n    isUpdate,\r\n    isCreate,\r\n    personSelected,\r\n    isPhanCong,\r\n    supportPersonIdsOrigin,\r\n    setPersonSelected,\r\n    setIsOpen,\r\n    setIsUpdate,\r\n    handleCancel,\r\n    updatePersonContactList,\r\n    handleEdit,\r\n    setIsCreate,\r\n    handleClosePopup,\r\n    convertDateValue,\r\n    readGrid,\r\n    setIsPhanCong,\r\n    handlePhanCong,\r\n    resetFields,\r\n    innitData,\r\n    setValueDefaut,\r\n    handleDelete,\r\n    innitDataPhanCong,\r\n    getDataById,\r\n  };\r\n\r\n  return (\r\n    <TechnicalBusinessRequestContext.Provider value={valueConfig}>{children}</TechnicalBusinessRequestContext.Provider>\r\n  );\r\n};\r\n","/** @format */\r\n\r\nimport * as api from '../../config/axios';\r\nexport const urlEndpointContactPerson = '/api/contact-persons/';\r\nexport const urlEndpointTableContactPerson = '/api/contact-persons';\r\n\r\nexport const getContactPersonByCustomerId = (customerId) =>\r\n  api.sendGet(`${urlEndpointContactPerson}by-customer/?customerId=${customerId}`);","/* eslint-disable react/prop-types */\r\nimport React, { useEffect, useMemo, useState } from 'react';\r\nimport { DatePicker, Form, Input, Typography, Button, Modal, Select, message, Row, Col } from 'antd';\r\nimport * as api from 'services/technicalBusiness/requestService';\r\nimport * as enums from 'common/enum';\r\nimport { SAVE_ERROR, SAVE_SUCCESS } from 'utils/common/messageContants';\r\nimport { useContext } from 'react';\r\nimport { TechnicalBusinessRequestContext } from '../context/technicalBusinessRequest';\r\nimport { formatDDMMYYYY, today, getDateFormat } from 'utils/formatDate';\r\nimport 'pages/employee/components/staffInfo.less';\r\n\r\nconst { TextArea } = Input;\r\nconst { Text } = Typography;\r\n\r\nexport const LableCustom = (props) => {\r\n  let { value, type } = props;\r\n  if (Object.prototype.toString.call(value) === '[object Date]' || type == 'date') {\r\n    value = formatDDMMYYYY(value);\r\n  }\r\n  return <Text strong>{value}</Text>;\r\n};\r\n\r\nexport const PhanCong = (props) => {\r\n  const { employeeOptions, isPhanCong, setIsPhanCong, handlePhanCong, formPhanCong, supportPersonIdsOrigin } =\r\n    useContext(TechnicalBusinessRequestContext);\r\n  const [optionsMain, setOptionsMain] = useState(employeeOptions);\r\n  const [optionsSupport, setOptionsSupport] = useState(employeeOptions);\r\n  const formItemLayout = {\r\n    labelCol: { span: 10 },\r\n    wrapperCol: { span: 20 },\r\n  };\r\n  const [form] = Form.useForm(formPhanCong);\r\n\r\n  useEffect(() => {\r\n    setOptionsMain(employeeOptions);\r\n    setOptionsSupport(employeeOptions);\r\n  }, [employeeOptions]);\r\n\r\n  if (!isPhanCong) return null;\r\n\r\n  const onFinish = (values) => {\r\n    let supportPersonDeleteIds = [];\r\n    if (supportPersonIdsOrigin)\r\n      supportPersonDeleteIds = supportPersonIdsOrigin.filter((x) => !values.supportPersonIds.includes(x));\r\n    const payload = {\r\n      ...values,\r\n      supportPersonDeleteIds: supportPersonDeleteIds,\r\n    };\r\n    handlePhanCong(payload);\r\n    setIsPhanCong(false);\r\n  };\r\n\r\n  const handleCancel = () => {\r\n    form.resetFields();\r\n    setIsPhanCong(false);\r\n  };\r\n\r\n  const onChangePersonMain = (person) => {\r\n    if (person) {\r\n      const newList = employeeOptions.filter((x) => x.value != person);\r\n      setOptionsSupport(newList);\r\n    }\r\n  };\r\n\r\n  const onChangePersonSuport = (state) => {\r\n    const persons = form.getFieldValue('supportPersonIds');\r\n\r\n    if (!state && persons) {\r\n      const newList = employeeOptions.filter((x) => !persons.includes(x.value));\r\n      setOptionsMain(newList);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Modal\r\n        title={'Phân công'}\r\n        open={isPhanCong}\r\n        form={form}\r\n        width={500}\r\n        onCancel={handleCancel}\r\n        footer={[\r\n          <Button form=\"phan-cong-form\" key=\"back\" type=\"button\" onClick={handleCancel}>\r\n            Hủy\r\n          </Button>,\r\n          <Button form=\"phan-cong-form\" key=\"submit\" type=\"primary\" htmlType=\"submit\">\r\n            Lưu\r\n          </Button>,\r\n        ]}\r\n      >\r\n        <Form id=\"phan-cong-form\" form={form} labelAlign=\"left\" onFinish={onFinish} {...formItemLayout}>\r\n          <Form.Item name={'technicalRequirementId'} hidden={true}></Form.Item>\r\n          <Form.Item name={'mainPersonId'} label=\"Người chịu trách nhiệm chính\">\r\n            <Select options={optionsMain} onChange={onChangePersonMain}></Select>\r\n          </Form.Item>\r\n          <Form.Item name={'supportPersonIds'} label=\"Người hỗ trợ\">\r\n            <Select mode=\"multiple\" options={optionsSupport} onDropdownVisibleChange={onChangePersonSuport}></Select>\r\n          </Form.Item>\r\n          {/* <Form.Item name={'plannedStartDate'} label=\"Ngày lập kế hoạch\">\r\n            <DatePicker />\r\n          </Form.Item>\r\n          <Form.Item name={'startDate'} label=\"Ngày bắt đầu\">\r\n            <DatePicker />\r\n          </Form.Item>\r\n          <Form.Item name={'dueDate'} label=\"Dự kiến hoàn thành\">\r\n            <DatePicker />\r\n          </Form.Item>\r\n          <Form.Item name={'closedDate'} label=\"Ngày hoàn thành\">\r\n            <DatePicker />\r\n          </Form.Item>\r\n          <Form.Item name={'note'} label=\"Ghi chú\">\r\n            <TextArea rows={2} />\r\n          </Form.Item> */}\r\n        </Form>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nexport const TechnicalBusinessRequestComponon = (props) => {\r\n  const {\r\n    setIsOpen,\r\n    isUpdate,\r\n    customerOptions,\r\n    form,\r\n    updatePersonContactList,\r\n    personContactOptions,\r\n    isCreate,\r\n    readGrid,\r\n  } = props;\r\n\r\n  // const {\r\n  //   setIsOpen,\r\n  //   isUpdate,\r\n  //   customerOptions,\r\n  //   form,\r\n  //   updatePersonContactList,\r\n  //   personContactOptions,\r\n  //   isCreate,\r\n  //   readGrid,\r\n  // } = useContext(TechnicalBusinessRequestContext);\r\n\r\n  const colLg = isUpdate ? 12 : 12;\r\n  const rowGutter = 20;\r\n  const fullLg = 24;\r\n  const formItemLayout = {\r\n    labelCol: { span: isUpdate ? 24 : 12 },\r\n    wrapperCol: { span: isUpdate ? 24 : 12 },\r\n  };\r\n\r\n  const textAreaItemLayout = {\r\n    labelCol: { span: isUpdate ? 24 : 12 },\r\n    wrapperCol: { span: isUpdate ? 24 : 12 },\r\n  };\r\n\r\n  const onFinish = (values) => {\r\n    if (!isCreate) {\r\n      let id = form.getFieldValue('id');\r\n      values = { ...values, id: id };\r\n    }\r\n\r\n    api.createTechnicalBusiness(values).then((res) => {\r\n      if (res.isSuccess) {\r\n        form.resetFields();\r\n        setIsOpen(false);\r\n        message.success(SAVE_SUCCESS);\r\n        readGrid(true);\r\n      } else {\r\n        message.error(SAVE_ERROR);\r\n      }\r\n    });\r\n  };\r\n\r\n  const onChangeCustomer = (customerId) => {\r\n    updatePersonContactList(customerId);\r\n    form.setFieldValue('requirementPersonId', '');\r\n  };\r\n\r\n  const configRule = {\r\n    customerId: [{ required: isUpdate, message: 'Vui lòng nhập Mã Khách hàng' }],\r\n    requirementPersonId: [{ required: isUpdate, message: 'Vui lòng nhập Người yêu cầu' }],\r\n    plannedStartDate: [{ required: isUpdate, message: 'Vui lòng nhập Ngày thực hiện' }],\r\n    requirementDate: [{ required: isUpdate, message: 'Vui lòng nhập Ngày yêu cầu' }],\r\n  };\r\n\r\n  const onDropdownVisibleChange = (value, ssss) => {\r\n    console.log('onDropdownVisibleChange', value);\r\n    console.log('onDropdownVisibleChange ssssssss', ssss);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Form\r\n        id=\"technical-requirement\"\r\n        form={form}\r\n        labelAlign=\"left\"\r\n        layout={isUpdate ? 'vertical' : 'horizontal'}\r\n        onFinish={onFinish}\r\n        style={{ display: 'grid' }}\r\n        {...formItemLayout}\r\n      >\r\n        <Row gutter={rowGutter}>\r\n          <Col lg={colLg}>\r\n            {isUpdate ? (\r\n              <Form.Item name=\"customerId\" label=\"Mã Khách hàng\" rules={configRule['customerId']}>\r\n                <Select\r\n                  options={customerOptions}\r\n                  onChange={onChangeCustomer}\r\n                  defaultValue={customerOptions[0]}\r\n                ></Select>\r\n              </Form.Item>\r\n            ) : (\r\n              <Form.Item name=\"customerName\" label=\"Mã Khách hàng\">\r\n                <LableCustom />\r\n              </Form.Item>\r\n            )}\r\n          </Col>\r\n          <Col lg={colLg}>\r\n            {isUpdate ? (\r\n              <Form.Item name=\"requirementPersonId\" label=\"Người yêu cầu\" rules={configRule['requirementPersonId']}>\r\n                <Select\r\n                  options={personContactOptions}\r\n                  onDeselect={onDropdownVisibleChange}\r\n                  defaultValue={personContactOptions[0]}\r\n                ></Select>\r\n              </Form.Item>\r\n            ) : (\r\n              <Form.Item name=\"contactPersonName\" label=\"Người yêu cầu\">\r\n                <LableCustom />\r\n              </Form.Item>\r\n            )}\r\n          </Col>\r\n          <Col lg={colLg} hidden={isUpdate}>\r\n            <Form.Item name=\"customerName\" label=\"Tên Khách hàng\">\r\n              <LableCustom />\r\n            </Form.Item>\r\n          </Col>\r\n\r\n          <Col lg={colLg}>\r\n            {isUpdate ? (\r\n              <Form.Item name=\"requirementDate\" label=\"Ngày yêu cầu\" rules={configRule['requirementDate']}>\r\n                <DatePicker placeholder=\"Chọn ngày\" format={'DD-MM-YYYY'} defaultValue={today()}></DatePicker>\r\n              </Form.Item>\r\n            ) : (\r\n              <Form.Item name=\"requirementDate\" label=\"Ngày yêu cầu\">\r\n                <LableCustom type=\"date\" />\r\n              </Form.Item>\r\n            )}\r\n          </Col>\r\n\r\n          <Col lg={colLg}>\r\n            <Form.Item name=\"contactPersonPosition\" label=\"Chức vụ\">\r\n              {isUpdate ? <Input /> : <LableCustom />}\r\n            </Form.Item>\r\n          </Col>\r\n          <Col lg={24}>\r\n            <Form.Item name=\"customerAddress\" label=\"Địa chỉ\">\r\n              {isUpdate ? <Input /> : <LableCustom />}\r\n            </Form.Item>\r\n          </Col>\r\n\r\n          <Col lg={colLg} hidden={!isUpdate}>\r\n            <Form.Item name=\"type\" label=\"Loại\">\r\n              {isUpdate ? <Select options={enums.TechnicalRequirementTypeOptions}></Select> : <LableCustom />}\r\n            </Form.Item>\r\n          </Col>\r\n\r\n          <Col lg={fullLg} hidden={true}>\r\n            <Form.Item name=\"completedNote\" label=\"Nội dung hoàn thành\" {...textAreaItemLayout}>\r\n              <TextArea rows={3} disabled={!isUpdate} />\r\n            </Form.Item>\r\n          </Col>\r\n\r\n          <Col lg={colLg}>\r\n            <Form.Item name=\"plannedStartDate\" label=\"Ngày thực hiện\" rules={configRule['plannedStartDate']}>\r\n              {isUpdate ? (\r\n                <DatePicker\r\n                  placeholder=\"Chọn ngày\"\r\n                  format={'DD-MM-YYYY'}\r\n                  defaultValue={today()}\r\n                  disabledDate={(current) => current && current < today()}\r\n                ></DatePicker>\r\n              ) : (\r\n                <LableCustom type=\"date\" />\r\n              )}\r\n            </Form.Item>\r\n          </Col>\r\n          <Col lg={colLg}>\r\n            <Form.Item name=\"customerPhone\" label=\"Điện thoại\">\r\n              {isUpdate ? <Input /> : <LableCustom />}\r\n            </Form.Item>\r\n          </Col>\r\n          <Col lg={24}>\r\n            <Form.Item\r\n              name=\"contentRequirement\"\r\n              label=\"Nội dung yêu cầu\"\r\n              {...textAreaItemLayout}\r\n              style={{ whiteSpace: 'pre-wrap' }}\r\n            >\r\n              {isUpdate ? <TextArea rows={3} disabled={!isUpdate} /> : <LableCustom />}\r\n            </Form.Item>\r\n          </Col>\r\n        </Row>\r\n      </Form>\r\n    </>\r\n  );\r\n};\r\n\r\nexport const TechnicalBusinessRequestPopup = (props) => {\r\n  const {\r\n    isOpen,\r\n    handleCancel,\r\n    form,\r\n    isUpdate,\r\n    handleEdit,\r\n    handleClosePopup,\r\n\r\n    setIsOpen,\r\n    customerOptions,\r\n    updatePersonContactList,\r\n    personContactOptions,\r\n    isCreate,\r\n    readGrid,\r\n  } = useContext(TechnicalBusinessRequestContext);\r\n\r\n  const renderBtnFooter = () => {\r\n    const actionSave = [\r\n      <Button form=\"technical-requirement\" key=\"back\" onClick={() => handleCancel()}>\r\n        Hủy\r\n      </Button>,\r\n      <Button form=\"technical-requirement\" key=\"submit\" type=\"primary\" htmlType=\"submit\">\r\n        Lưu\r\n      </Button>,\r\n    ];\r\n\r\n    const actionEdit = [\r\n      <Button form=\"technical-requirement\" key=\"edit\" type=\"primary\" onClick={() => handleEdit()}>\r\n        Chỉnh sửa\r\n      </Button>,\r\n    ];\r\n\r\n    return isUpdate ? actionSave : actionEdit;\r\n  };\r\n\r\n  const configForm = {\r\n    setIsOpen: { setIsOpen },\r\n    isUpdate: { isUpdate },\r\n    customerOptions: { customerOptions },\r\n    form: { form },\r\n    updatePersonContactList: { updatePersonContactList },\r\n    personContactOptions: { personContactOptions },\r\n    isCreate: { isCreate },\r\n    readGrid: { readGrid },\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Modal\r\n        title={'Yêu cầu Khách hàng'}\r\n        open={isOpen}\r\n        form={form}\r\n        width={800}\r\n        onCancel={() => handleClosePopup()}\r\n        footer={renderBtnFooter()}\r\n      >\r\n        <TechnicalBusinessRequestComponon\r\n          setIsOpen={setIsOpen}\r\n          isUpdate={isUpdate}\r\n          customerOptions={customerOptions}\r\n          form={form}\r\n          updatePersonContactList={updatePersonContactList}\r\n          personContactOptions={personContactOptions}\r\n          isCreate={isCreate}\r\n          readGrid={readGrid}\r\n        />\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n","import React, { useEffect, useState } from 'react';\r\nimport { Table, Form, Input, InputNumber, Typography, Button, Row, Space } from 'antd';\r\nimport './EmployeeAssign.less';\r\nimport _ from 'lodash';\r\nimport ButtonTooltip from 'common/components/Buttons/ButtonToolTip';\r\nimport { PrimaryButton } from 'common/components/Buttons';\r\nimport { DeleteOutlined, InfoCircleOutlined } from '@ant-design/icons';\r\nimport { listResultTask } from 'pages/dealers/enum';\r\nimport Status from 'common/components/status/Status';\r\n\r\nconst EmployeeAssign = ({ hideButton, originData = [], rowKey = 'id', handleChangeData, ...rest }) => {\r\n  const [formInstance] = Form.useForm();\r\n  const [data, setData] = useState(originData);\r\n  const [editingKey, setEditingKey] = useState('');\r\n  const [isAdding, setAdding] = useState(false);\r\n\r\n  useEffect(() => {\r\n    setData(originData);\r\n  }, [originData]);\r\n\r\n  const isEditing = (index) => index === editingKey;\r\n\r\n  const onDeleteRecord = (record, index) => {\r\n    const newData = [...data];\r\n    newData.splice(index, 1);\r\n    setData(newData);\r\n    handleChangeData && handleChangeData(newData);\r\n  };\r\n\r\n  const columns = [\r\n    {\r\n      title: 'Chịu trách nhiệm chính',\r\n      dataIndex: 'nameEmpMain',\r\n    },\r\n    {\r\n      title: 'Hổ trợ',\r\n      dataIndex: 'empSupport',\r\n      editable: false,\r\n      render: (_, record, index) => {\r\n        let empSupports = ''\r\n        if (record.empSupport) {\r\n          if (Array.isArray(record.empSupport)) {\r\n            empSupports = record.empSupport.map(x => x.label).toString()\r\n          }\r\n        }\r\n        return <p>{empSupports}</p>\r\n      }\r\n    },\r\n    {\r\n      title: 'Nội dung',\r\n      dataIndex: 'contentAssign',\r\n      editable: false\r\n    },\r\n    {\r\n      title: 'Trạng thái',\r\n      dataIndex: 'state',\r\n      width: '130px',\r\n      render: (_, record) => <Status text={listResultTask[record.state].label} keys={listResultTask[record.state].color} />,\r\n    },\r\n    {\r\n      title: '',\r\n      dataIndex: '',\r\n      width: '60px',\r\n      render: (_, record, index) => {\r\n        return (\r\n          <>\r\n            {record.isDelete && (\r\n              <Button\r\n                type=\"danger\"\r\n                onClick={() => onDeleteRecord(record, index)}\r\n                size=\"small\"\r\n              >\r\n                <DeleteOutlined />\r\n              </Button>\r\n            )}\r\n\r\n            {record.reject && (\r\n              <div>\r\n                <ButtonTooltip tip={record.reject}>\r\n                  <PrimaryButton icon={<InfoCircleOutlined />}></PrimaryButton>\r\n                </ButtonTooltip>\r\n              </div>\r\n            )}\r\n          </>\r\n        )\r\n      },\r\n    },\r\n  ];\r\n  let col = hideButton ? columns.slice(0, columns.length - 1) : columns\r\n  const columnsWithEdit = col.map((col) => {\r\n    if (!col.editable) {\r\n      return col;\r\n    }\r\n    return {\r\n      ...col,\r\n      onCell: (record, index) => ({\r\n        index,\r\n        record,\r\n        inputType: 'text',\r\n        dataIndex: col.dataIndex,\r\n        title: col.title,\r\n        editing: isEditing(index),\r\n        isAdding: isAdding,\r\n        rowLength: data.length,\r\n      }),\r\n    };\r\n  });\r\n\r\n  return (\r\n    <Form className=\"grid-paticipant\" form={formInstance}>\r\n      <Table\r\n        size=\"small\"\r\n        components={{\r\n          body: {\r\n            cell: EditableCell,\r\n          },\r\n        }}\r\n        bordered\r\n        dataSource={data.filter(x => !x.isDeleted)}\r\n        columns={columnsWithEdit}\r\n        rowClassName=\"editable-row\"\r\n        pagination={false}\r\n        scroll={{ y: 200 }}\r\n        title={() => (\r\n          <Row className=\"grid-paticipant__title\" align=\"space-between\" style={{ marginBottom: '8px' }}>\r\n            Danh sách người nhận yêu cầu\r\n          </Row>\r\n        )}\r\n        rowKey=\"id\"\r\n      />\r\n    </Form>\r\n  );\r\n};\r\n\r\nEmployeeAssign.propTypes = {};\r\nexport default EmployeeAssign;\r\n\r\nconst EditableCell = ({\r\n  editing,\r\n  dataIndex,\r\n  title,\r\n  inputType,\r\n  record,\r\n  index,\r\n  children,\r\n  isAdding,\r\n  rowLength,\r\n  ...restProps\r\n}) => {\r\n  const inputNode = inputType === 'number' ? <InputNumber /> : <Input />;\r\n\r\n  return (\r\n    <td {...restProps}>\r\n      {editing || (isAdding && index === rowLength - 1) ? (\r\n        <>\r\n          <Form.Item\r\n            name={dataIndex}\r\n            style={{ margin: 0 }}\r\n            rules={[\r\n              {\r\n                required: true,\r\n                message: `Nhập ${title}!`,\r\n              },\r\n            ]}\r\n          >\r\n            {inputNode}\r\n          </Form.Item>\r\n        </>\r\n      ) : (\r\n        children\r\n      )}\r\n    </td>\r\n  );\r\n};\r\n"],"sourceRoot":""}